jobs:
- job: ${{ parameters.OS_NAME }}_${{ parameters.BUILD_SYSTEM }}_${{ parameters.BUILD_TYPE }}_${{ parameters.MODE }}
  displayName: '${{ parameters.OS_NAME }} ${{ parameters.BUILD_SYSTEM }}: ${{ parameters.BUILD_TYPE }}, ${{ parameters.MODE }}'

  timeoutInMinutes: 0

  pool:
      vmImage: vs2017-win2016

  variables:
    ${{ each pair in parameters }}:
      ${{ pair.key }}: ${{ pair.value }}

  steps:
  - pwsh: .ci\appveyor\dump-vm-specs.ps1
    displayName: Dump VM specs

  - pwsh: .ci\appveyor\increase-pagefile-size.ps1
    displayName: Increase page file size

  - script: set
    displayName: Dump environment variables

  # We will install the latest version later on.
  - pwsh: |
      $products = Get-CimInstance -ClassName Win32_Product -Filter "Name like 'Microsoft MPI%'"
      foreach ($p in $products) {
        echo "Uninstalling $($p.Name)"
        Invoke-CimMethod -InputObject $p -MethodName Uninstall
      }
    condition: and(succeeded(), startsWith(variables.MODE, 'dm'))
    displayName: Remove existing MSMPI

  - script: |
      choco install msys2 --params "/InstallDir:c:\msys64"
    displayName: Install MSYS2

  - task: BatchScript@1
    displayName: Setup dependencies
    inputs:
      filename: .ci\appveyor\setup-dependencies.bat
      modifyEnvironment: true

  - script: call .ci\appveyor\install-wrf.bat
    displayName: Install WRF

  # In Azure Pipeline builds, the repository folder is not named after the repository name.
  # To avoid having to pass a different folder to the CMake config in install-wps.bat,
  # we symlink the repository to the "WRF" folder.
  - script: mklink /J ..\WRF .
    displayName: Symlink repository as "WRF" for convenience

  - script: |
      cd ..
      git clone --depth=100 --no-single-branch https://github.com/%WPS_REPO%.git WPS
      cd WPS
      git checkout %WPS_COMMIT%
      git log --oneline -n 1
    displayName: Download WPS

  - script: call ..\WPS\.ci\appveyor\install-wps.bat
    displayName: Install WPS

  - template: wats_run.yml

steps:
- ${{ if eq(parameters.OS_NAME, 'Windows') }}:
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: build/install
      includeRootFolder: false
      archiveType: zip
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName)-$(NESTING)_nesting-$(MODE)-x64-$(OS_NAME)-$(BUILD_TYPE).zip' 
    displayName: Create distribution package

- ${{ if not(eq(parameters.OS_NAME, 'Windows')) }}:
  - bash: $(run) .ci/unix/delocate.sh
    displayName: Delocate

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: build/install
      includeRootFolder: false
      archiveType: tar
      tarCompression: xz
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName)-$(NESTING)_nesting-$(MODE)-x64-$(OS_NAME)-$(BUILD_TYPE).tar.xz' 
    displayName: Create distribution package

- bash: |
    set -ex
    cd "$(Build.ArtifactStagingDirectory)"
    # CentOS packages will run on most glibc-based Linux distributions
    find . -name '*CentOS*' -exec bash -c 'mv $0 ${0/CentOS/Linux}' {} \;
    # Rename all files to lowercase
    for file in $(ls); do mv ${file} $(echo ${file} | tr '[:upper:]' '[:lower:]'); done
  displayName: Rename package files

# not strictly needed
- task: PublishBuildArtifacts@1
  displayName: Store distribution package
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)
    artifactName: dist_$(OS_NAME)_$(BUILD_SYSTEM)_$(BUILD_TYPE)_$(MODE)

- task: GithubRelease@0 
  displayName: Create GitHub Draft Release
  inputs:
    gitHubConnection: WRF-CMake-releases
    repositoryName: WRF-CMake/wrf
    action: edit # will create if not existing
    tag: $(Build.SourceBranchName)
    isDraft: true
    isPreRelease: true
    addChangeLog: false
    assetUploadMode: replace
    assets: |
      $(Build.ArtifactStagingDirectory)/*

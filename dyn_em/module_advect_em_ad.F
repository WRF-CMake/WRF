
! ======================================================================================
! This file was generated by the version 4.3.7 of ADG on 07/17/2010. The Adjoint Code
! Generator (ADG) was developed and sponsored by LASG of IAP (1999-2010)
! The Copyright of the ADG system was declared by Walls at LASG, 1999-2010
! ======================================================================================

MODULE a_module_advect_em

   USE module_bc
   USE module_model_constants
   USE module_wrf_error

CONTAINS

   SUBROUTINE a_advect_u(u,a_u,u_old,a_u_old,tendency,a_tendency,ru,a_ru,rv, &
   a_rv,rom,a_rom,mut,a_mut,time_step,config_flags,msfux,msfuy,msfvx,msfvy,msftx, &
   msfty,fzm,fzp,rdx,rdy,rdzw,ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite, &
   jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: u,a_u,u_old,a_u_old,ru,a_ru,rv, &
   a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzw
   REAL :: rdx,rdy
   INTEGER :: time_step
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax,im,ip
   INTEGER :: jp1,jp0,jtmp
   INTEGER :: horz_order,vert_order
   REAL :: mrdx,mrdy,ub,a_ub,vb,a_vb,uw,a_uw,vw,a_vw,dvm, &
   a_dvm,dvp,a_dvp
   REAL,DIMENSION(its:ite,kts:kte) :: vflux,a_vflux
   REAL,DIMENSION(its-1:ite+1,kts:kte) :: fqx,a_fqx
   REAL,DIMENSION(its:ite,kts:kte,2) :: fqy,a_fqy
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6
   REAL :: q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   q_ip2,a_q_ip2,ua,a_ua,vel,a_vel

   INTEGER, DIMENSION(jms:jme) :: WALLS_jp03,WALLS_jp13
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp04,WALLS_jp14
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp05,WALLS_jp15
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp06,WALLS_jp16

   Diff_flux4(q_im2,a_q_im2, q_im1,a_q_im1, q_i,a_q_i, q_ip1,a_q_ip1, &
   ua, a_ua) =(7.*(a_q_i +a_q_im1) -(a_q_ip1 +a_q_im2))/12.0
   flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7.*(q_i +q_im1) -(q_ip1 +q_im2))/12.0

   Diff_flux3(q_im2,a_q_im2, q_im1,a_q_im1, q_i,a_q_i, q_ip1,a_q_ip1, &
   ua, a_ua) =Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,ua,a_ua) +(sign(1, time_step) *sign(1., ua)*((a_q_ip1 -a_q_im2) &
   -3.*(a_q_i -a_q_im1))/12.0)
   flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1, time_step) &
   *sign(1., ua)*((q_ip1 -q_im2) -3.*(q_i -q_im1))/12.0

   Diff_flux6(q_im3, a_q_im3,q_im2, a_q_im2,q_im1, a_q_im1,q_i, a_q_i, &
   q_ip1, a_q_ip1,q_ip2, a_q_ip2,ua, a_ua) =(37.*(a_q_i +a_q_im1) &
   -8.*(a_q_ip1 +a_q_im2) +(a_q_ip2 +a_q_im3))/60.0
   flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37.*(q_i +q_im1) -8.*(q_ip1 +q_im2) &
   +(q_ip2 +q_im3))/60.0

   Diff_flux5(q_im3, a_q_im3,q_im2, a_q_im2,q_im1, a_q_im1,q_i, a_q_i, &
   q_ip1, a_q_ip1,q_ip2, a_q_ip2,ua, a_ua) =Diff_flux6(q_im3,a_q_im3,q_im2, &
   a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,q_ip2,a_q_ip2,ua, &
   a_ua) -(sign(1, time_step) *sign(1., ua)*((a_q_ip2 -a_q_im3) -5.*( &
   a_q_ip1 -a_q_im2) +10.*(a_q_i -a_q_im1))/60.0)
   flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
   ua) -sign(1, time_step) *sign(1., ua)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) &
   +10.*(q_i -q_im1))/60.0

   LOGICAL :: specified

   REAL :: Keep_Lpb5_ub
   REAL :: Keep_Lpb7_ub
   REAL :: Keep_Lpb13_mrdy
   REAL :: Keep_Lpb15_mrdy
   REAL :: Keep_Lpb15_vb
   REAL :: Keep_Lpb15_dvm
   REAL :: Keep_Lpb15_dvp
   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007,a_Tmpv8,Tmpv008,a_Tmpv9,Tmpv009

   REAL,DIMENSION(max(ids+1,its):min(ite,ide-1)) :: Tmpv200
   REAL,DIMENSION(min0(kts,its):max0(min(kte,kde-1),ite),min0(jts,max(ids+1,its)) &
   :max0(min(jte,jde-1),min(ite,ide-1))) :: Tmpv300
   REAL,DIMENSION(min0(kts,its):max0(min(kte,kde-1),ite),min0(jts,max(ids+1,its)) &
   :max0(min(jte,jde-1),min(ite,ide-1))) :: Tmpv301
   REAL,DIMENSION(min0(kts,its):max0(min(kte,kde-1),ite),min0(jts,max(ids+1,its)) &
   :max0(min(jte,jde-1),min(ite,ide-1))) :: Tmpv302
   REAL,DIMENSION(min0(kts,its):max0(min(kte,kde-1),ite),min0(jts,max(ids+1,its)) &
   :max0(min(jte,jde-1),min(ite,ide-1))) :: Tmpv303

   REAL :: gwalls, qwalls, kwalls
   REAL :: vwalls(ims:ime)

!PART II: CALCULATIONS OF B. S. TRAJECTORY

   specified = .false.
   if(config_flags%specified .or. config_flags%nested) specified = .true.
   horz_order = config_flags%h_mom_adv_order
   vert_order = config_flags%v_mom_adv_order
   ktf=MIN(kte,kde-1)

!LPB[3]

   horizontal_order_test : IF( horz_order == 6 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         i_start = its
         i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)

      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)

      IF ( config_flags%periodic_x ) i_start = its

      IF ( config_flags%periodic_x ) i_end = ite

         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

        j_loop_y_flux_6 : DO j = j_start, j_end+1
           WALLS_jp16(j)=jp1
           WALLS_jp06(j)=jp0
           jtmp = jp1
           jp1 = jp0
           jp0 = jtmp
      ENDDO j_loop_y_flux_6

      ELSE IF( horz_order == 5 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         i_start = its
         i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)

      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)

      IF ( config_flags%periodic_x ) i_start = its

      IF ( config_flags%periodic_x ) i_end = ite

         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

        j_loop_y_flux_5 : DO j = j_start, j_end+1
           WALLS_jp15(j)=jp1
           WALLS_jp05(j)=jp0
           jtmp = jp1
           jp1 = jp0
           jp0 = jtmp
      ENDDO j_loop_y_flux_5
         
      ELSE IF( horz_order == 4 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-1)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

         i_start = its
         i_end   = ite
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-1
           i_end_f = ide-1
         ENDIF

         i_start = its
         i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)

      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)

      IF ( config_flags%periodic_x ) i_start = its

      IF ( config_flags%periodic_x ) i_end = ite

         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then

           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

      DO j = j_start, j_end+1
        WALLS_jp14(j)=jp1
        WALLS_jp04(j)=jp0
        jtmp = jp1
        jp1 = jp0
        jp0 = jtmp
     ENDDO
     ELSE IF ( horz_order == 3 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-1)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

         i_start = its
         i_end   = ite
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-1
           i_end_f = ide-1
         ENDIF

         i_start = its
         i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)

      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)

      IF ( config_flags%periodic_x ) i_start = its

      IF ( config_flags%periodic_x ) i_end = ite

         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then

           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

      DO j = j_start, j_end+1
        WALLS_jp13(j)=jp1
        WALLS_jp03(j)=jp0
        jtmp = jp1
        jp1 = jp0
        jp0 = jtmp
     ENDDO

     ELSE IF ( horz_order == 2 ) THEN
     ELSE IF ( horz_order == 0 ) THEN
     ELSE
     ENDIF horizontal_order_test

     i_start = its
     i_end   = MIN(ite,ide)
     imin    = ids
     imax    = ide-1

     IF (config_flags%open_xs) THEN
          i_start = MAX(ids+1, its)
          imin = ids
     ENDIF

     IF (config_flags%open_xe) THEN
        i_end = MIN(ite,ide-1)
        imax = ide-1
     ENDIF

     i_start = its
     i_end   = ite
     j_start = jts
     j_end   = min(jte,jde-1)

     IF ( config_flags%open_ys .or. specified ) i_start = MAX(ids+1,its)
     IF ( config_flags%open_ye .or. specified ) i_end   = MIN(ide-1,ite)
     IF ( config_flags%periodic_x ) i_start = its
     IF ( config_flags%periodic_x ) i_end = ite

!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0
   a_uw =0.0
   a_vw =0.0
   a_dvm =0.0
   a_dvp =0.0

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_vflux(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+1
   a_fqx(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K2_ADJ =1, 2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_q_im3 =0.0
   a_q_im2 =0.0
   a_q_im1 =0.0
   a_q_i =0.0
   a_q_ip1 =0.0
   a_q_ip2 =0.0
   a_ua =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

!LPB[26]

   IF(vert_order == 6) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-rdzw(k)*a_tendency(i,k,j)
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k =ktf

   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j) +fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =ktf-1
   vel =0.5*(rom(i,k,j) +rom(i-1,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux4(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =kts+2
   vel =0.5*(rom(i,k,j) +rom(i-1,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux4(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =kts+1

   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j) +fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   ENDDO

   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i-1,k,j)+rom(i,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux6(u(i,k-3,j),u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),u(i,k+2,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+2,j) =a_u(i,k+2,j) +Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),1.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),1.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,1.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux6(u(i,k-3,j),0.0,u(i,k-2,j),1.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-3,j) =a_u(i,k-3,j) +Diff_flux6(u(i,k-3,j),1.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 5) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j)+fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =ktf-1
   vel =0.5*(rom(i,k,j)+rom(i-1,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux3(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =kts+2
   vel =0.5*(rom(i,k,j)+rom(i-1,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux3(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1

   k =kts+1

   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j)+fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   ENDDO

   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i-1,k,j)+rom(i,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux5(u(i,k-3,j),u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),u(i,k+2,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+2,j) =a_u(i,k+2,j) +Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),1.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),1.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,1.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux5(u(i,k-3,j),0.0,u(i,k-2,j),1.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-3,j) =a_u(i,k-3,j) +Diff_flux5(u(i,k-3,j),1.0,u(i,k-2,j),0.0,u(i,k-1,j)  &
   ,0.0,u(i,k,j),0.0,u(i,k+1,j),0.0,u(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 4) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j)+fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j)+fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   ENDDO

   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i-1,k,j)+rom(i,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux4(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux4(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF( vert_order == 3) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   vwalls(i_start:i_end)=-rdzw(k)*a_tendency(i_start:i_end,k,j)
   a_vflux(i_start:i_end,k+1) =a_vflux(i_start:i_end,k+1) +vwalls(i_start:i_end)
   a_vflux(i_start:i_end,k) =a_vflux(i_start:i_end,k) -vwalls(i_start:i_end)
   ENDDO

   DO i =i_end, i_start, -1
   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j) +fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j) +rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j) +fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j) +rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   ENDDO

   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i-1,k,j)+rom(i,k,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(u(i,k-2,j),u(i,k-1,j),u(i,k,j),u(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j),0.0,u(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_u(i,k+1,j) =a_u(i,k+1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,1.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-1,j) =a_u(i,k-1,j) +Diff_flux3(u(i,k-2,j),0.0,u(i,k-1,j),1.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_u(i,k-2,j) =a_u(i,k-2,j) +Diff_flux3(u(i,k-2,j),1.0,u(i,k-1,j),0.0,u(i,k,j)  &
   ,0.0,u(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i-1,k,j) =a_rom(i-1,k,j) +0.5*a_vel
   a_rom(i,k,j)   =a_rom(i,k,j)   +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-rdzw(k)*a_tendency(i,k,j)
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(fzm(k)*u(i,k,j)+fzp(k)*u(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.5*(rom(i,k,j)+rom(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +fzm(k)*a_Tmpv3
   a_u(i,k-1,j) =a_u(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i-1,k,j) =a_rom(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE

   ENDIF

!LPB[24]
   DO i =i_end, i_start, -1
   a_vflux(i,kte) =0.0
   a_vflux(i,kts) =0.0
   ENDDO

!LPB[15]
   mrdy =Keep_Lpb15_mrdy
   vb =Keep_Lpb15_vb
   dvm =Keep_Lpb15_dvm
   dvp =Keep_Lpb15_dvp

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN
   DO i =i_start, i_end
   mrdy =msfux(i,jte-1)*rdy
   Tmpv200(i) =mrdy

   ip =min(imax, i)
   im =max(imin, i-1)

   DO k =kts, ktf
   Tmpv001 =rv(ip,k,jte) +rv(im,k,jte)
   Tmpv002 =0.5*Tmpv001
   vw =Tmpv002

   Tmpv300(k,i) =vw
   vb =max(vw, 0.)

   Tmpv001 =rv(ip,k,jte) -rv(ip,k,jte-1)
   dvm =Tmpv001

   Tmpv001 =rv(im,k,jte) -rv(im,k,jte-1)
   dvp =Tmpv001

   Tmpv001 =u_old(i,k,jte-1) -u_old(i,k,jte-2)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =dvm +dvp
   Tmpv302(k,i) =Tmpv003
   Tmpv004 =0.5*u(i,k,jte-1)*Tmpv302(k,i)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv303(k,i) =Tmpv005
   Tmpv006 =mrdy*Tmpv303(k,i)
   Tmpv007 =tendency(i,k,jte-1) -Tmpv006
   tendency(i,k,jte-1) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN

   DO i =i_end, i_start, -1
   ip =min(imax, i)
   im =max(imin, i-1)

   DO k =ktf, kts, -1
   mrdy =Tmpv200(i)

   vw =Tmpv300(k,i)
   vb =max(vw, 0.)

   a_Tmpv7 =a_tendency(i,k,jte-1)
   a_tendency(i,k,jte-1) =0.0
   a_tendency(i,k,jte-1) =a_tendency(i,k,jte-1) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_u(i,k,jte-1) =a_u(i,k,jte-1) +0.5*Tmpv302(k,i)*a_Tmpv4
   a_Tmpv3 =0.5*u(i,k,jte-1)*a_Tmpv4
   a_dvm =a_dvm +a_Tmpv3
   a_dvp =a_dvp +a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_u_old(i,k,jte-1) =a_u_old(i,k,jte-1) +a_Tmpv1
   a_u_old(i,k,jte-2) =a_u_old(i,k,jte-2) -a_Tmpv1
   a_Tmpv1 =a_dvp
   a_dvp =0.0
   a_rv(im,k,jte) =a_rv(im,k,jte) +a_Tmpv1
   a_rv(im,k,jte-1) =a_rv(im,k,jte-1) -a_Tmpv1
   a_Tmpv1 =a_dvm
   a_dvm =0.0
   a_rv(ip,k,jte) =a_rv(ip,k,jte) +a_Tmpv1
   a_rv(ip,k,jte-1) =a_rv(ip,k,jte-1) -a_Tmpv1

   a_vw =a_vw +(1.0 +(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv2 =a_vw
   a_vw =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(ip,k,jte) =a_rv(ip,k,jte) +a_Tmpv1
   a_rv(im,k,jte) =a_rv(im,k,jte) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[13]
   mrdy =Keep_Lpb13_mrdy

   IF( (config_flags%open_ys) .and. (jts == jds)) THEN
   DO i =i_start, i_end
   mrdy =msfux(i,jts)*rdy
   Tmpv200(i) =mrdy

   ip =min(imax, i)
   im =max(imin, i-1)

   DO k =kts, ktf
   Tmpv001 =rv(ip,k,jts) +rv(im,k,jts)
   Tmpv002 =0.5*Tmpv001
   vw =Tmpv002

   Tmpv300(k,i) =vw
   vb =min(vw, 0.)

   Tmpv001 =rv(ip,k,jts+1) -rv(ip,k,jts)
   dvm =Tmpv001

   Tmpv001 =rv(im,k,jts+1) -rv(im,k,jts)
   dvp =Tmpv001

   Tmpv001 =u_old(i,k,jts+1) -u_old(i,k,jts)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =dvm +dvp
   Tmpv302(k,i) =Tmpv003
   Tmpv004 =0.5*u(i,k,jts)*Tmpv302(k,i)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv303(k,i) =Tmpv005
   Tmpv006 =mrdy*Tmpv303(k,i)
   Tmpv007 =tendency(i,k,jts) -Tmpv006
   tendency(i,k,jts) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ys) .and. (jts == jds)) THEN

   DO i =i_end, i_start, -1
   mrdy =Tmpv200(i)
   ip =min(imax, i)
   im =max(imin, i-1)

   DO k =ktf, kts, -1
   vw =Tmpv300(k,i)
   vb =min(vw, 0.)

   a_Tmpv7 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_u(i,k,jts) =a_u(i,k,jts) +0.5*Tmpv302(k,i)*a_Tmpv4
   a_Tmpv3 =0.5*u(i,k,jts)*a_Tmpv4
   a_dvm =a_dvm +a_Tmpv3
   a_dvp =a_dvp +a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_u_old(i,k,jts+1) =a_u_old(i,k,jts+1) +a_Tmpv1
   a_u_old(i,k,jts) =a_u_old(i,k,jts) -a_Tmpv1
   a_Tmpv1 =a_dvp
   a_dvp =0.0
   a_rv(im,k,jts+1) =a_rv(im,k,jts+1) +a_Tmpv1
   a_rv(im,k,jts) =a_rv(im,k,jts) -a_Tmpv1
   a_Tmpv1 =a_dvm
   a_dvm =0.0
   a_rv(ip,k,jts+1) =a_rv(ip,k,jts+1) +a_Tmpv1
   a_rv(ip,k,jts) =a_rv(ip,k,jts) -a_Tmpv1

   a_vw =a_vw +(1.0 -(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv2 =a_vw
   a_vw =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(ip,k,jts) =a_rv(ip,k,jts) +a_Tmpv1
   a_rv(im,k,jts) =a_rv(im,k,jts) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[7]
   ub =Keep_Lpb7_ub

   IF( (config_flags%open_xe) .and. ite == ide ) THEN
   j_start =jts
   j_end =min(jte, jde-1)
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(ite,k,j) +cb*mut(ite-1,j)
   Tmpv300(k,j) =Tmpv001
   ub =max(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =u_old(ite,k,j) -u_old(ite-1,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =rdx*ub*Tmpv302(k,j)
   Tmpv003 =tendency(ite,k,j) -Tmpv002
   tendency(ite,k,j) =Tmpv003

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xe) .and. ite == ide ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)

   a_Tmpv3 =a_tendency(ite,k,j)
   a_tendency(ite,k,j) =0.0
   a_tendency(ite,k,j) =a_tendency(ite,k,j) +a_Tmpv3
   a_Tmpv2 =-a_Tmpv3
   a_ub =a_ub +rdx*Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =rdx*ub*a_Tmpv2
   a_u_old(ite,k,j) =a_u_old(ite,k,j) +a_Tmpv1
   a_u_old(ite-1,k,j) =a_u_old(ite-1,k,j) -a_Tmpv1

   a_Tmpv1=(1.0 +(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub
   a_ub =0.0
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv1
   a_mut(ite-1,j) =a_mut(ite-1,j) +cb*a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[5]
   ub =Keep_Lpb5_ub

   IF( (config_flags%open_xs) .and. its == ids ) THEN
   j_start =jts
   j_end =min(jte, jde-1)
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(its,k,j) -cb*mut(its,j)
   Tmpv300(k,j) =Tmpv001
   ub =min(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =u_old(its+1,k,j) -u_old(its,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =rdx*ub*Tmpv302(k,j)
   Tmpv003 =tendency(its,k,j) -Tmpv002
   tendency(its,k,j) =Tmpv003

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xs) .and. its == ids ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)

   a_Tmpv3 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv3
   a_Tmpv2 =-a_Tmpv3
   a_ub =a_ub +rdx*Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =rdx*ub*a_Tmpv2
   a_u_old(its+1,k,j) =a_u_old(its+1,k,j) +a_Tmpv1
   a_u_old(its,k,j) =a_u_old(its,k,j) -a_Tmpv1

   a_Tmpv1=(1.0 -(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub
   a_ub =0.0
   a_ru(its,k,j) =a_ru(its,k,j) +a_Tmpv1
   a_mut(its,j) =a_mut(its,j) -cb*a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[3]

   specified = .false.

   if(config_flags%specified .or. config_flags%nested) specified = .true.
   horz_order = config_flags%h_mom_adv_order
   vert_order = config_flags%v_mom_adv_order
   ktf=MIN(kte,kde-1)

   IF( horz_order == 6 ) THEN

   degrade_xs =.true.
   degrade_xe =.true.
   degrade_ys =.true.
   degrade_ye =.true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-4)                ) degrade_ye = .false.
   i_start =its
   i_end =ite
   IF( config_flags%open_xs .or. specified ) THEN
   i_start =max(ids+1, its)
   END IF
   IF( config_flags%open_xe .or. specified ) THEN
   i_end =min(ide-1, ite)
   END IF
   IF( config_flags%periodic_x ) THEN
   i_start =its
   END IF
   IF( config_flags%periodic_x ) THEN
   i_end =ite
   END IF

   j_start =jts
   j_end =min(jte, jde-1)
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_ys) THEN
   j_start =max(jts, jds+1)
   j_start_f =jds+3
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-2)
   j_end_f =jde-3
   ENDIF
   IF(config_flags%polar) THEN
   j_end =min(jte, jde-1)
   END IF
   jp1 =2
   jp0 =1

   i_start =its
   i_end =ite
   j_start =jts
   j_end =min(jte, jde-1)
   i_start_f =i_start
   i_end_f =i_end+1
   IF(degrade_xs) THEN
   i_start =max(ids+1, its)
   i_start_f =ids+3
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-1, ite)
   i_end_f =ide-2
   ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx =msfux(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   i =ide-1

   DO k =ktf, kts, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux4(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO

   IF( i_end == ide-1 ) THEN

   i =ide
   DO k =ktf, kts, -1

   ub =u(i,k,j)
   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN
   ub =u(i-1,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i-1,k,j) +ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN

   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF

   ENDIF

   IF( degrade_xs ) THEN

   IF( i_start == ids+1 ) THEN
   i =ids+1

   DO k =ktf, kts, -1
   ub =u(i-1,k,j)
   IF(specified .AND. u(i,k,j) .LT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i,k,j) +ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j)+ru(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i,k,j) .LT. 0.) THEN

   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0
   ENDDO

   END IF
   i =ids+2
   DO k =ktf, kts, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux4(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =0.5*(ru(i,k,j)+ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux6(u(i-3,k,j),u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),u(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_u(i+2,k,j) =a_u(i+2,k,j) +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),1.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),1.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,1.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux6(u(i-3,k,j),0.0,u(i-2,k,j),1.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-3,k,j) =a_u(i-3,k,j) +Diff_flux6(u(i-3,k,j),1.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   i_start =its
   i_end =ite
   IF( config_flags%open_xs .or. specified ) THEN
   i_start =max(ids+1, its)
   END IF
   IF( config_flags%open_xe .or. specified ) THEN
   i_end =min(ide-1, ite)
   END IF
   IF( config_flags%periodic_x ) THEN
   i_start =its
   END IF
   IF( config_flags%periodic_x ) THEN
   i_end =ite
   END IF

   j_start =jts
   j_end =min(jte, jde-1)
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_ys) THEN
   j_start =max(jts, jds+1)
   j_start_f =jds+3
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-2)
   j_end_f =jde-3
   ENDIF
   IF(config_flags%polar) THEN
   j_end =min(jte, jde-1)
   END IF
   jp1 =2
   jp0 =1

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp16(j)
   jp0=WALLS_jp06(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msfux(i,j-1)*rdy

   a_Tmpv2 =a_tendency(i,k,j-1)
   a_Tmpv1 =-a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +mrdy*a_Tmpv1

   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msfux(i,j-1)*rdy

   a_Tmpv2 =a_tendency(i,k,j-1)
   a_Tmpv1 =a_Tmpv2
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +mrdy*a_Tmpv1

   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msfux(i,j-1)*rdy

   a_Tmpv3 =a_tendency(i,k,j-1)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdy*a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1

   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j)+rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux6(u(i,k,j-3),u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),u(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+2) =a_u(i,k,j+2) +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),1.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),1.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,1.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux6(u(i,k,j-3),0.0,u(i,k,j-2),1.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-3) =a_u(i,k,j-3) +Diff_flux6(u(i,k,j-3),1.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux4(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j)+rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux4(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   ENDDO

   ELSE IF( horz_order == 5 ) THEN

   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-4)                ) degrade_ye = .false.

      i_start = its
      i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

      i_start = its
      i_end   = ite

      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = ids+3
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-1,ite)
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO k =ktf, kts, -1
   i =ide-1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux3(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO

   IF( i_end == ide-1 ) THEN
   i =ide

   DO k =ktf, kts, -1
   ub =u(i,k,j)
   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN
   ub =u(i-1,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i-1,k,j) +ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN

   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF

   ENDIF

   IF( degrade_xs ) THEN

   IF( i_start == ids+1 ) THEN
   i =ids+1

   DO k =ktf, kts, -1
   ub =u(i-1,k,j)
   IF(specified .AND. u(i,k,j) .LT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i,k,j)+ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i,k,j) .LT. 0.) THEN

   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0
   ENDDO

   END IF
   i =ids+2
   DO k =ktf, kts, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux3(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF

   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux5(u(i-3,k,j),u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),u(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_u(i+2,k,j) =a_u(i+2,k,j) +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),1.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),1.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,1.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux5(u(i-3,k,j),0.0,u(i-2,k,j),1.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-3,k,j) =a_u(i-3,k,j) +Diff_flux5(u(i-3,k,j),1.0,u(i-2,k,j),0.0,u(i-1,k,j)  &
   ,0.0,u(i,k,j),0.0,u(i+1,k,j),0.0,u(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +0.5*a_vel
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp15(j)
   jp0=WALLS_jp05(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux5(u(i,k,j-3),u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),u(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+2) =a_u(i,k,j+2) +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),1.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),1.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,1.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux5(u(i,k,j-3),0.0,u(i,k,j-2),1.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-3) =a_u(i,k,j-3) +Diff_flux5(u(i,k,j-3),1.0,u(i,k,j-2),0.0,u(i,k,j-1)  &
   ,0.0,u(i,k,j),0.0,u(i,k,j+1),0.0,u(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +0.5*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_rv(i,k,j) =a_rv(i,k,j) +0.25*a_Tmpv2
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +0.25*a_Tmpv2
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux3(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +0.5*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_rv(i,k,j) =a_rv(i,k,j) +0.25*a_Tmpv2
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +0.25*a_Tmpv2
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux3(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +0.5*a_vel
   ENDDO
   ENDDO

   END IF
   ENDDO

   ELSE IF( horz_order == 4 ) THEN

   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-1)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-3)                ) degrade_ye = .false.

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-1
        i_end_f = ide-1
      ENDIF

      i_start = its
      i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = jds+1
        j_start_f = j_start+1
      ENDIF

      IF(degrade_ye) then
        j_end = jde-2
        j_end_f = jde-2
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp14(j)
   jp0=WALLS_jp04(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   IF( (j < j_start_f) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j_start) +u(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j_start) +rv(i-1,k,j_start))*a_Tmpv4
   a_u(i,k,j_start) =a_u(i,k,j_start) +a_Tmpv3
   a_u(i,k,j_start-1) =a_u(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +a_Tmpv1
   a_rv(i-1,k,j_start) =a_rv(i-1,k,j_start) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux4(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux4(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   ENDDO

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-1
        i_end_f = ide-1
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   i =i_end+1
   DO k =ktf, kts, -1
   ub =u(i,k,j)
   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN
   ub =u(i-1,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i-1,k,j)+ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j)+ru(i-1,k,j))*a_Tmpv4
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN

   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   i =i_start
   DO k =ktf, kts, -1
   ub =u(i-1,k,j)
   IF(specified .AND. u(i,k,j) .LT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i,k,j) +ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i,k,j) .LT. 0.) THEN

   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux4(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux4(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 3 ) THEN

   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-1)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-3)                ) degrade_ye = .false.

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-1
        i_end_f = ide-1
      ENDIF

      i_start = its
      i_end   = ite
      IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-1,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = jds+1
        j_start_f = j_start+1
      ENDIF

      IF(degrade_ye) then
        j_end = jde-2
        j_end_f = jde-2
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp13(j)
   jp0=WALLS_jp03(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   IF( (j < j_start_f) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j_start) +u(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j_start) +rv(i-1,k,j_start))*a_Tmpv4
   a_u(i,k,j_start) =a_u(i,k,j_start) +a_Tmpv3
   a_u(i,k,j_start-1) =a_u(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +a_Tmpv1
   a_rv(i-1,k,j_start) =a_rv(i-1,k,j_start) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rv(i,k,j) +rv(i-1,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(u(i,k,j-2),u(i,k,j-1),u(i,k,j),u(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j),0.0,u(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i,k,j+1) =a_u(i,k,j+1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,1.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-1) =a_u(i,k,j-1) +Diff_flux3(u(i,k,j-2),0.0,u(i,k,j-1),1.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j-2) =a_u(i,k,j-2) +Diff_flux3(u(i,k,j-2),1.0,u(i,k,j-1),0.0,u(i,k,j)  &
   ,0.0,u(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   ENDDO

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-1
        i_end_f = ide-1
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfux(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   i =i_end+1
   DO k =ktf, kts, -1
   ub =u(i,k,j)
   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN
   ub =u(i-1,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i-1,k,j)+ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i-1,k,j) .GT. 0.) THEN

   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   i =i_start
   DO k =ktf, kts, -1
   ub =u(i-1,k,j)
   IF(specified .AND. u(i,k,j) .LT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(u(i,k,j) +ub)*a_Tmpv4
   a_Tmpv3 =0.25*(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_ub =a_ub +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1

   IF(specified .AND. u(i,k,j) .LT. 0.) THEN

   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =0.5*(ru(i,k,j) +ru(i-1,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(u(i-2,k,j),u(i-1,k,j),u(i,k,j),u(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j),0.0,u(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_u(i+1,k,j) =a_u(i+1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_u(i,k,j) =a_u(i,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,1.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-1,k,j) =a_u(i-1,k,j) +Diff_flux3(u(i-2,k,j),0.0,u(i-1,k,j),1.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_u(i-2,k,j) =a_u(i-2,k,j) +Diff_flux3(u(i-2,k,j),1.0,u(i-1,k,j),0.0,u(i,k,j)  &
   ,0.0,u(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 2 ) THEN

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( config_flags%open_xs ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe ) i_end   = MIN(ide-1,ite)
      IF ( specified ) i_start = MAX(ids+2,its)
      IF ( specified ) i_end   = MIN(ide-2,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

      IF ( config_flags%open_ys .or. specified ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified ) j_end   = MIN(jde-2,jte)

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1

   mrdy =msfux(i,j)*rdy

   IF( (config_flags%polar) .AND. (j == jds) ) THEN

   a_Tmpv5 =a_tendency(i,k,j)
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv2 =(u(i,k,j+1) +u(i,k,j))*a_Tmpv4
   a_Tmpv3 =mrdy*0.25*(rv(i,k,j+1) +rv(i-1,k,j+1))*a_Tmpv4
   a_u(i,k,j+1) =a_u(i,k,j+1) +a_Tmpv3
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_Tmpv1 =mrdy*0.25*a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +a_Tmpv1
   a_rv(i-1,k,j+1) =a_rv(i-1,k,j+1) +a_Tmpv1

   ELSE IF( (config_flags%polar) .AND. (j == jde-1) ) THEN

   a_Tmpv4 =a_tendency(i,k,j)
   a_Tmpv2 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =mrdy*0.25*(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv4
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv3
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =mrdy*0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv1

   ELSE

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(u(i,k,j) +u(i,k,j-1))*a_Tmpv6
   a_Tmpv5 =(rv(i,k,j) +rv(i-1,k,j))*a_Tmpv6
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv5
   a_u(i,k,j-1) =a_u(i,k,j-1) +a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv4
   a_rv(i-1,k,j) =a_rv(i-1,k,j) +a_Tmpv4
   a_Tmpv1 =(u(i,k,j+1) +u(i,k,j))*a_Tmpv3
   a_Tmpv2 =(rv(i,k,j+1) +rv(i-1,k,j+1))*a_Tmpv3
   a_u(i,k,j+1) =a_u(i,k,j+1) +a_Tmpv2
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +a_Tmpv1
   a_rv(i-1,k,j+1) =a_rv(i-1,k,j+1) +a_Tmpv1

   ENDIF

   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = ite
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( config_flags%open_xs ) i_start = MAX(ids+1,its)
      IF ( config_flags%open_xe ) i_end   = MIN(ide-1,ite)
      IF ( specified ) i_start = MAX(ids+2,its)
      IF ( specified ) i_end   = MIN(ide-2,ite)
      IF ( config_flags%periodic_x ) i_start = its
      IF ( config_flags%periodic_x ) i_end = ite

   IF( specified .AND. ite .GE. ide-1 .AND. .NOT. config_flags%periodic_x ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   i =ide-1
   mrdx =msfux(i,j)*rdx
   ub =u(i+1,k,j)
   IF(u(i,k,j) .GT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(u(i,k,j) +u(i-1,k,j))*a_Tmpv6
   a_Tmpv5 =(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv6
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv5
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv4
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv4
   a_Tmpv1 =(ub +u(i,k,j))*a_Tmpv3
   a_Tmpv2 =(ru(i+1,k,j) +ru(i,k,j))*a_Tmpv3
   a_ub =a_ub +a_Tmpv2
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv2
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +a_Tmpv1
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1

   IF(u(i,k,j) .GT. 0.) THEN

   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0

   END IF
   a_u(i+1,k,j) =a_u(i+1,k,j) +a_ub
   a_ub =0.0

   ENDDO
   ENDDO

   ENDIF

   IF( specified .AND. its .LE. ids+1 .AND. .NOT. config_flags%periodic_x ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   i =ids+1
   mrdx =msfux(i,j)*rdx
   ub =u(i-1,k,j)
   IF(u(i,k,j) .LT. 0.) THEN
   ub =u(i,k,j)
   END IF

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(u(i,k,j) +ub)*a_Tmpv6
   a_Tmpv5 =(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv6
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv5
   a_ub =a_ub +a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv4
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv4
   a_Tmpv1 =(u(i+1,k,j) +u(i,k,j))*a_Tmpv3
   a_Tmpv2 =(ru(i+1,k,j) +ru(i,k,j))*a_Tmpv3
   a_u(i+1,k,j) =a_u(i+1,k,j) +a_Tmpv2
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv2
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +a_Tmpv1
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1

   IF(u(i,k,j) .LT. 0.) THEN
   a_u(i,k,j) =a_u(i,k,j) +a_ub
   a_ub =0.0
   END IF

   a_u(i-1,k,j) =a_u(i-1,k,j) +a_ub
   a_ub =0.0

   ENDDO
   ENDDO

   ENDIF
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx =msfux(i,j)*rdx

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(u(i,k,j) +u(i-1,k,j))*a_Tmpv6
   a_Tmpv5 =(ru(i,k,j) +ru(i-1,k,j))*a_Tmpv6
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv5
   a_u(i-1,k,j) =a_u(i-1,k,j) +a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv4
   a_ru(i-1,k,j) =a_ru(i-1,k,j) +a_Tmpv4
   a_Tmpv1 =(u(i+1,k,j) +u(i,k,j))*a_Tmpv3
   a_Tmpv2 =(ru(i+1,k,j) +ru(i,k,j))*a_Tmpv3
   a_u(i+1,k,j) =a_u(i+1,k,j) +a_Tmpv2
   a_u(i,k,j) =a_u(i,k,j) +a_Tmpv2
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +a_Tmpv1
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 0 ) THEN
   ELSE
   ENDIF

   END SUBROUTINE a_advect_u

   SUBROUTINE a_advect_v(v,a_v,v_old,a_v_old,tendency,a_tendency,ru,a_ru,rv, &
   a_rv,rom,a_rom,mut,a_mut,time_step,config_flags,msfux,msfuy,msfvx,msfvy,msftx, &
   msfty,fzm,fzp,rdx,rdy,rdzw,ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite, &
   jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: v,a_v,v_old,a_v_old,ru,a_ru,rv, &
   a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzw
   REAL :: rdx,rdy
   INTEGER :: time_step
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax
   REAL :: mrdx,mrdy,ub,a_ub,vb,a_vb,uw,a_uw,vw,a_vw,dup, &
   a_dup,dum,a_dum
   REAL,DIMENSION(its:ite,kts:kte) :: vflux,a_vflux
   REAL,DIMENSION(its:ite+1,kts:kte) :: fqx,a_fqx
   REAL,DIMENSION(its:ite,kts:kte,2) :: fqy,a_fqy
   INTEGER :: horz_order
   INTEGER :: vert_order
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   INTEGER :: jp1,jp0,jtmp
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6
   REAL :: q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   q_ip2,a_q_ip2,ua,a_ua,vel,a_vel

   Diff_flux4(q_im2,a_q_im2, q_im1,a_q_im1, q_i,a_q_i, q_ip1,a_q_ip1, &
   ua, a_ua) =(7.*(a_q_i +a_q_im1) -(a_q_ip1 +a_q_im2))/12.0
   flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7.*(q_i +q_im1) -(q_ip1 +q_im2))/12.0

   Diff_flux3(q_im2,a_q_im2, q_im1,a_q_im1, q_i,a_q_i, q_ip1,a_q_ip1, &
   ua, a_ua) =Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,ua,a_ua) +(sign(1, time_step) *sign(1., ua)*((a_q_ip1 -a_q_im2) &
   -3.*(a_q_i -a_q_im1))/12.0)
   flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1, time_step) &
   *sign(1., ua)*((q_ip1 -q_im2) -3.*(q_i -q_im1))/12.0

   Diff_flux6(q_im3, a_q_im3,q_im2, a_q_im2,q_im1, a_q_im1,q_i, a_q_i, &
   q_ip1, a_q_ip1,q_ip2, a_q_ip2,ua, a_ua) =(37.*(a_q_i +a_q_im1) &
   -8.*(a_q_ip1 +a_q_im2) +(a_q_ip2 +a_q_im3))/60.0
   flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37.*(q_i +q_im1) -8.*(q_ip1 +q_im2) &
   +(q_ip2 +q_im3))/60.0

   Diff_flux5(q_im3, a_q_im3,q_im2, a_q_im2,q_im1, a_q_im1,q_i, a_q_i, &
   q_ip1, a_q_ip1,q_ip2, a_q_ip2,ua, a_ua) =Diff_flux6(q_im3,a_q_im3,q_im2, &
   a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,q_ip2,a_q_ip2,ua, &
   a_ua) -(sign(1, time_step) *sign(1., ua)*((a_q_ip2 -a_q_im3) -5.*( &
   a_q_ip1 -a_q_im2) +10.*(a_q_i -a_q_im1))/60.0)
   flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
   ua) -sign(1, time_step) *sign(1., ua)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) &
   +10.*(q_i -q_im1))/60.0

   LOGICAL :: specified

   REAL :: Keep_Lpb9_vb
   REAL :: Keep_Lpb11_vb
   REAL :: Keep_Lpb17_mrdx
   REAL :: Keep_Lpb19_mrdx
   REAL :: Keep_Lpb19_ub
   REAL :: Keep_Lpb19_dup
   REAL :: Keep_Lpb19_dum
   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007,a_Tmpv8,Tmpv008,a_Tmpv9,Tmpv009
   REAL,DIMENSION(max(jds+1,jts):min(jte,jde-1)) :: Tmpv200
   REAL,DIMENSION(kms:kme,MIN(ims,jms):MAX(ime,jme)) :: Tmpv300
   REAL,DIMENSION(kms:kme,MIN(ims,jms):MAX(ime,jme)) :: Tmpv301
   REAL,DIMENSION(kms:kme,MIN(ims,jms):MAX(ime,jme)) :: Tmpv302
   REAL,DIMENSION(kms:kme,MIN(ims,jms):MAX(ime,jme)) :: Tmpv303

   REAL :: gwalls, qwalls, kwalls
   REAL :: vwalls(ims:ime)

!PART II: CALCULATIONS OF B. S. TRAJECTORY

!LPB[0]

      specified = .false.

!LPB[1]
   if(config_flags%specified .or. config_flags%nested) specified = .true.

!LPB[2]
      ktf=MIN(kte,kde-1)
      horz_order = config_flags%h_mom_adv_order
      vert_order = config_flags%v_mom_adv_order

!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0
   a_uw =0.0
   a_vw =0.0
   a_dup =0.0
   a_dum =0.0

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_vflux(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite+1
   a_fqx(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K2_ADJ =1, 2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_q_im3 =0.0
   a_q_im2 =0.0
   a_q_im1 =0.0
   a_q_i =0.0
   a_q_ip1 =0.0
   a_q_ip2 =0.0
   a_ua =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-1,jte)

!LPB[27]

   IF(vert_order == 6) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =(msfvy(i,j)/msfvx(i,j))*rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1

   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))   
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =ktf-1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))  
   Tmpv001 =flux4(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel)  
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux4(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1


   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+2
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1)) 
   Tmpv001 =flux4(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel) 
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux4(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))
   Tmpv001 =flux6(v(i,k-3,j),v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),v(i,k+2,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+2,j) =a_v(i,k+2,j) +Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),1.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),1.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,1.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux6(v(i,k-3,j),0.0,v(i,k-2,j),1.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-3,j) =a_v(i,k-3,j) +Diff_flux6(v(i,k-3,j),1.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 5) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =(msfvy(i,j)/msfvx(i,j))*rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1

   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =ktf-1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))  
   Tmpv001 =flux3(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel)  
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux3(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+2
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))  
   Tmpv001 =flux3(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel)  
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux3(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))  
   Tmpv001 =flux5(v(i,k-3,j),v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),v(i,k+2,j),-vel) 

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+2,j) =a_v(i,k+2,j) +Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),1.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),1.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,1.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux5(v(i,k-3,j),0.0,v(i,k-2,j),1.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-3,j) =a_v(i,k-3,j) +Diff_flux5(v(i,k-3,j),1.0,v(i,k-2,j),0.0,v(i,k-1,j)  &
   ,0.0,v(i,k,j),0.0,v(i,k+1,j),0.0,v(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 4) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =(msfvy(i,j)/msfvx(i,j))*rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))
   Tmpv001 =flux4(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux4(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux4(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 3) THEN

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   gwalls =rdzw(k)
   DO i =i_end, i_start, -1
   a_Tmpv1 =-(msfvy(i,j)/msfvx(i,j))*gwalls*a_tendency(i,k,j)
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   k =ktf
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   k =kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO

   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel=0.5*(rom(i,k,j)+rom(i,k,j-1))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(v(i,k-2,j),v(i,k-1,j),v(i,k,j),v(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j),0.0,v(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_v(i,k+1,j) =a_v(i,k+1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,1.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-1,j) =a_v(i,k-1,j) +Diff_flux3(v(i,k-2,j),0.0,v(i,k-1,j),1.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_v(i,k-2,j) =a_v(i,k-2,j) +Diff_flux3(v(i,k-2,j),1.0,v(i,k-1,j),0.0,v(i,k,j)  &
   ,0.0,v(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =(msfvy(i,j)/msfvx(i,j))*rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   Tmpv003 =fzm(k)*v(i,k,j) +fzp(k)*v(i,k-1,j)  
   Tmpv002 =0.5*(rom(i,k,j)+rom(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +fzm(k)*a_Tmpv3
   a_v(i,k-1,j) =a_v(i,k-1,j) +fzp(k)*a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k,j-1) =a_rom(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE
   ENDIF

!LPB[21]
   DO i =i_end, i_start, -1
   a_vflux(i,kte) =0.0
   a_vflux(i,kts) =0.0
   ENDDO

!LPB[19]
      j_start = jts
      j_end   = MIN(jte,jde)
      jmin    = jds
      jmax    = jde-1

      IF (config_flags%open_ys) THEN
         j_start = MAX(jds+1, jts)
         jmin = jds
      ENDIF
      IF (config_flags%open_ye) THEN
         j_end = MIN(jte,jde-1)
         jmax = jde-1
      ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN
   DO j =j_start, j_end
   mrdx =msfvy(ite-1,j)*rdx
   Tmpv200(j) =mrdx

   jp =min(jmax, j)
   jm =max(jmin, j-1)

   DO k =kts, ktf
   Tmpv001 =ru(ite,k,jp) +ru(ite,k,jm)
   Tmpv002 =0.5*Tmpv001
   uw =Tmpv002

   Tmpv300(k,j) =uw
   ub =max(uw, 0.)

   Tmpv001 =ru(ite,k,jp) -ru(ite-1,k,jp)
   dup =Tmpv001

   Tmpv001 =ru(ite,k,jm) -ru(ite-1,k,jm)
   dum =Tmpv001

   Tmpv001 =v_old(ite-1,k,j) -v_old(ite-2,k,j)
   Tmpv301(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv301(k,j)
   Tmpv003 =dup +dum
   Tmpv302(k,j) =Tmpv003
   Tmpv004 =0.5*v(ite-1,k,j)*Tmpv302(k,j)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv303(k,j) =Tmpv005
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN

   DO j =j_end, j_start, -1
   mrdx =Tmpv200(j)
   jp =min(jmax, j)
   jm =max(jmin, j-1)

   DO k =ktf, kts, -1
   uw =Tmpv300(k,j)
   ub =max(uw, 0.)

   a_Tmpv7 =a_tendency(ite-1,k,j)
   a_tendency(ite-1,k,j) =0.0
   a_tendency(ite-1,k,j) =a_tendency(ite-1,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_v(ite-1,k,j) =a_v(ite-1,k,j) +0.5*Tmpv302(k,j)*a_Tmpv4
   a_Tmpv3 =0.5*v(ite-1,k,j)*a_Tmpv4
   a_dup =a_dup +a_Tmpv3
   a_dum =a_dum +a_Tmpv3
   a_ub =a_ub +Tmpv301(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_v_old(ite-1,k,j) =a_v_old(ite-1,k,j) +a_Tmpv1
   a_v_old(ite-2,k,j) =a_v_old(ite-2,k,j) -a_Tmpv1
   a_Tmpv1 =a_dum
   a_dum =0.0
   a_ru(ite,k,jm) =a_ru(ite,k,jm) +a_Tmpv1
   a_ru(ite-1,k,jm) =a_ru(ite-1,k,jm) -a_Tmpv1
   a_Tmpv1 =a_dup
   a_dup =0.0
   a_ru(ite,k,jp) =a_ru(ite,k,jp) +a_Tmpv1
   a_ru(ite-1,k,jp) =a_ru(ite-1,k,jp) -a_Tmpv1

   a_uw =a_uw +(1.0 +(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv2 =a_uw
   a_uw =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(ite,k,jp) =a_ru(ite,k,jp) +a_Tmpv1
   a_ru(ite,k,jm) =a_ru(ite,k,jm) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[17]

   IF( (config_flags%open_xs) .and. (its == ids)) THEN
   DO j =j_start, j_end
   mrdx =msfvy(its,j)*rdx
   Tmpv200(j) =mrdx

   jp =min(jmax, j)
   jm =max(jmin, j-1)

   DO k =kts, ktf
   Tmpv001 =ru(its,k,jp) +ru(its,k,jm)
   Tmpv002 =0.5*Tmpv001
   uw =Tmpv002

   Tmpv300(k,j) =uw
   ub =min(uw, 0.)

   Tmpv001 =ru(its+1,k,jp) -ru(its,k,jp)
   dup =Tmpv001

   Tmpv001 =ru(its+1,k,jm) -ru(its,k,jm)
   dum =Tmpv001

   Tmpv001 =v_old(its+1,k,j) -v_old(its,k,j)
   Tmpv301(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv301(k,j)
   Tmpv003 =dup +dum
   Tmpv302(k,j) =Tmpv003
   Tmpv004 =0.5*v(its,k,j)*Tmpv302(k,j)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv303(k,j) =Tmpv005
   Tmpv006 =mrdx*Tmpv303(k,j)
   Tmpv007 =tendency(its,k,j) -Tmpv006
   tendency(its,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xs) .and. (its == ids)) THEN

   DO j =j_end, j_start, -1
   mrdx =Tmpv200(j)

   jp =min(jmax, j)
   jm =max(jmin, j-1)

   DO k =ktf, kts, -1
   uw =Tmpv300(k,j)
   ub =min(uw, 0.)

   a_Tmpv7 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_v(its,k,j) =a_v(its,k,j) +0.5*Tmpv302(k,j)*a_Tmpv4
   a_Tmpv3 =0.5*v(its,k,j)*a_Tmpv4
   a_dup =a_dup +a_Tmpv3
   a_dum =a_dum +a_Tmpv3
   a_ub =a_ub +Tmpv301(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_v_old(its+1,k,j) =a_v_old(its+1,k,j) +a_Tmpv1
   a_v_old(its,k,j) =a_v_old(its,k,j) -a_Tmpv1
   a_Tmpv1 =a_dum
   a_dum =0.0
   a_ru(its+1,k,jm) =a_ru(its+1,k,jm) +a_Tmpv1
   a_ru(its,k,jm) =a_ru(its,k,jm) -a_Tmpv1
   a_Tmpv1 =a_dup
   a_dup =0.0
   a_ru(its+1,k,jp) =a_ru(its+1,k,jp) +a_Tmpv1
   a_ru(its,k,jp) =a_ru(its,k,jp) -a_Tmpv1

   a_uw =a_uw +(1.0 -(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv2 =a_uw
   a_uw =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(its,k,jp) =a_ru(its,k,jp) +a_Tmpv1
   a_ru(its,k,jm) =a_ru(its,k,jm) +a_Tmpv1
   ENDDO

   ENDDO

   ENDIF

!LPB[11]

   IF( (config_flags%open_ye) .and. jte == jde ) THEN
   i_start =its
   i_end =min(ite, ide-1)
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jte) +cb*mut(i,jte-1)
   Tmpv300(k,i) =Tmpv001
   vb =max(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =v_old(i,k,jte) -v_old(i,k,jte-1)
   Tmpv302(k,i) =Tmpv001
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ye) .and. jte == jde ) THEN
   i_start =its
   i_end =min(ite, ide-1)

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)

   a_Tmpv3 =a_tendency(i,k,jte)
   a_tendency(i,k,jte) =0.0
   a_tendency(i,k,jte) =a_tendency(i,k,jte) +a_Tmpv3
   a_Tmpv2 =-a_Tmpv3
   a_vb =a_vb +rdy*Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =rdy*vb*a_Tmpv2
   a_v_old(i,k,jte) =a_v_old(i,k,jte) +a_Tmpv1
   a_v_old(i,k,jte-1) =a_v_old(i,k,jte-1) -a_Tmpv1

   a_Tmpv1=(1.0 +(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv1
   a_mut(i,jte-1) =a_mut(i,jte-1) +cb*a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[9]

   IF( (config_flags%open_ys) .and. jts == jds ) THEN
   i_start =its
   i_end =min(ite, ide-1)
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jts) -cb*mut(i,jts)
   Tmpv300(k,i) =Tmpv001
   vb =min(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =v_old(i,k,jts+1) -v_old(i,k,jts)
   Tmpv302(k,i) =Tmpv001
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ys) .and. jts == jds ) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)

   a_Tmpv3 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv3
   a_Tmpv2 =-a_Tmpv3
   a_vb =a_vb +rdy*Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =rdy*vb*a_Tmpv2
   a_v_old(i,k,jts+1) =a_v_old(i,k,jts+1) +a_Tmpv1
   a_v_old(i,k,jts) =a_v_old(i,k,jts) -a_Tmpv1

   a_Tmpv1=(1.0 -(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_rv(i,k,jts) =a_rv(i,k,jts) +a_Tmpv1
   a_mut(i,jts) =a_mut(i,jts) -cb*a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[7]

   IF( config_flags%polar .AND. (jte == jde) ) THEN

   DO i =ite, its, -1
   DO k =ktf, kts, -1
   a_tendency(i,k,jte) =0.0
   ENDDO
   ENDDO

   END IF

!LPB[6]

   IF( config_flags%polar .AND. (jts == jds) ) THEN

   DO i =ite, its, -1
   DO k =ktf, kts, -1
   a_tendency(i,k,jts) =0.0
   ENDDO
   ENDDO

   END IF

   IF( horz_order == 6 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-3)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-3)                ) degrade_ye = .false.

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = jte
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-1,jte)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = MIN(i_start+2,ids+3)
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-3
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx=msfvy(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux4(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux4(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   Tmpv003 =v(i_end+1,k,j) +v(i_end,k,j)  
   Tmpv002 =0.25*(ru(i_end+1,k,j)+ru(i_end+1,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_end+1,k,j) =a_v(i_end+1,k,j) +a_Tmpv3
   a_v(i_end,k,j) =a_v(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +a_Tmpv1
   a_ru(i_end+1,k,j-1) =a_ru(i_end+1,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux4(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux4(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   Tmpv003 =v(i,k,j) +v(i-1,k,j)  
   Tmpv002 =0.25*(ru(i,k,j)+ru(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_v(i-1,k,j) =a_v(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux6(v(i-3,k,j),v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),v(i+2,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_v(i+2,k,j) =a_v(i+2,k,j) +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),1.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),1.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,1.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux6(v(i-3,k,j),0.0,v(i-2,k,j),1.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-3,k,j) =a_v(i-3,k,j) +Diff_flux6(v(i-3,k,j),1.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-1)
        j_end_f = jde-2
      ENDIF

     jp1 = mod(j_end+1-j_start+1,2)+1
     jp0 = 2-mod(j_end+1-j_start+1,2)

   DO j =j_end+1, j_start, -1

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j-1)*rdy

   a_Tmpv3 =a_tendency(i,k,j-1)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdy*a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1

   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux6(v(i,k,j-3),v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),v(i,k,j+2),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+2) =a_v(i,k,j+2) +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),1.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),1.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,1.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux6(v(i,k,j-3),0.0,v(i,k,j-2),1.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-3) =a_v(i,k,j-3) +Diff_flux6(v(i,k,j-3),1.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j-1)
   IF (specified .AND. v(i,k,j) .LT. 0.)vb = v(i,k,j)
   Tmpv003 =v(i,k,j) +vb
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1))
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_vb =a_vb +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j) .LT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux4(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux4(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j)
   IF (specified .AND. v(i,k,j-1) .GT. 0.)vb = v(i,k,j-1)
   Tmpv003 =vb +v(i,k,j-1)
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1))
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_vb =a_vb +a_Tmpv3
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j-1) .GT. 0.) THEN

   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux4(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux4(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   jtmp = jp1
   jp1 = jp0
   jp0 = jtmp

   ENDDO

   ELSE IF( horz_order == 5 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-3)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-3)                ) degrade_ye = .false.

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = jte
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-1,jte)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = MIN(i_start+2,ids+3)
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-3
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfvy(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux3(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux3(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   Tmpv003 =v(i_end+1,k,j) +v(i_end,k,j)  
   Tmpv002 =0.25*(ru(i_end+1,k,j)+ru(i_end+1,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_end+1,k,j) =a_v(i_end+1,k,j) +a_Tmpv3
   a_v(i_end,k,j) =a_v(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +a_Tmpv1
   a_ru(i_end+1,k,j-1) =a_ru(i_end+1,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux3(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux3(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   Tmpv003 =v(i,k,j) +v(i-1,k,j)  
   Tmpv002 =0.25*(ru(i,k,j)+ru(i,k,j-1))  
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_v(i-1,k,j) =a_v(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux5(v(i-3,k,j),v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),v(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_v(i+2,k,j) =a_v(i+2,k,j) +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),1.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),1.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,1.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux5(v(i-3,k,j),0.0,v(i-2,k,j),1.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-3,k,j) =a_v(i-3,k,j) +Diff_flux5(v(i-3,k,j),1.0,v(i-2,k,j),0.0,v(i-1,k,j)  &
   ,0.0,v(i,k,j),0.0,v(i+1,k,j),0.0,v(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +0.5*a_vel
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-1)
        j_end_f = jde-2
      ENDIF

     jp1 = mod(j_end+1-j_start+1,2)+1
     jp0 = 2-mod(j_end+1-j_start+1,2) 

   DO j =j_end+1, j_start, -1

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msfvy(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux5(v(i,k,j-3),v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),v(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+2) =a_v(i,k,j+2) +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),1.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),1.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,1.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux5(v(i,k,j-3),0.0,v(i,k,j-2),1.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-3) =a_v(i,k,j-3) +Diff_flux5(v(i,k,j-3),1.0,v(i,k,j-2),0.0,v(i,k,j-1)  &
   ,0.0,v(i,k,j),0.0,v(i,k,j+1),0.0,v(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +0.5*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j-1)
   IF (specified .AND. v(i,k,j) .LT. 0.)vb = v(i,k,j)
   Tmpv003 =v(i,k,j) +vb
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1))
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_vb =a_vb +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j) .LT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux3(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux3(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +0.5*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jde ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j)
   IF (specified .AND. v(i,k,j-1) .GT. 0.)vb = v(i,k,j-1)
   Tmpv003 =vb +v(i,k,j-1)
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1))
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_vb =a_vb +a_Tmpv3
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j-1) .GT. 0.) THEN

   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux3(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux3(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +0.5*a_vel
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +0.5*a_vel
   ENDDO
   ENDDO

   END IF
   jtmp = jp1
   jp1 = jp0
   jp0 = jtmp

   ENDDO

   ELSE IF( horz_order == 4 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-2)                ) degrade_ye = .false.

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = jte
      
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-1,jte)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-2
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx=msfvy(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   Tmpv003 =v(i_end+1,k,j) +v(i_end,k,j)  
   Tmpv002 =0.25*(ru(i_end+1,k,j)+ru(i_end+1,k,j-1))   
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_end+1,k,j) =a_v(i_end+1,k,j) +a_Tmpv3
   a_v(i_end,k,j) =a_v(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +a_Tmpv1
   a_ru(i_end+1,k,j-1) =a_ru(i_end+1,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   Tmpv003 =v(i_start,k,j) +v(i_start-1,k,j)  
   Tmpv002 =0.25*(ru(i_start,k,j)+ru(i_start,k,j-1))   
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_start,k,j) =a_v(i_start,k,j) +a_Tmpv3
   a_v(i_start-1,k,j) =a_v(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +a_Tmpv1
   a_ru(i_start,k,j-1) =a_ru(i_start,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux4(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux4(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux4(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ktf=MIN(kte,kde-1)

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = jds+1
        j_start_f = j_start+1
      ENDIF

      IF(degrade_ye) then
        j_end = jde-1
        j_end_f = jde-1
      ENDIF

     jp0 = 2-mod(j_end+1-j_start+1,2) 
     jp1 = mod(j_end+1-j_start+1,2)+1


   DO j =j_end+1, j_start, -1
   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE

   IF( j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j-1)*rdy     

   a_Tmpv3 =a_tendency(i,k,j-1)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdy*a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1

   ENDDO
   ENDDO

   END IF

   END IF

   IF((j == j_start) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j-1)
   IF (specified .AND. v(i,k,j) .LT. 0.)vb = v(i,k,j)
   Tmpv003 =v(i,k,j) +vb
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1)) 
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_vb =a_vb +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j) .LT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF((j == j_end+1) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j)
   IF (specified .AND. v(i,k,j-1) .GT. 0.)vb = v(i,k,j-1)
   Tmpv003 =vb +v(i,k,j-1)
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1)) 
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_vb =a_vb +a_Tmpv3
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j-1) .GT. 0.) THEN

   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux4(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux4(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux4(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   jtmp = jp1
   jp1 = jp0
   jp0 = jtmp

   ENDDO

   ELSE IF( horz_order == 3 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-2)                ) degrade_ye = .false.

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = jte
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-1,jte)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-2
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx=msfvy(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   Tmpv003 =v(i_end+1,k,j) +v(i_end,k,j)  
   Tmpv002 =0.25*(ru(i_end+1,k,j)+ru(i_end+1,k,j-1))   
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_end+1,k,j) =a_v(i_end+1,k,j) +a_Tmpv3
   a_v(i_end,k,j) =a_v(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +a_Tmpv1
   a_ru(i_end+1,k,j-1) =a_ru(i_end+1,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO k =ktf, kts, -1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   Tmpv003 =v(i_start,k,j) +v(i_start-1,k,j)  
   Tmpv002 =0.25*(ru(i_start,k,j)+ru(i_start,k,j-1))   
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i_start,k,j) =a_v(i_start,k,j) +a_Tmpv3
   a_v(i_start-1,k,j) =a_v(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +a_Tmpv1
   a_ru(i_start,k,j-1) =a_ru(i_start,k,j-1) +a_Tmpv1
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel = 0.5*(ru(i,k,j)+ru(i,k,j-1))
   Tmpv001 =flux3(v(i-2,k,j),v(i-1,k,j),v(i,k,j),v(i+1,k,j),vel)  

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j),0.0,v(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i+1,k,j) =a_v(i+1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,1.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-1,k,j) =a_v(i-1,k,j) +Diff_flux3(v(i-2,k,j),0.0,v(i-1,k,j),1.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_v(i-2,k,j) =a_v(i-2,k,j) +Diff_flux3(v(i-2,k,j),1.0,v(i-1,k,j),0.0,v(i,k,j)  &
   ,0.0,v(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ktf=MIN(kte,kde-1)

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = jds+1
        j_start_f = j_start+1
      ENDIF

      IF(degrade_ye) then
        j_end = jde-1
        j_end_f = jde-1
      ENDIF

     jp0 = 2-mod(j_end+1-j_start+1,2) 
     jp1 = mod(j_end+1-j_start+1,2)+1

   DO j =j_end+1, j_start, -1
   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,j-1) =0.0
   ENDDO
   ENDDO

   ELSE

   IF( j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j-1)*rdy

   a_Tmpv3 =a_tendency(i,k,j-1)
   a_Tmpv2 =-a_Tmpv3
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1

   ENDDO
   ENDDO

   END IF

   END IF

   IF((j == j_start) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j-1)
   IF (specified .AND. v(i,k,j) .LT. 0.)vb = v(i,k,j)
   Tmpv003 =v(i,k,j) +vb
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1)) 
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv3
   a_vb =a_vb +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j) .LT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE IF((j == j_end+1) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   vb = v(i,k,j)
   IF (specified .AND. v(i,k,j-1) .GT. 0.)vb = v(i,k,j-1)
   Tmpv003 =vb +v(i,k,j-1)
   Tmpv002 =0.25*(rv(i,k,j)+rv(i,k,j-1)) 
   a_Tmpv2 =Tmpv003*a_Tmpv4
   a_Tmpv3 =Tmpv002*a_Tmpv4
   a_vb =a_vb +a_Tmpv3
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1

   IF(specified .AND. v(i,k,j-1) .GT. 0.) THEN

   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = 0.5*(rv(i,k,j)+rv(i,k,j-1))
   Tmpv001 =flux3(v(i,k,j-2),v(i,k,j-1),v(i,k,j),v(i,k,j+1),vel)  

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j),0.0,v(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_v(i,k,j+1) =a_v(i,k,j+1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j) =a_v(i,k,j) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,1.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-1) =a_v(i,k,j-1) +Diff_flux3(v(i,k,j-2),0.0,v(i,k,j-1),1.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_v(i,k,j-2) =a_v(i,k,j-2) +Diff_flux3(v(i,k,j-2),1.0,v(i,k,j-1),0.0,v(i,k,j)  &
   ,0.0,v(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   END IF
   jtmp = jp1
   jp1 = jp0
   jp0 = jtmp

   ENDDO

   ELSE IF( horz_order == 2 ) THEN
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      IF ( config_flags%open_ys ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye ) j_end   = MIN(jde-1,jte)
      IF ( specified ) j_start = MAX(jds+2,jts)
      IF ( specified ) j_end   = MIN(jde-2,jte)
      IF ( config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%polar ) j_end   = MIN(jde-1,jte)

      IF ( .NOT. config_flags%periodic_x ) THEN
        IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
        IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-2,ite)
      ENDIF
      IF ( config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%polar ) j_end   = MIN(jde-1,jte)

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx=msfvy(i,j)*rdx

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   Tmpv005 =v(i,k,j) +v(i-1,k,j)  
   Tmpv004 =ru(i,k,j) +ru(i,k,j-1)  
   a_Tmpv4 =Tmpv005*a_Tmpv6
   a_Tmpv5 =Tmpv004*a_Tmpv6
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv5
   a_v(i-1,k,j) =a_v(i-1,k,j) +a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv4
   a_ru(i,k,j-1) =a_ru(i,k,j-1) +a_Tmpv4
   Tmpv002 =v(i+1,k,j) +v(i,k,j)  
   Tmpv001 =ru(i+1,k,j) +ru(i+1,k,j-1)  
   a_Tmpv1 =Tmpv002*a_Tmpv3
   a_Tmpv2 =Tmpv001*a_Tmpv3
   a_v(i+1,k,j) =a_v(i+1,k,j) +a_Tmpv2
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv2
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +a_Tmpv1
   a_ru(i+1,k,j-1) =a_ru(i+1,k,j-1) +a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = jte

      IF ( config_flags%open_ys ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye ) j_end   = MIN(jde-1,jte)
      IF ( specified ) j_start = MAX(jds+2,jts)
      IF ( specified ) j_end   = MIN(jde-2,jte)
      IF ( config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%polar ) j_end   = MIN(jde-1,jte)

   IF( specified .AND. jte .GE. jde-1 ) THEN
   j =jde-1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j)*rdy

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   Tmpv005 =v(i,k,j) +v(i,k,j-1)  
   Tmpv004 =rv(i,k,j) +rv(i,k,j-1)  
   a_Tmpv4 =Tmpv005*a_Tmpv6
   a_Tmpv5 =Tmpv004*a_Tmpv6
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv5
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv4
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv4
   vb = v(i,k,j+1)
   IF (v(i,k,j) .GT. 0.) vb = v(i,k,j)
   Tmpv002 =vb +v(i,k,j)
   Tmpv001 =rv(i,k,j+1) +rv(i,k,j)
   a_Tmpv1 =Tmpv002*a_Tmpv3
   a_Tmpv2 =Tmpv001*a_Tmpv3
   a_vb =a_vb +a_Tmpv2
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +a_Tmpv1
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1

   IF(v(i,k,j) .GT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j+1) =a_v(i,k,j+1) +a_vb
   a_vb =0.0

   ENDDO
   ENDDO

   ENDIF

   IF( specified .AND. jts .LE. jds+1 ) THEN
   j =jds+1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j)*rdy       

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   vb = v(i,k,j-1)
   IF (v(i,k,j) .LT. 0.) vb = v(i,k,j)
   Tmpv005 =v(i,k,j) +vb
   Tmpv004 =rv(i,k,j) +rv(i,k,j-1)
   a_Tmpv4 =Tmpv005*a_Tmpv6
   a_Tmpv5 =Tmpv004*a_Tmpv6
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv5
   a_vb =a_vb +a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv4
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv4
   Tmpv002 =v(i,k,j+1) +v(i,k,j)  
   Tmpv001 =rv(i,k,j+1) +rv(i,k,j)  
   a_Tmpv1 =Tmpv002*a_Tmpv3
   a_Tmpv2 =Tmpv001*a_Tmpv3
   a_v(i,k,j+1) =a_v(i,k,j+1) +a_Tmpv2
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +a_Tmpv1
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1

   IF(v(i,k,j) .LT. 0.) THEN

   a_v(i,k,j) =a_v(i,k,j) +a_vb
   a_vb =0.0

   END IF
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_vb
   a_vb =0.0

   ENDDO
   ENDDO

   ENDIF

   IF(config_flags%polar) THEN

   IF(jts == jds) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,jds) =0.0
   ENDDO
   ENDDO

   END IF

   IF(jte == jde) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_tendency(i,k,jde) =0.0
   ENDDO
   ENDDO

   END IF

   END IF
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy=msfvy(i,j)*rdy

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.25*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   Tmpv005 =v(i,k,j) +v(i,k,j-1)  
   Tmpv004 =rv(i,k,j) +rv(i,k,j-1)  
   a_Tmpv4 =Tmpv005*a_Tmpv6
   a_Tmpv5 =Tmpv004*a_Tmpv6
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv5
   a_v(i,k,j-1) =a_v(i,k,j-1) +a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv4
   a_rv(i,k,j-1) =a_rv(i,k,j-1) +a_Tmpv4
   Tmpv002 =v(i,k,j+1) +v(i,k,j)  
   Tmpv001 =rv(i,k,j+1) +rv(i,k,j)  
   a_Tmpv1 =Tmpv002*a_Tmpv3
   a_Tmpv2 =Tmpv001*a_Tmpv3
   a_v(i,k,j+1) =a_v(i,k,j+1) +a_Tmpv2
   a_v(i,k,j) =a_v(i,k,j) +a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +a_Tmpv1
   a_rv(i,k,j) =a_rv(i,k,j) +a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 0 ) THEN
   ELSE
   ENDIF

   END SUBROUTINE a_advect_v

   SUBROUTINE a_advect_scalar(field,a_field,field_old,a_field_old,tendency, &
   a_tendency,ru,a_ru,rv,a_rv,rom,a_rom,mut,a_mut,time_step,config_flags, &
   msfux,msfuy,msfvx,msfvy,msftx,msfty,fzm,fzp,rdx,rdy,rdzw,ids,ide,jds,jde,kds,kde,ims, &
   ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: field,a_field,field_old,a_field_old, &
   ru,a_ru,rv,a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzw
   REAL :: rdx,rdy
   INTEGER :: time_step
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax
   REAL :: mrdx,mrdy,ub,a_ub,vb,a_vb,uw,a_uw,vw,a_vw
   REAL,DIMENSION(its:ite,kts:kte) :: vflux,a_vflux
   REAL,DIMENSION(its:ite+1,kts:kte) :: fqx,a_fqx
   REAL,DIMENSION(its:ite,kts:kte,2) :: fqy,a_fqy
   INTEGER :: horz_order,vert_order
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   INTEGER :: jp1,jp0,jtmp
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6
   REAL :: q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   q_ip2,a_q_ip2,ua,a_ua,vel,a_vel

   INTEGER, DIMENSION(jms:jme) :: WALLS_jp03,WALLS_jp13
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp04,WALLS_jp14
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp05,WALLS_jp15
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp06,WALLS_jp16

   Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
   a_ua) =(7.*(a_q_i +a_q_im1) -(a_q_ip1 +a_q_im2))/12.0
   flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7.*(q_i +q_im1) -(q_ip1 +q_im2))/12.0

   Diff_flux3(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
   a_ua) =Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   ua,a_ua) +(sign(1, time_step) *sign(1., ua)*((a_q_ip1 -a_q_im2) &
   -3.*(a_q_i -a_q_im1))/12.0)
   flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1, time_step) &
   *sign(1., ua)*((q_ip1 -q_im2) -3.*(q_i -q_im1))/12.0

   Diff_flux6(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =(37.*(a_q_i +a_q_im1) -8.*( &
   a_q_ip1 +a_q_im2) +(a_q_ip2 +a_q_im3))/60.0
   flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37.*(q_i +q_im1) -8.*(q_ip1 +q_im2) &
   +(q_ip2 +q_im3))/60.0

   Diff_flux5(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =Diff_flux6(q_im3,a_q_im3,q_im2, &
   a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,q_ip2,a_q_ip2,ua, &
   a_ua) -(sign(1, time_step) *sign(1., ua)*((a_q_ip2 -a_q_im3) -5.*( &
   a_q_ip1 -a_q_im2) +10.*(a_q_i -a_q_im1))/60.0)
   flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
   ua) -sign(1, time_step) *sign(1., ua)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) &
   +10.*(q_i -q_im1))/60.0

   LOGICAL :: specified

   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007

   REAL :: gwalls, qwalls, kwalls

!PART II: CALCULATIONS OF B. S. TRAJECTORY

!LPB[0]

     specified = .false.
     if(config_flags%specified .or. config_flags%nested) specified = .true.
     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

!LPB[3]
  horizontal_order_test : IF( horz_order == 6 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-3)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

        j_loop_y_flux_6 : DO j = j_start, j_end+1
           WALLS_jp16(j)=jp1
           WALLS_jp06(j)=jp0
           jtmp = jp1
           jp1 = jp0
           jp0 = jtmp
         ENDDO j_loop_y_flux_6

    ELSE IF( horz_order == 5 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-3)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

        j_loop_y_flux_5 : DO j = j_start, j_end+1
           WALLS_jp15(j)=jp1
           WALLS_jp05(j)=jp0
           jtmp = jp1
           jp1 = jp0
           jp0 = jtmp
         ENDDO j_loop_y_flux_5

   ELSE IF( horz_order == 4 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then
           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then
           i_end = ide-2
           i_end_f = ide-2
         ENDIF

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then
           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then
           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

       jp1 = 2
       jp0 = 1

     DO j = j_start, j_end+1
       WALLS_jp14(j)=jp1
       WALLS_jp04(j)=jp0
       jtmp = jp1
       jp1 = jp0
       jp0 = jtmp
     ENDDO
   ELSE IF( horz_order == 3 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.
      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then
           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then
           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then
           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

       jp1 = 2
       jp0 = 1

     DO j = j_start, j_end+1
       WALLS_jp13(j)=jp1
       WALLS_jp03(j)=jp0
       jtmp = jp1
       jp1 = jp0
       jp0 = jtmp
     ENDDO

   ELSE IF( horz_order == 2 ) THEN
   ELSE IF ( horz_order == 0 ) THEN
   ELSE
   ENDIF horizontal_order_test 

   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)

!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0
   a_uw =0.0
   a_vw =0.0

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_vflux(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite+1
   a_fqx(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K2_ADJ =1, 2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_q_im3 =0.0
   a_q_im2 =0.0
   a_q_im1 =0.0
   a_q_i =0.0
   a_q_ip1 =0.0
   a_q_ip2 =0.0
   a_ua =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

!LPB[15]

   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)

   IF(vert_order == 6) THEN
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k=ktf
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1

   k = ktf-1
   vel =rom(i,k,j)
   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel

   k = kts+2
   vel =rom(i,k,j)
   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel

   k=kts+1

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel =rom(i,k,j)
   Tmpv001 =flux6(field(i,k-3,j),field(i,k-2,j),field(i,k-1,j),field(i,k,j)  &
   ,field(i,k+1,j),field(i,k+2,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2

   a_vel =a_vel -Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+2,j) =a_field(i,k+2,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,j)  &
   ,0.0,field(i,k-1,j),0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),1.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-3,j) =a_field(i,k-3,j) +Diff_flux6(field(i,k-3,j),1.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 5) THEN
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
!ADDED BY WALLS
   k=ktf
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1

   k = ktf-1
   vel =rom(i,k,j)
   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel

   k = kts+2
   vel =rom(i,k,j)
   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel

   k =kts+1
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
   vel =rom(i,k,j)
   Tmpv001 =flux5(field(i,k-3,j),field(i,k-2,j),field(i,k-1,j),field(i,k,j)  &
   ,field(i,k+1,j),field(i,k+2,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+2,j) =a_field(i,k+2,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,j)  &
   ,0.0,field(i,k-1,j),0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),1.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-3,j) =a_field(i,k-3,j) +Diff_flux5(field(i,k-3,j),1.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 4) THEN
!ADDED BY WALLS

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
!ADDED BY WALLS
   k=ktf
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
!ADDED BY WALLS
   k=kts+1
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel =rom(i,k,j)
   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 3) THEN

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   gwalls =rdzw(k)
   DO i =i_end, i_start, -1
   a_vflux(i,k+1) =a_vflux(i,k+1) -gwalls*a_tendency(i,k,j)
   a_vflux(i,k) =a_vflux(i,k) +gwalls*a_tendency(i,k,j)
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   k=ktf
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1

   k=kts+1
   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +(fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j))*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   vel =rom(i,k,j)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)*a_Tmpv2

   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzw(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv001*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE

   ENDIF

!LPB[13]
   DO i =i_end, i_start, -1
   a_vflux(i,kte) =0.0
   a_vflux(i,kts) =0.0
   ENDDO

!LPB[12]

!LPB[11]
   IF( (config_flags%open_ye) .and. (jte == jde)) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   vb =max(0.5*(rv(i,k,jte-1) +rv(i,k,jte)), 0.)

   Tmpv002 =vb*(field_old(i,k,j_end) -field_old(i,k,j_end-1))
   Tmpv004 =field(i,k,j_end)*(rv(i,k,jte) -rv(i,k,jte-1))
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdy*Tmpv005
   Tmpv007 =tendency(i,k,j_end) -Tmpv006
   tendency(i,k,j_end) =Tmpv007
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =max(0.5*(rv(i,k,jte-1) +rv(i,k,jte)), 0.)

   a_Tmpv7 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,j_end) =a_field(i,k,j_end) +(rv(i,k,jte) -rv(i,k,jte-1))*a_Tmpv4
   a_Tmpv3 =field(i,k,j_end)*a_Tmpv4
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv3
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) -a_Tmpv3
   a_vb =a_vb +(field_old(i,k,j_end) -field_old(i,k,j_end-1))*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,j_end) =a_field_old(i,k,j_end) +a_Tmpv1
   a_field_old(i,k,j_end-1) =a_field_old(i,k,j_end-1) -a_Tmpv1

   a_Tmpv2 =(1.0 +(1.0)*sign(1.0, 0.5*(rv(i,k,jte-1) +rv(i,k,jte))))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) +a_Tmpv1
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[10]

!LPB[9]

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   vb =min(0.5*(rv(i,k,jts) +rv(i,k,jts+1)), 0.)

   Tmpv002 =vb*(field_old(i,k,jts+1) -field_old(i,k,jts))
   Tmpv004 =field(i,k,jts)*(rv(i,k,jts+1) -rv(i,k,jts))
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdy*Tmpv005
   Tmpv007 =tendency(i,k,jts) -Tmpv006
   tendency(i,k,jts) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =min(0.5*(rv(i,k,jts) +rv(i,k,jts+1)), 0.)

   a_Tmpv7 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,jts) =a_field(i,k,jts) +(rv(i,k,jts+1) -rv(i,k,jts))*a_Tmpv4
   a_Tmpv3 =field(i,k,jts)*a_Tmpv4
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv3
   a_rv(i,k,jts) =a_rv(i,k,jts) -a_Tmpv3
   a_vb =a_vb +(field_old(i,k,jts+1) -field_old(i,k,jts))*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,jts+1) =a_field_old(i,k,jts+1) +a_Tmpv1
   a_field_old(i,k,jts) =a_field_old(i,k,jts) -a_Tmpv1

   a_Tmpv2 =(1.0 -(1.0)*sign(1.0, 0.5*(rv(i,k,jts) +rv(i,k,jts+1))))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jts) =a_rv(i,k,jts) +a_Tmpv1
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[7]

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   ub =max(0.5*(ru(ite-1,k,j) +ru(ite,k,j)), 0.)

   Tmpv002 =ub*(field_old(i_end,k,j) -field_old(i_end-1,k,j))
   Tmpv004 =field(i_end,k,j)*(ru(ite,k,j) -ru(ite-1,k,j))
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdx*Tmpv005
   Tmpv007 =tendency(i_end,k,j) -Tmpv006
   tendency(i_end,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =max(0.5*(ru(ite-1,k,j) +ru(ite,k,j)), 0.)

   a_Tmpv7 =a_tendency(i_end,k,j)
   a_tendency(i_end,k,j) =0.0
   a_tendency(i_end,k,j) =a_tendency(i_end,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i_end,k,j) =a_field(i_end,k,j) +(ru(ite,k,j) -ru(ite-1,k,j))*a_Tmpv4
   a_Tmpv3 =field(i_end,k,j)*a_Tmpv4
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv3
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) -a_Tmpv3
   a_ub =a_ub +(field_old(i_end,k,j) -field_old(i_end-1,k,j))*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(i_end,k,j) =a_field_old(i_end,k,j) +a_Tmpv1
   a_field_old(i_end-1,k,j) =a_field_old(i_end-1,k,j) -a_Tmpv1

   a_Tmpv2 =(1.0 +(1.0)*sign(1.0, 0.5*(ru(ite-1,k,j) +ru(ite,k,j))))*0.5*a_vb
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) +a_Tmpv1
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[6]

!LPB[5]

!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

   IF( (config_flags%open_xs) .and. (its == ids) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   ub =min(0.5*(ru(its,k,j) +ru(its+1,k,j)), 0.)

   Tmpv002 =ub*(field_old(its+1,k,j) -field_old(its,k,j))
   Tmpv004 =field(its,k,j)*(ru(its+1,k,j) -ru(its,k,j))
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdx*Tmpv005
   Tmpv007 =tendency(its,k,j) -Tmpv006
   tendency(its,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xs) .and. (its == ids) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =min(0.5*(ru(its,k,j) +ru(its+1,k,j)), 0.)

   a_Tmpv7 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(its,k,j) =a_field(its,k,j) +(ru(its+1,k,j) -ru(its,k,j))*a_Tmpv4
   a_Tmpv3 =field(its,k,j)*a_Tmpv4
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv3
   a_ru(its,k,j) =a_ru(its,k,j) -a_Tmpv3
   a_ub =a_ub +(field_old(its+1,k,j) -field_old(its,k,j))*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(its+1,k,j) =a_field_old(its+1,k,j) +a_Tmpv1
   a_field_old(its,k,j) =a_field_old(its,k,j) -a_Tmpv1

   a_Tmpv2 =(1.0 -(1.0)*sign(1.0, 0.5*(ru(its,k,j) +ru(its+1,k,j))))*0.5*a_vb
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(its,k,j) =a_ru(its,k,j) +a_Tmpv1
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[3]
   specified = .false.
   if(config_flags%specified .or. config_flags%nested) specified = .true.
   ktf=MIN(kte,kde-1)
   horz_order = config_flags%h_sca_adv_order
   vert_order = config_flags%v_sca_adv_order

   IF( horz_order == 6 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-3)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-4)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1
!ABOVE WERE ADDED BY WALLS

!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = MIN(i_start+2,ids+3)
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-3
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =-a_tendency(i,k,j)
   a_Tmpv1 =msftx(i,j)*rdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
   vel =ru(i,k,j)
   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*(field(i,k,j) +field(i-1,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
   vel =ru(i,k,j)
   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO

   END IF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*(field(i,k,j) +field(i-1,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =ru(i,k,j)
   Tmpv001 =flux6(field(i-3,k,j),field(i-2,k,j),field(i-1,k,j),field(i,k,j)  &
   ,field(i+1,k,j),field(i+2,k,j),vel)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+2,k,j) =a_field(i+2,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,j)  &
   ,0.0,field(i-1,k,j),0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),1.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-3,k,j) =a_field(i-3,k,j) +Diff_flux6(field(i-3,k,j),1.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

!START ADJOINT OF j_loop_y_flux_6
!ADDED BY WALLS

      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp16(j)
   jp0=WALLS_jp06(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
!ABOVE ARE MOVED FROM ABOVE LINES

   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)
   Tmpv001 =flux6(field(i,k,j-3),field(i,k,j-2),field(i,k,j-1),field(i,k,j)  &
   ,field(i,k,j+1),field(i,k,j+2),vel)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+2) =a_field(i,k,j+2) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-2)  &
   ,0.0,field(i,k,j-1),0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),1.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-3) =a_field(i,k,j-3) +Diff_flux6(field(i,k,j-3),1.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*(field(i,k,j) +field(i,k,j-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)
   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*(field(i,k,j) +field(i,k,j-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)
   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   ELSE IF( horz_order == 5 ) THEN
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-3)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-4)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = MIN(i_start+2,ids+3)
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-3
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =msftx(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) -a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) +a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
   vel =ru(i,k,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*(field(i,k,j) +field(i-1,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
   vel =ru(i,k,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO

   END IF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
   Tmpv001 =field(i,k,j) +field(i-1,k,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv001*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   vel =ru(i,k,j)
   Tmpv001 =flux5(field(i-3,k,j),field(i-2,k,j),field(i-1,k,j),field(i,k,j)  &
   ,field(i+1,k,j),field(i+2,k,j),vel)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+2,k,j) =a_field(i+2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j)  &
   ,0.0,field(i-1,k,j),0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),1.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-3,k,j) =a_field(i-3,k,j) +Diff_flux5(field(i-3,k,j),1.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   ENDDO
   ENDDO
   ENDDO

      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp15(j)
   jp0=WALLS_jp05(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv2
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv2
   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)
   Tmpv001 =flux5(field(i,k,j-3),field(i,k,j-2),field(i,k,j-1),field(i,k,j)  &
   ,field(i,k,j+1),field(i,k,j+2),vel)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =Tmpv001*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+2) =a_field(i,k,j+2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2)  &
   ,0.0,field(i,k,j-1),0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),1.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-3) =a_field(i,k,j-3) +Diff_flux5(field(i,k,j-3),1.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   Tmpv001 =field(i,k,j) +field(i,k,j-1)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv001*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*(field(i,k,j) +field(i,k,j-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel =rv(i,k,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   ELSE IF( horz_order == 4 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF

      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF

!ADDED BY WALLS
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then

           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

       jp1 = 2
       jp0 = 1

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp14(j)
   jp0=WALLS_jp04(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF( j > j_start ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   IF((j < j_start_f) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +0.5*(field(i,k,j_start) +field(i,k,j_start-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j_start)*a_Tmpv2
   a_field(i,k,j_start) =a_field(i,k,j_start) +a_Tmpv1
   a_field(i,k,j_start-1) =a_field(i,k,j_start-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*(field(i,k,j) +field(i,k,j-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),rv(i,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +Tmpv001*a_Tmpv2
   a_Tmpv1 =rv(i,k,j)*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1

   ENDDO
   ENDDO

   END IF
   ENDDO

   IF(config_flags%polar) THEN

   END IF

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF
!ADDED BY WALLS
      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =msftx(i,j)*rdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +0.5*(field(i_end+1,k,j) +field(i_end,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*ru(i_end+1,k,j)*a_Tmpv2
   a_field(i_end+1,k,j) =a_field(i_end+1,k,j) +a_Tmpv1
   a_field(i_end,k,j) =a_field(i_end,k,j) +a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +0.5*(field(i_start,k,j) +field(i_start-1,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*ru(i_start,k,j)*a_Tmpv2
   a_field(i_start,k,j) =a_field(i_start,k,j) +a_Tmpv1
   a_field(i_start-1,k,j) =a_field(i_start-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),ru(i,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +Tmpv001*a_Tmpv2
   a_Tmpv1 =ru(i,k,j)*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-3)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+2)                ) THEN

   END IF

   ELSE IF( horz_order == 3 ) THEN

!ADDED BY WALLS
   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-3)                ) degrade_ye = .false.

!  begin flux computations
!  start with x flux divergence

   ktf=MIN(kte,kde-1)

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-2
        i_end_f = ide-2
      ENDIF
!ABOVE IS ADDED BY WALLS

!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = jds+1
        j_start_f = j_start+1
      ENDIF

      IF(degrade_ye) then
        j_end = jde-2
        j_end_f = jde-2
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

    jp1 = 2
    jp0 = 1

!ABOVE IS ADDED BY WALLS

   DO j =j_end+1, j_start, -1
   jp1=WALLS_jp13(j)
   jp0=WALLS_jp03(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =a_tendency(i,k,j-1)
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)

   ENDDO
   ENDDO

   ELSE

   IF( j > j_start ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   IF((j < j_start_f) .and. degrade_ys) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +0.5*(field(i,k,j_start) +field(i,k,j_start-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j_start)*a_Tmpv2
   a_field(i,k,j_start) =a_field(i,k,j_start) +a_Tmpv1
   a_field(i,k,j_start-1) =a_field(i,k,j_start-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*(field(i,k,j) +field(i,k,j-1))*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),rv(i,k,j))

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +Tmpv001*a_Tmpv2
   a_Tmpv1 =rv(i,k,j)*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,rv(i,k,j),0.0)*a_Tmpv1

   ENDDO
   ENDDO

   END IF
   ENDDO

   IF(config_flags%polar) THEN

   END IF

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF

!ADDED BY WALLS
      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = ide-2
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +0.5*(field(i_end+1,k,j) +field(i_end,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*ru(i_end+1,k,j)*a_Tmpv2
   a_field(i_end+1,k,j) =a_field(i_end+1,k,j) +a_Tmpv1
   a_field(i_end,k,j) =a_field(i_end,k,j) +a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO k =ktf, kts, -1
   a_Tmpv2 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +0.5*(field(i_start,k,j) +field(i_start-1,k,j))*a_Tmpv2
   a_Tmpv1 =0.5*ru(i_start,k,j)*a_Tmpv2
   a_field(i_start,k,j) =a_field(i_start,k,j) +a_Tmpv1
   a_field(i_start-1,k,j) =a_field(i_start-1,k,j) +a_Tmpv1
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),ru(i,k,j))

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +Tmpv001*a_Tmpv2
   a_Tmpv1 =ru(i,k,j)*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,ru(i,k,j),0.0)*a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-3)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+2)                ) THEN

   END IF

   ELSE IF( horz_order == 2 ) THEN

!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( .NOT. config_flags%periodic_x ) THEN
        IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
        IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-2,ite)
      ENDIF

!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)

      ! Polar boundary conditions are like open or specified
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-2,jte)

   IF(config_flags%polar) THEN

   IF(jts == jds) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,jds)*rdy

   a_Tmpv4 =a_tendency(i,k,jds)
   a_tendency(i,k,jds) =0.0
   a_tendency(i,k,jds) =a_tendency(i,k,jds) +a_Tmpv4
   a_Tmpv3 =-a_Tmpv4
   a_Tmpv1 =(field(i,k,jds+1) +field(i,k,jds))*a_Tmpv3
   a_Tmpv2 =mrdy*0.5*rv(i,k,jds+1)*a_Tmpv3
   a_field(i,k,jds+1) =a_field(i,k,jds+1) +a_Tmpv2
   a_field(i,k,jds) =a_field(i,k,jds) +a_Tmpv2
   a_rv(i,k,jds+1) =a_rv(i,k,jds+1) +mrdy*0.5*a_Tmpv1

   ENDDO
   ENDDO

   END IF

   IF(jte == jde) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,jde-1)*rdy

   a_Tmpv3 =a_tendency(i,k,jde-1)
   a_Tmpv1 =(field(i,k,jde-1) +field(i,k,jde-2))*a_Tmpv3
   a_Tmpv2 =mrdy*0.5*rv(i,k,jde-1)*a_Tmpv3
   a_field(i,k,jde-1) =a_field(i,k,jde-1) +a_Tmpv2
   a_field(i,k,jde-2) =a_field(i,k,jde-2) +a_Tmpv2
   a_rv(i,k,jde-1) =a_rv(i,k,jde-1) +mrdy*0.5*a_Tmpv1

   ENDDO
   ENDDO

   END IF

   END IF
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j)*rdy

   a_Tmpv7 =a_tendency(i,k,j)
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdy*0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +(field(i,k,j) +field(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =rv(i,k,j)*a_Tmpv4
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv3
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv3
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +(field(i,k,j+1) +field(i,k,j))*a_Tmpv2
   a_Tmpv1 =rv(i,k,j+1)*a_Tmpv2
   a_field(i,k,j+1) =a_field(i,k,j+1) +a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   IF( config_flags%open_ye .or. specified .or. config_flags%polar ) THEN

   END IF

   IF( config_flags%open_ys .or. specified .or. config_flags%polar ) THEN

   END IF
!ADDED BY WALLS
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( .NOT. config_flags%periodic_x ) THEN
        IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
        IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-2,ite)
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdx =msftx(i,j)*rdx

   a_Tmpv7 =a_tendency(i,k,j)
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =mrdx*0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +(field(i,k,j) +field(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =ru(i,k,j)*a_Tmpv4
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv3
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv3
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +(field(i+1,k,j) +field(i,k,j))*a_Tmpv2
   a_Tmpv1 =ru(i+1,k,j)*a_Tmpv2
   a_field(i+1,k,j) =a_field(i+1,k,j) +a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1

   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 0 ) THEN

   ELSE

   ENDIF

   END SUBROUTINE a_advect_scalar

   SUBROUTINE a_advect_w(w,a_w,w_old,a_w_old,tendency,a_tendency,ru,a_ru,rv, &
   a_rv,rom,a_rom,mut,a_mut,time_step,config_flags,msfux,msfuy,msfvx,msfvy,msftx, &
   msfty,fzm,fzp,rdx,rdy,rdzu,ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite, &
   jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: w,a_w,w_old,a_w_old,ru,a_ru,rv, &
   a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzu
   REAL :: rdx,rdy
   INTEGER :: time_step
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax
   REAL :: mrdx,mrdy,ub,a_ub,vb,a_vb,uw,a_uw,vw,a_vw
   REAL,DIMENSION(its:ite,kts:kte) :: vflux,a_vflux
   INTEGER :: horz_order,vert_order
   REAL,DIMENSION(its:ite+1,kts:kte) :: fqx,a_fqx
   REAL,DIMENSION(its:ite,kts:kte,2) :: fqy,a_fqy
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   INTEGER :: jp1,jp0,jtmp
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6
   REAL :: q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   q_ip2,a_q_ip2,ua,a_ua,vel,a_vel

   INTEGER, DIMENSION(jms:jme) :: WALLS_jp0,WALLS_jp1

   INTEGER, DIMENSION(jms:jme) :: WALLS_jp03,WALLS_jp13
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp04,WALLS_jp14
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp05,WALLS_jp15
   INTEGER, DIMENSION(jms:jme) :: WALLS_jp06,WALLS_jp16

    Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
    a_ua) =(7.*(a_q_i +a_q_im1) -(a_q_ip1 +a_q_im2))/12.0
    flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7.*(q_i +q_im1) -(q_ip1 +q_im2))/12.0

    Diff_flux3(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
    a_ua) =Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
    ua,a_ua) +(sign(1, time_step) *sign(1., ua)*((a_q_ip1 -a_q_im2) &
    -3.*(a_q_i -a_q_im1))/12.0)
    flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1, time_step) &
    *sign(1., ua)*((q_ip1 -q_im2) -3.*(q_i -q_im1))/12.0

    Diff_flux6(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
    a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =(37.*(a_q_i +a_q_im1) -8.*( &
    a_q_ip1 +a_q_im2) +(a_q_ip2 +a_q_im3))/60.0
    flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37.*(q_i +q_im1) -8.*(q_ip1 +q_im2) &
    +(q_ip2 +q_im3))/60.0

    Diff_flux5(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
    a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =Diff_flux6(q_im3,a_q_im3,q_im2, &
    a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,q_ip2,a_q_ip2,ua, &
    a_ua) -(sign(1, time_step) *sign(1., ua)*((a_q_ip2 -a_q_im3) -5.*( &
    a_q_ip1 -a_q_im2) +10.*(a_q_i -a_q_im1))/60.0)
    flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
    ua) -sign(1, time_step) *sign(1., ua)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) &
    +10.*(q_i -q_im1))/60.0

   LOGICAL :: specified

   REAL :: Keep_Lpb7_ub
   REAL :: Keep_Lpb11_vb
   REAL :: gwalls, kwalls, qwalls

   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007,a_Tmpv8,Tmpv008,a_Tmpv9, &
   Tmpv009,a_Tmpv10,Tmpv010,a_Tmpv11,Tmpv011

   REAL,DIMENSION(min0(jts,its):max0(MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv200
   REAL,DIMENSION(min0(jts,its):max0(MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv201
   REAL,DIMENSION(min0(jts,its):max0(MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv202

   REAL,DIMENSION(min0(its,kts+1):max0(MAX(ite,ide-1),MAX(kte,kde-1)),min0(MIN(jts,jds+ &
   1),jts,its):max0(MAX(jte,jde-1)+1,MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv300
   REAL,DIMENSION(min0(its,kts+1):max0(MAX(ite,ide-1),MAX(kte,kde-1)),min0(MIN(jts,jds+ &
   1),jts,its):max0(MAX(jte,jde-1)+1,MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv301
   REAL,DIMENSION(min0(its,kts+1):max0(MAX(ite,ide-1),MAX(kte,kde-1)),min0(MIN(jts,jds+ &
   1),jts,its):max0(MAX(jte,jde-1)+1,MAX(jte,jde-1),MAX(ite,ide-1))) :: Tmpv302

!LPB[0]

     specified = .false.
     if(config_flags%specified .or. config_flags%nested) specified = .true.
     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

!LPB[3]
  horizontal_order_test : IF( horz_order == 6 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-3)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

      j_start = jts
      j_end   = MIN(jte,jde-1)
      IF(degrade_ys) then
           j_start = MAX(jts,jds+1)
      ENDIF
      IF(degrade_ye) then
         j_end = MIN(jte,jde-2)
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

      jp1 = 2
      jp0 = 1

      j_loop_y_flux_6 : DO j = j_start, j_end+1
         WALLS_jp16(j)=jp1
         WALLS_jp06(j)=jp0
         jtmp = jp1
         jp1 = jp0
         jp0 = jtmp
      ENDDO j_loop_y_flux_6
   ELSE IF (horz_order == 5 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-3)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

      j_start = jts
      j_end   = MIN(jte,jde-1)
      IF(degrade_ys) then
         j_start = MAX(jts,jds+1)
      ENDIF
      IF(degrade_ye) then

      j_end = MIN(jte,jde-2)
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

      jp1 = 2
      jp0 = 1

      j_loop_y_flux_5 : DO j = j_start, j_end+1
         WALLS_jp15(j)=jp1
         WALLS_jp05(j)=jp0
         jtmp = jp1
         jp1 = jp0
         jp0 = jtmp
      ENDDO j_loop_y_flux_5
   ELSE IF ( horz_order == 4 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF(degrade_ys) then
         j_start = jds+1
      ENDIF
      IF(degrade_ye) then
         j_end = jde-2
      ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

      jp1 = 2
      jp0 = 1

      DO j = j_start, j_end+1
         WALLS_jp14(j)=jp1
         WALLS_jp04(j)=jp0
         jtmp = jp1
         jp1 = jp0
         jp0 = jtmp
      ENDDO
   ELSE IF ( horz_order == 3 ) THEN
      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

         j_start = jts
         j_end   = MIN(jte,jde-1)

      IF(degrade_ys) then
           j_start = jds+1
      ENDIF
      IF(degrade_ye) then
           j_end = jde-2
      ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

         jp1 = 2
         jp0 = 1

         DO j = j_start, j_end+1
           WALLS_jp13(j)=jp1
           WALLS_jp03(j)=jp0
           jtmp = jp1
           jp1 = jp0
           jp0 = jtmp
       ENDDO
   ELSE IF (horz_order == 2 ) THEN
   ELSE IF (horz_order == 0 ) THEN
   ELSE
   ENDIF horizontal_order_test 


!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0
   a_uw =0.0
   a_vw =0.0

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_vflux(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite+1
   a_fqx(K0_ADJ,K1_ADJ) =0.0
   End Do
   End Do

   Do K2_ADJ =1, 2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its, ite
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_q_im3 =0.0
   a_q_im2 =0.0
   a_q_im1 =0.0
   a_q_i =0.0
   a_q_ip1 =0.0
   a_q_ip2 =0.0
   a_ua =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

!LPB[15]

   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)

   IF(vert_order == 6) THEN

   DO j =j_end, j_start, -1
   k = ktf+1

   DO i =i_end, i_start, -1
   a_Tmpv1 =a_tendency(i,k,j)
   a_vflux(i,k) =a_vflux(i,k) +2.*rdzu(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzu(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k=ktf+1

   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1

   k = ktf
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux4(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1

   k = kts+2
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux4(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1

   k=kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO
   DO k =ktf-1, kts+3, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux6(w(i,k-3,j),w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),w(i,k+2,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+2,j) =a_w(i,k+2,j) +Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),1.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),1.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,1.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux6(w(i,k-3,j),0.0,w(i,k-2,j),1.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-3,j) =a_w(i,k-3,j) +Diff_flux6(w(i,k-3,j),1.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_vel
   a_Tmpv1 =0.5*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 5) THEN

   DO j =j_end, j_start, -1
   k = ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv1 =a_tendency(i,k,j)
   a_vflux(i,k) =a_vflux(i,k) +2.*rdzu(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzu(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k=ktf+1

   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1

   k = ktf
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux3(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +0.5*a_vel

   k = kts+2
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux3(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +0.5*a_vel

   k=kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO
   DO k =ktf-1, kts+3, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux5(w(i,k-3,j),w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),w(i,k+2,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+2,j) =a_w(i,k+2,j) +Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),1.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),1.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,1.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux5(w(i,k-3,j),0.0,w(i,k-2,j),1.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-3,j) =a_w(i,k-3,j) +Diff_flux5(w(i,k-3,j),1.0,w(i,k-2,j),0.0,w(i,k-1,j)  &
   ,0.0,w(i,k,j),0.0,w(i,k+1,j),0.0,w(i,k+2,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 4) THEN

   DO j =j_end, j_start, -1
   k = ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv1 =a_tendency(i,k,j)
   a_vflux(i,k) =a_vflux(i,k) +2.*rdzu(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =rdzu(k)*a_Tmpv2
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   k=ktf+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   k=kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO
   DO k =ktf, kts+2, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux4(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux4(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux4(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 3) THEN

   DO j =j_end, j_start, -1
   a_vflux(i_start:i_end,ktf+1) =a_vflux(i_start:i_end,ktf+1) &
   +2.*rdzu(ktf)*a_tendency(i_start:i_end,ktf+1,j)

   DO k =ktf, kts+1, -1
   gwalls =rdzu(k)
   DO i =i_end, i_start, -1
   a_Tmpv1 =-gwalls*a_tendency(i,k,j)
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   k=ktf+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1

   k=kts+1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO

   DO k =ktf, kts+2, -1
   DO i =i_end, i_start, -1
   vel =0.5*(rom(i,k,j) +rom(i,k-1,j))

   a_Tmpv2 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_vel =flux3(w(i,k-2,j),w(i,k-1,j),w(i,k,j),w(i,k+1,j),-vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j),0.0,w(i,k+1,j)  &
   ,0.0,-vel,1.0)*a_Tmpv1
   a_w(i,k+1,j) =a_w(i,k+1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,1.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-1,j) =a_w(i,k-1,j) +Diff_flux3(w(i,k-2,j),0.0,w(i,k-1,j),1.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_w(i,k-2,j) =a_w(i,k-2,j) +Diff_flux3(w(i,k-2,j),1.0,w(i,k-1,j),0.0,w(i,k,j)  &
   ,0.0,w(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +0.5*a_vel
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +0.5*a_vel
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN

   DO j =j_end, j_start, -1
   k =ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv1 =a_tendency(i,k,j)
   a_vflux(i,k) =a_vflux(i,k) +2.*rdzu(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-rdzu(k)*a_tendency(i,k,j)
   a_vflux(i,k+1) =a_vflux(i,k+1) +a_Tmpv1
   a_vflux(i,k) =a_vflux(i,k) -a_Tmpv1
   ENDDO
   ENDDO
   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_vflux(i,k)
   a_vflux(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k-1,j))*a_Tmpv4
   a_Tmpv3 =0.25*(rom(i,k,j) +rom(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k-1,j) =a_w(i,k-1,j) +a_Tmpv3
   a_Tmpv1 =0.25*a_Tmpv2
   a_rom(i,k,j) =a_rom(i,k,j) +a_Tmpv1
   a_rom(i,k-1,j) =a_rom(i,k-1,j) +a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE
   ENDIF

!LPB[13]
   DO i =i_end, i_start, -1

   a_vflux(i,kte) =0.0
   a_vflux(i,kts) =0.0

   ENDDO

!LPB[11]
   vb =Keep_Lpb11_vb

   IF( (config_flags%open_ye) .and. (jte == jde) ) THEN
   DO i =i_start, i_end
   DO k =kts+1, ktf
   Tmpv001 =rv(i,k,jte-1) +rv(i,k,jte)
   Tmpv002 =fzm(k)*Tmpv001
   Tmpv003 =rv(i,k-1,jte-1) +rv(i,k-1,jte)
   Tmpv004 =fzp(k)*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =0.5*Tmpv005
   vw =Tmpv006
   Tmpv300(k,i) =vw

   vb =max(vw, 0.)

   Tmpv001 =w_old(i,k,j_end) -w_old(i,k,j_end-1)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =rv(i,k,jte) -rv(i,k,jte-1)
   Tmpv004 =fzm(k)*Tmpv003
   Tmpv005 =rv(i,k-1,jte) -rv(i,k-1,jte-1)
   Tmpv006 =fzp(k)*Tmpv005
   Tmpv007 =Tmpv004 +Tmpv006
   Tmpv302(k,i) =Tmpv007
   Tmpv008 =w(i,k,j_end)*Tmpv302(k,i)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdy*Tmpv009
   Tmpv011 =tendency(i,k,j_end) -Tmpv010
   tendency(i,k,j_end) =Tmpv011

   ENDDO
   ENDDO
   k =ktf+1
   DO i =i_start, i_end
   Tmpv001 =rv(i,k-1,jte-1) +rv(i,k-1,jte)
   Tmpv002 =(2.-fzm(k-1))*Tmpv001
   Tmpv003 =rv(i,k-2,jte-1) +rv(i,k-2,jte)
   Tmpv004 =fzp(k-1)*Tmpv003
   Tmpv005 =Tmpv002 -Tmpv004
   Tmpv006 =0.5*Tmpv005
   vw =Tmpv006

   Tmpv200(i) =vw
   vb =max(vw, 0.)

   Tmpv001 =w_old(i,k,j_end) -w_old(i,k,j_end-1)
   Tmpv201(i) =Tmpv001
   Tmpv002 =vb*Tmpv201(i)
   Tmpv003 =rv(i,k-1,jte) -rv(i,k-1,jte-1)
   Tmpv004 =(2.-fzm(k-1))*Tmpv003
   Tmpv005 =rv(i,k-2,jte) -rv(i,k-2,jte-1)
   Tmpv006 =fzp(k-1)*Tmpv005
   Tmpv007 =Tmpv004 -Tmpv006
   Tmpv202(i) =Tmpv007
   Tmpv008 =w(i,k,j_end)*Tmpv202(i)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdy*Tmpv009
   Tmpv011 =tendency(i,k,j_end) -Tmpv010
   tendency(i,k,j_end) =Tmpv011

   ENDDO

   ENDIF

   IF( (config_flags%open_ye) .and. (jte == jde) ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   vw =Tmpv200(i)
   vb =max(vw, 0.)

   a_Tmpv11 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdy*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i,k,j_end) =a_w(i,k,j_end) +Tmpv202(i)*a_Tmpv8
   a_Tmpv7 =w(i,k,j_end)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =fzp(k-1)*a_Tmpv6
   a_rv(i,k-2,jte) =a_rv(i,k-2,jte) +a_Tmpv5
   a_rv(i,k-2,jte-1) =a_rv(i,k-2,jte-1) -a_Tmpv5
   a_Tmpv3 =(2.-fzm(k-1))*a_Tmpv4
   a_rv(i,k-1,jte) =a_rv(i,k-1,jte) +a_Tmpv3
   a_rv(i,k-1,jte-1) =a_rv(i,k-1,jte-1) -a_Tmpv3
   a_vb =a_vb +Tmpv201(i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_w_old(i,k,j_end) =a_w_old(i,k,j_end) +a_Tmpv1
   a_w_old(i,k,j_end-1) =a_w_old(i,k,j_end-1) -a_Tmpv1

   a_vw =a_vw +(1.0 +(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv6 =a_vw
   a_vw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =fzp(k-1)*a_Tmpv4
   a_rv(i,k-2,jte-1) =a_rv(i,k-2,jte-1) +a_Tmpv3
   a_rv(i,k-2,jte) =a_rv(i,k-2,jte) +a_Tmpv3
   a_Tmpv1 =(2.-fzm(k-1))*a_Tmpv2
   a_rv(i,k-1,jte-1) =a_rv(i,k-1,jte-1) +a_Tmpv1
   a_rv(i,k-1,jte) =a_rv(i,k-1,jte) +a_Tmpv1
   ENDDO
   DO i =i_end, i_start, -1
   DO k =ktf, kts+1, -1
   vw =Tmpv300(k,i)
   vb =max(vw, 0.)

   a_Tmpv11 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdy*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i,k,j_end) =a_w(i,k,j_end) +Tmpv302(k,i)*a_Tmpv8
   a_Tmpv7 =w(i,k,j_end)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =a_Tmpv7
   a_Tmpv5 =fzp(k)*a_Tmpv6
   a_rv(i,k-1,jte) =a_rv(i,k-1,jte) +a_Tmpv5
   a_rv(i,k-1,jte-1) =a_rv(i,k-1,jte-1) -a_Tmpv5
   a_Tmpv3 =fzm(k)*a_Tmpv4
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv3
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) -a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_w_old(i,k,j_end) =a_w_old(i,k,j_end) +a_Tmpv1
   a_w_old(i,k,j_end-1) =a_w_old(i,k,j_end-1) -a_Tmpv1

   a_vw =a_vw +(1.0 +(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv6 =a_vw
   a_vw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =fzp(k)*a_Tmpv4
   a_rv(i,k-1,jte-1) =a_rv(i,k-1,jte-1) +a_Tmpv3
   a_rv(i,k-1,jte) =a_rv(i,k-1,jte) +a_Tmpv3
   a_Tmpv1 =fzm(k)*a_Tmpv2
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) +a_Tmpv1
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[10]

!LPB[9]

   IF( (config_flags%open_ys) .and. (jts == jds)) THEN
   DO i =i_start, i_end
   DO k =kts+1, ktf
   Tmpv001 =rv(i,k,jts) +rv(i,k,jts+1)
   Tmpv002 =fzm(k)*Tmpv001
   Tmpv003 =rv(i,k-1,jts) +rv(i,k-1,jts+1)
   Tmpv004 =fzp(k)*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =0.5*Tmpv005
   vw =Tmpv006

   Tmpv300(k,i) =vw
   vb =min(vw, 0.)

   Tmpv001 =w_old(i,k,jts+1) -w_old(i,k,jts)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =rv(i,k,jts+1) -rv(i,k,jts)
   Tmpv004 =fzm(k)*Tmpv003
   Tmpv005 =rv(i,k-1,jts+1) -rv(i,k-1,jts)
   Tmpv006 =fzp(k)*Tmpv005
   Tmpv007 =Tmpv004 +Tmpv006
   Tmpv302(k,i) =Tmpv007
   Tmpv008 =w(i,k,jts)*Tmpv302(k,i)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdy*Tmpv009
   Tmpv011 =tendency(i,k,jts) -Tmpv010
   tendency(i,k,jts) =Tmpv011

   ENDDO
   ENDDO
   k =ktf+1
   DO i =i_start, i_end
   Tmpv001 =rv(i,k-1,jts) +rv(i,k-1,jts+1)
   Tmpv002 =(2.-fzm(k-1))*Tmpv001
   Tmpv003 =rv(i,k-2,jts) +rv(i,k-2,jts+1)
   Tmpv004 =fzp(k-1)*Tmpv003
   Tmpv005 =Tmpv002 -Tmpv004
   Tmpv006 =0.5*Tmpv005
   vw =Tmpv006

   Tmpv200(i) =vw
   vb =min(vw, 0.)

   Tmpv001 =w_old(i,k,jts+1) -w_old(i,k,jts)
   Tmpv201(i) =Tmpv001
   Tmpv002 =vb*Tmpv201(i)
   Tmpv003 =rv(i,k-1,jts+1) -rv(i,k-1,jts)
   Tmpv004 =(2.-fzm(k-1))*Tmpv003
   Tmpv005 =rv(i,k-2,jts+1) -rv(i,k-2,jts)
   Tmpv006 =fzp(k-1)*Tmpv005
   Tmpv007 =Tmpv004 -Tmpv006
   Tmpv202(i) =Tmpv007
   Tmpv008 =w(i,k,jts)*Tmpv202(i)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdy*Tmpv009
   Tmpv011 =tendency(i,k,jts) -Tmpv010
   tendency(i,k,jts) =Tmpv011

   ENDDO

   ENDIF

   IF( (config_flags%open_ys) .and. (jts == jds)) THEN

   k = ktf+1 

   DO i =i_end, i_start, -1
   vw =Tmpv200(i)
   vb =min(vw, 0.)

   a_Tmpv11 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdy*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i,k,jts) =a_w(i,k,jts) +Tmpv202(i)*a_Tmpv8
   a_Tmpv7 =w(i,k,jts)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =fzp(k-1)*a_Tmpv6
   a_rv(i,k-2,jts+1) =a_rv(i,k-2,jts+1) +a_Tmpv5
   a_rv(i,k-2,jts) =a_rv(i,k-2,jts) -a_Tmpv5
   a_Tmpv3 =(2.-fzm(k-1))*a_Tmpv4
   a_rv(i,k-1,jts+1) =a_rv(i,k-1,jts+1) +a_Tmpv3
   a_rv(i,k-1,jts) =a_rv(i,k-1,jts) -a_Tmpv3
   a_vb =a_vb +Tmpv201(i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_w_old(i,k,jts+1) =a_w_old(i,k,jts+1) +a_Tmpv1
   a_w_old(i,k,jts) =a_w_old(i,k,jts) -a_Tmpv1

   a_vw =a_vw +(1.0 -(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv6 =a_vw
   a_vw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =fzp(k-1)*a_Tmpv4
   a_rv(i,k-2,jts) =a_rv(i,k-2,jts) +a_Tmpv3
   a_rv(i,k-2,jts+1) =a_rv(i,k-2,jts+1) +a_Tmpv3
   a_Tmpv1 =(2.-fzm(k-1))*a_Tmpv2
   a_rv(i,k-1,jts) =a_rv(i,k-1,jts) +a_Tmpv1
   a_rv(i,k-1,jts+1) =a_rv(i,k-1,jts+1) +a_Tmpv1
   ENDDO
   DO i =i_end, i_start, -1
   DO k =ktf, kts+1, -1
   vw =Tmpv300(k,i)
   vb =min(vw, 0.)

   a_Tmpv11 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdy*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i,k,jts) =a_w(i,k,jts) +Tmpv302(k,i)*a_Tmpv8
   a_Tmpv7 =w(i,k,jts)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =a_Tmpv7
   a_Tmpv5 =fzp(k)*a_Tmpv6
   a_rv(i,k-1,jts+1) =a_rv(i,k-1,jts+1) +a_Tmpv5
   a_rv(i,k-1,jts) =a_rv(i,k-1,jts) -a_Tmpv5
   a_Tmpv3 =fzm(k)*a_Tmpv4
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv3
   a_rv(i,k,jts) =a_rv(i,k,jts) -a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_w_old(i,k,jts+1) =a_w_old(i,k,jts+1) +a_Tmpv1
   a_w_old(i,k,jts) =a_w_old(i,k,jts) -a_Tmpv1

   a_vw =a_vw +(1.0 -(1.0)*sign(1.0, vw -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv6 =a_vw
   a_vw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =fzp(k)*a_Tmpv4
   a_rv(i,k-1,jts) =a_rv(i,k-1,jts) +a_Tmpv3
   a_rv(i,k-1,jts+1) =a_rv(i,k-1,jts+1) +a_Tmpv3
   a_Tmpv1 =fzm(k)*a_Tmpv2
   a_rv(i,k,jts) =a_rv(i,k,jts) +a_Tmpv1
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[8]

!LPB[7]
   ub =Keep_Lpb7_ub

   IF( (config_flags%open_xe) .and. (ite == ide)) THEN
   DO j =j_start, j_end
   DO k =kts+1, ktf
   Tmpv001 =ru(ite-1,k,j) +ru(ite,k,j)
   Tmpv002 =fzm(k)*Tmpv001
   Tmpv003 =ru(ite-1,k-1,j) +ru(ite,k-1,j)
   Tmpv004 =fzp(k)*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =0.5*Tmpv005
   uw =Tmpv006

   Tmpv300(k,j) =uw
   ub =max(uw, 0.)

   Tmpv001 =w_old(i_end,k,j) -w_old(i_end-1,k,j)
   Tmpv301(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv301(k,j)
   Tmpv003 =ru(ite,k,j) -ru(ite-1,k,j)
   Tmpv004 =fzm(k)*Tmpv003
   Tmpv005 =ru(ite,k-1,j) -ru(ite-1,k-1,j)
   Tmpv006 =fzp(k)*Tmpv005
   Tmpv007 =Tmpv004 +Tmpv006
   Tmpv302(k,j) =Tmpv007
   Tmpv008 =w(i_end,k,j)*Tmpv302(k,j)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdx*Tmpv009
   Tmpv011 =tendency(i_end,k,j) -Tmpv010
   tendency(i_end,k,j) =Tmpv011

   ENDDO
   ENDDO
   k =ktf+1
   DO j =j_start, j_end
   Tmpv001 =ru(ite-1,k-1,j) +ru(ite,k-1,j)
   Tmpv002 =(2.-fzm(k-1))*Tmpv001
   Tmpv003 =ru(ite-1,k-2,j) +ru(ite,k-2,j)
   Tmpv004 =fzp(k-1)*Tmpv003
   Tmpv005 =Tmpv002 -Tmpv004
   Tmpv006 =0.5*Tmpv005
   uw =Tmpv006

   Tmpv200(j) =uw
   ub =max(uw, 0.)

   Tmpv001 =w_old(i_end,k,j) -w_old(i_end-1,k,j)
   Tmpv201(j) =Tmpv001
   Tmpv002 =ub*Tmpv201(j)
   Tmpv003 =ru(ite,k-1,j) -ru(ite-1,k-1,j)
   Tmpv004 =(2.-fzm(k-1))*Tmpv003
   Tmpv005 =ru(ite,k-2,j) -ru(ite-1,k-2,j)
   Tmpv006 =fzp(k-1)*Tmpv005
   Tmpv007 =Tmpv004 -Tmpv006
   Tmpv202(j) =Tmpv007
   Tmpv008 =w(i_end,k,j)*Tmpv202(j)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdx*Tmpv009
   Tmpv011 =tendency(i_end,k,j) -Tmpv010
   tendency(i_end,k,j) =Tmpv011

   ENDDO

   ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide)) THEN

   k = ktf+1
   DO j =j_end, j_start, -1
   uw =Tmpv200(j)
   ub =max(uw, 0.)

   a_Tmpv11 =a_tendency(i_end,k,j)
   a_tendency(i_end,k,j) =0.0
   a_tendency(i_end,k,j) =a_tendency(i_end,k,j) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdx*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i_end,k,j) =a_w(i_end,k,j) +Tmpv202(j)*a_Tmpv8
   a_Tmpv7 =w(i_end,k,j)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =fzp(k-1)*a_Tmpv6
   a_ru(ite,k-2,j) =a_ru(ite,k-2,j) +a_Tmpv5
   a_ru(ite-1,k-2,j) =a_ru(ite-1,k-2,j) -a_Tmpv5
   a_Tmpv3 =(2.-fzm(k-1))*a_Tmpv4
   a_ru(ite,k-1,j) =a_ru(ite,k-1,j) +a_Tmpv3
   a_ru(ite-1,k-1,j) =a_ru(ite-1,k-1,j) -a_Tmpv3
   a_ub =a_ub +Tmpv201(j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_w_old(i_end,k,j) =a_w_old(i_end,k,j) +a_Tmpv1
   a_w_old(i_end-1,k,j) =a_w_old(i_end-1,k,j) -a_Tmpv1

   a_uw =a_uw +(1.0 +(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv6 =a_uw
   a_uw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =fzp(k-1)*a_Tmpv4
   a_ru(ite-1,k-2,j) =a_ru(ite-1,k-2,j) +a_Tmpv3
   a_ru(ite,k-2,j) =a_ru(ite,k-2,j) +a_Tmpv3
   a_Tmpv1 =(2.-fzm(k-1))*a_Tmpv2
   a_ru(ite-1,k-1,j) =a_ru(ite-1,k-1,j) +a_Tmpv1
   a_ru(ite,k-1,j) =a_ru(ite,k-1,j) +a_Tmpv1
   ENDDO
   DO j =j_end, j_start, -1
   DO k =ktf, kts+1, -1
   uw =Tmpv300(k,j)
   ub =max(uw, 0.)

   a_Tmpv11 =a_tendency(i_end,k,j)
   a_tendency(i_end,k,j) =0.0
   a_tendency(i_end,k,j) =a_tendency(i_end,k,j) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdx*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(i_end,k,j) =a_w(i_end,k,j) +Tmpv302(k,j)*a_Tmpv8
   a_Tmpv7 =w(i_end,k,j)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =a_Tmpv7
   a_Tmpv5 =fzp(k)*a_Tmpv6
   a_ru(ite,k-1,j) =a_ru(ite,k-1,j) +a_Tmpv5
   a_ru(ite-1,k-1,j) =a_ru(ite-1,k-1,j) -a_Tmpv5
   a_Tmpv3 =fzm(k)*a_Tmpv4
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv3
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv301(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_w_old(i_end,k,j) =a_w_old(i_end,k,j) +a_Tmpv1
   a_w_old(i_end-1,k,j) =a_w_old(i_end-1,k,j) -a_Tmpv1

   a_uw =a_uw +(1.0 +(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv6 =a_uw
   a_uw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =fzp(k)*a_Tmpv4
   a_ru(ite-1,k-1,j) =a_ru(ite-1,k-1,j) +a_Tmpv3
   a_ru(ite,k-1,j) =a_ru(ite,k-1,j) +a_Tmpv3
   a_Tmpv1 =fzm(k)*a_Tmpv2
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) +a_Tmpv1
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[6]

!LPB[5]

   IF( (config_flags%open_xs) .and. (its == ids)) THEN
   DO j =j_start, j_end
   DO k =kts+1, ktf
   Tmpv001 =ru(its,k,j) +ru(its+1,k,j)
   Tmpv002 =fzm(k)*Tmpv001
   Tmpv003 =ru(its,k-1,j) +ru(its+1,k-1,j)
   Tmpv004 =fzp(k)*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =0.5*Tmpv005
   uw =Tmpv006

   Tmpv300(k,j) =uw
   ub =min(uw, 0.)

   Tmpv001 =w_old(its+1,k,j) -w_old(its,k,j)
   Tmpv301(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv301(k,j)
   Tmpv003 =ru(its+1,k,j) -ru(its,k,j)
   Tmpv004 =fzm(k)*Tmpv003
   Tmpv005 =ru(its+1,k-1,j) -ru(its,k-1,j)
   Tmpv006 =fzp(k)*Tmpv005
   Tmpv007 =Tmpv004 +Tmpv006
   Tmpv302(k,j) =Tmpv007
   Tmpv008 =w(its,k,j)*Tmpv302(k,j)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdx*Tmpv009
   Tmpv011 =tendency(its,k,j) -Tmpv010
   tendency(its,k,j) =Tmpv011

   ENDDO
   ENDDO
   k =ktf+1
   DO j =j_start, j_end
   Tmpv001 =ru(its,k-1,j) +ru(its+1,k-1,j)
   Tmpv002 =(2.-fzm(k-1))*Tmpv001
   Tmpv003 =ru(its,k-2,j) +ru(its+1,k-2,j)
   Tmpv004 =fzp(k-1)*Tmpv003
   Tmpv005 =Tmpv002 -Tmpv004
   Tmpv006 =0.5*Tmpv005
   uw =Tmpv006

   Tmpv200(j) =uw
   ub =min(uw, 0.)

   Tmpv001 =w_old(its+1,k,j) -w_old(its,k,j)
   Tmpv201(j) =Tmpv001
   Tmpv002 =ub*Tmpv201(j)
   Tmpv003 =ru(its+1,k-1,j) -ru(its,k-1,j)
   Tmpv004 =(2.-fzm(k-1))*Tmpv003
   Tmpv005 =ru(its+1,k-2,j) -ru(its,k-2,j)
   Tmpv006 =fzp(k-1)*Tmpv005
   Tmpv007 =Tmpv004 -Tmpv006
   Tmpv202(j) =Tmpv007
   Tmpv008 =w(its,k,j)*Tmpv202(j)
   Tmpv009 =Tmpv002 +Tmpv008
   Tmpv010 =rdx*Tmpv009
   Tmpv011 =tendency(its,k,j) -Tmpv010
   tendency(its,k,j) =Tmpv011

   ENDDO

   ENDIF

   IF( (config_flags%open_xs) .and. (its == ids)) THEN

   k =ktf+1

   DO j =j_end, j_start, -1
   uw =Tmpv200(j)
   ub =min(uw, 0.)

   a_Tmpv11 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdx*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(its,k,j) =a_w(its,k,j) +Tmpv202(j)*a_Tmpv8
   a_Tmpv7 =w(its,k,j)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =fzp(k-1)*a_Tmpv6
   a_ru(its+1,k-2,j) =a_ru(its+1,k-2,j) +a_Tmpv5
   a_ru(its,k-2,j) =a_ru(its,k-2,j) -a_Tmpv5
   a_Tmpv3 =(2.-fzm(k-1))*a_Tmpv4
   a_ru(its+1,k-1,j) =a_ru(its+1,k-1,j) +a_Tmpv3
   a_ru(its,k-1,j) =a_ru(its,k-1,j) -a_Tmpv3
   a_ub =a_ub +Tmpv201(j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_w_old(its+1,k,j) =a_w_old(its+1,k,j) +a_Tmpv1
   a_w_old(its,k,j) =a_w_old(its,k,j) -a_Tmpv1

   a_uw =a_uw +(1.0 -(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv6 =a_uw
   a_uw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =fzp(k-1)*a_Tmpv4
   a_ru(its,k-2,j) =a_ru(its,k-2,j) +a_Tmpv3
   a_ru(its+1,k-2,j) =a_ru(its+1,k-2,j) +a_Tmpv3
   a_Tmpv1 =(2.-fzm(k-1))*a_Tmpv2
   a_ru(its,k-1,j) =a_ru(its,k-1,j) +a_Tmpv1
   a_ru(its+1,k-1,j) =a_ru(its+1,k-1,j) +a_Tmpv1
   ENDDO
   DO j =j_end, j_start, -1
   DO k =ktf, kts+1, -1
   uw =Tmpv300(k,j)
   ub =min(uw, 0.)

   a_Tmpv11 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv11
   a_Tmpv10 =-a_Tmpv11
   a_Tmpv9 =rdx*a_Tmpv10
   a_Tmpv2 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_w(its,k,j) =a_w(its,k,j) +Tmpv302(k,j)*a_Tmpv8
   a_Tmpv7 =w(its,k,j)*a_Tmpv8
   a_Tmpv4 =a_Tmpv7
   a_Tmpv6 =a_Tmpv7
   a_Tmpv5 =fzp(k)*a_Tmpv6
   a_ru(its+1,k-1,j) =a_ru(its+1,k-1,j) +a_Tmpv5
   a_ru(its,k-1,j) =a_ru(its,k-1,j) -a_Tmpv5
   a_Tmpv3 =fzm(k)*a_Tmpv4
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv3
   a_ru(its,k,j) =a_ru(its,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv301(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_w_old(its+1,k,j) =a_w_old(its+1,k,j) +a_Tmpv1
   a_w_old(its,k,j) =a_w_old(its,k,j) -a_Tmpv1

   a_uw =a_uw +(1.0 -(1.0)*sign(1.0, uw -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv6 =a_uw
   a_uw =0.0
   a_Tmpv5 =0.5*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =fzp(k)*a_Tmpv4
   a_ru(its,k-1,j) =a_ru(its,k-1,j) +a_Tmpv3
   a_ru(its+1,k-1,j) =a_ru(its+1,k-1,j) +a_Tmpv3
   a_Tmpv1 =fzm(k)*a_Tmpv2
   a_ru(its,k,j) =a_ru(its,k,j) +a_Tmpv1
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[3]

   specified = .false.
   if(config_flags%specified .or. config_flags%nested) specified = .true.
   ktf=MIN(kte,kde-1)
   horz_order = config_flags%h_sca_adv_order
   vert_order = config_flags%v_sca_adv_order

   IF( horz_order == 6 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-3)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1

      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1

      IF(degrade_xs) then

           i_start = MAX(ids+1,its)
           i_start_f = MIN(i_start+2,ids+3)
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite)
           i_end_f = ide-3
         ENDIF

   DO j =j_end, j_start, -1

   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   mrdx =msftx(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN
   k = ktf+1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1
   DO k =ktf, kts+1, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   k = ktf+1

   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN
   k = ktf+1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   END IF

   IF(i == ids+1) THEN

   k = ktf+1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   k =ktf+1

   DO i =i_end_f, i_start_f, -1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux6(w(i-3,k,j),w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),w(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_w(i+2,k,j) =a_w(i+2,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),1.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),1.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,1.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),1.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-3,k,j) =a_w(i-3,k,j) +Diff_flux6(w(i-3,k,j),1.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end_f, i_start_f, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux6(w(i-3,k,j),w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),w(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_w(i+2,k,j) =a_w(i+2,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),1.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),1.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,1.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux6(w(i-3,k,j),0.0,w(i-2,k,j),1.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-3,k,j) =a_w(i-3,k,j) +Diff_flux6(w(i-3,k,j),1.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-3
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

        jp1 = 2
        jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp16(j)
   jp0=WALLS_jp06(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE
   IF(j > j_start) THEN

   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   vel =fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux6(w(i,k,j-3),w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),w(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+2) =a_w(i,k,j+2) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),1.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),1.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,1.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),1.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-3) =a_w(i,k,j-3) +Diff_flux6(w(i,k,j-3),1.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   k =ktf+1

   DO i =i_end, i_start, -1
   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux6(w(i,k,j-3),w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),w(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+2) =a_w(i,k,j+2) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),1.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),1.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,1.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux6(w(i,k,j-3),0.0,w(i,k,j-2),1.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-3) =a_w(i,k,j-3) +Diff_flux6(w(i,k,j-3),1.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1

   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   vel =fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1

   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1

   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1

   vel =fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   ELSE IF(horz_order == 5 ) THEN

   degrade_xs = .true.
   degrade_xe = .true.
   degrade_ys = .true.
   degrade_ye = .true.

   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+3)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-3)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+3)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-4)                ) degrade_ye = .false.

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

      jp1 = 2
      jp0 = 1

      i_start = its
      i_end   = MIN(ite,ide-1)

      j_start = jts
      j_end   = MIN(jte,jde-1)

      i_start_f = i_start
      i_end_f   = i_end+1

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = MIN(i_start+2,ids+3)
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-3
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN
   k =ktf+1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   k =ktf+1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN
   k =ktf+1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   END IF

   IF(i == ids+1) THEN
   k =ktf+1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   k =ktf+1
   DO i =i_end_f, i_start_f, -1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux5(w(i-3,k,j),w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),w(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_w(i+2,k,j) =a_w(i+2,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),1.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),1.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,1.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),1.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-3,k,j) =a_w(i-3,k,j) +Diff_flux5(w(i-3,k,j),1.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_vel
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_vel
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls =fzm(k)
   qwalls =fzp(k)
   DO i =i_end_f, i_start_f, -1
   vel =gwalls*ru(i,k,j) +qwalls*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux5(w(i-3,k,j),w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),w(i+2,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_w(i+2,k,j) =a_w(i+2,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),1.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),1.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,1.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux5(w(i-3,k,j),0.0,w(i-2,k,j),1.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-3,k,j) =a_w(i-3,k,j) +Diff_flux5(w(i-3,k,j),1.0,w(i-2,k,j),0.0,w(i-1,k,j)  &
   ,0.0,w(i,k,j),0.0,w(i+1,k,j),0.0,w(i+2,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +gwalls*a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +qwalls*a_vel
   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+3
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-3
      ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

     jp1 = 2
     jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp15(j)
   jp0=WALLS_jp05(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO i =i_start,i_end
   gwalls =msftx(i,j-1)*rdy
   DO k =kts,ktf 
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -gwalls*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO i = i_start,i_end
   gwalls =msftx(i,j-1)*rdy
   DO k = kts,ktf
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +gwalls*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF(j > j_start) THEN

   DO i = i_start,i_end
   gwalls =-msftx(i,j-1)*rdy
   DO k = kts+1,ktf+1
   a_Tmpv1 =gwalls*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   ENDIF
   END IF

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux5(w(i,k,j-3),w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),w(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+2) =a_w(i,k,j+2) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),1.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),1.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,1.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),1.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-3) =a_w(i,k,j-3) +Diff_flux5(w(i,k,j-3),1.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_vel
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_vel
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls=fzm(k)
   qwalls=fzp(k)
   DO i =i_end, i_start, -1
   vel =gwalls*rv(i,k,j) +qwalls*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux5(w(i,k,j-3),w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),w(i,k,j+2),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+2) =a_w(i,k,j+2) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),1.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),1.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,1.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux5(w(i,k,j-3),0.0,w(i,k,j-2),1.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-3) =a_w(i,k,j-3) +Diff_flux5(w(i,k,j-3),1.0,w(i,k,j-2),0.0,w(i,k,j-1)  &
   ,0.0,w(i,k,j),0.0,w(i,k,j+1),0.0,w(i,k,j+2),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +gwalls*a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +qwalls*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   k = ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls =fzm(k)
   qwalls =fzp(k)
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(gwalls*rv(i,k,j) +qwalls*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +gwalls*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +qwalls*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN
   k =ktf+1

   DO i =i_end, i_start, -1

   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls =fzm(k)
   qwalls =fzp(k)
   DO i =i_end, i_start, -1
   vel =gwalls*rv(i,k,j) +qwalls*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel+Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +gwalls*a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +qwalls*a_vel
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN
   k =ktf+1

   DO i =i_end, i_start, -1

   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls =fzm(k)
   qwalls =fzp(k)
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(gwalls*rv(i,k,j) +qwalls*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +gwalls*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +qwalls*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN
   k =ktf+1

   DO i =i_end, i_start, -1

   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   gwalls=fzm(k)
   qwalls=fzp(k)
   DO i =i_end, i_start, -1
   vel =gwalls*rv(i,k,j) +qwalls*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +gwalls*a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +qwalls*a_vel
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   ELSE IF( horz_order == 4 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_ys) then

           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then

           j_end = jde-2
           j_end_f = jde-2
         ENDIF
      IF(config_flags%polar) j_end = MIN(jte,jde-1)

           jp1 = 2
           jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp14(j)
   jp0=WALLS_jp04(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) -msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   ENDDO
   ENDDO

   ELSE

   IF( j > j_start ) THEN

   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j-1)*rdy*a_tendency(i,k,j-1)
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   IF((j < j_start_f) .and. degrade_ys) THEN

   k =ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j_start) +w(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j_start) -fzp(k-1)*rv(i,k-2,j_start))*a_Tmpv4
   a_w(i,k,j_start) =a_w(i,k,j_start) +a_Tmpv3
   a_w(i,k,j_start-1) =a_w(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j_start) =a_rv(i,k-1,j_start) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j_start) =a_rv(i,k-2,j_start) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j_start) +w(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j_start) +fzp(k)*rv(i,k-1,j_start))*a_Tmpv4
   a_w(i,k,j_start) =a_w(i,k,j_start) +a_Tmpv3
   a_w(i,k,j_start-1) =a_w(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j_start) =a_rv(i,k-1,j_start) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   k =ktf+1
   DO i =i_end, i_start, -1
   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   vel =fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux4(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux4(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux4(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   END IF
   ENDDO

      ktf=MIN(kte,kde-1)
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)
      i_start_f = i_start
      i_end_f   = i_end+1
      IF(degrade_xs) then
        i_start = ids+1
        i_start_f = i_start+1
      ENDIF
      IF(degrade_xe) then
        i_end = ide-2
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv1 =-msftx(i,j)*rdx*a_tendency(i,k,j)
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1
   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   k =ktf+1

   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_Tmpv2 =(w(i_end+1,k,j) +w(i_end,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i_end+1,k-1,j) -fzp(k-1)*ru(i_end+1,k-2,j))*a_Tmpv4
   a_w(i_end+1,k,j) =a_w(i_end+1,k,j) +a_Tmpv3
   a_w(i_end,k,j) =a_w(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_end+1,k-1,j) =a_ru(i_end+1,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i_end+1,k-2,j) =a_ru(i_end+1,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_Tmpv2 =(w(i_end+1,k,j) +w(i_end,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i_end+1,k,j) +fzp(k)*ru(i_end+1,k-1,j))*a_Tmpv4
   a_w(i_end+1,k,j) =a_w(i_end+1,k,j) +a_Tmpv3
   a_w(i_end,k,j) =a_w(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +fzm(k)*a_Tmpv1
   a_ru(i_end+1,k-1,j) =a_ru(i_end+1,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   k =ktf+1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_Tmpv2 =(w(i_start,k,j) +w(i_start-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i_start,k-1,j) -fzp(k-1)*ru(i_start,k-2,j))*a_Tmpv4
   a_w(i_start,k,j) =a_w(i_start,k,j) +a_Tmpv3
   a_w(i_start-1,k,j) =a_w(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_start,k-1,j) =a_ru(i_start,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i_start,k-2,j) =a_ru(i_start,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_Tmpv2 =(w(i_start,k,j) +w(i_start-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i_start,k,j) +fzp(k)*ru(i_start,k-1,j))*a_Tmpv4
   a_w(i_start,k,j) =a_w(i_start,k,j) +a_Tmpv3
   a_w(i_start-1,k,j) =a_w(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +fzm(k)*a_Tmpv1
   a_ru(i_start,k-1,j) =a_ru(i_start,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   k =ktf+1
   DO i =i_end_f, i_start_f, -1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end_f, i_start_f, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux4(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux4(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux4(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 3 ) THEN

      degrade_xs = .true.
      degrade_xe = .true.
      degrade_ys = .true.
      degrade_ye = .true.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-3)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         j_start_f = j_start
         j_end_f   = j_end+1

      IF(degrade_ys) then

           j_start = jds+1
           j_start_f = j_start+1
         ENDIF
      IF(degrade_ye) then

           j_end = jde-2
           j_end_f = jde-2
         ENDIF

      IF(config_flags%polar) j_end = MIN(jte,jde-1)

           jp1 = 2
           jp0 = 1

   DO j =j_end+1, j_start, -1

   jp1=WALLS_jp13(j)
   jp0=WALLS_jp03(j)

   IF( config_flags%polar .AND. (j == jds+1) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j-1)*rdy

   a_Tmpv2 =a_tendency(i,k,j-1)
   a_Tmpv1 =-a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +mrdy*a_Tmpv1

   ENDDO
   ENDDO

   ELSE IF( config_flags%polar .AND. (j == jde) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j-1)*rdy

   a_Tmpv2 =a_tendency(i,k,j-1)
   a_Tmpv1 =a_Tmpv2
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) +mrdy*a_Tmpv1

   ENDDO
   ENDDO

   ELSE

   IF( j > j_start ) THEN

   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j-1)*rdy

   a_Tmpv3 =a_tendency(i,k,j-1)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdy*a_Tmpv2
   a_fqy(i,k,jp1) =a_fqy(i,k,jp1) +a_Tmpv1
   a_fqy(i,k,jp0) =a_fqy(i,k,jp0) -a_Tmpv1

   ENDDO
   ENDDO

   END IF
   END IF

   IF((j < j_start_f) .and. degrade_ys) THEN

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j_start) +w(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j_start) +fzp(k)*rv(i,k-1,j_start))*a_Tmpv4
   a_w(i,k,j_start) =a_w(i,k,j_start) +a_Tmpv3
   a_w(i,k,j_start-1) =a_w(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j_start) =a_rv(i,k,j_start) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j_start) =a_rv(i,k-1,j_start) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   k =ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j_start) +w(i,k,j_start-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j_start) -fzp(k-1)*rv(i,k-2,j_start))*a_Tmpv4
   a_w(i,k,j_start) =a_w(i,k,j_start) +a_Tmpv3
   a_w(i,k,j_start-1) =a_w(i,k,j_start-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j_start) =a_rv(i,k-1,j_start) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j_start) =a_rv(i,k-2,j_start) -fzp(k-1)*a_Tmpv1
   ENDDO

   ELSE IF((j > j_end_f) .and. degrade_ye) THEN

   k =ktf+1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_Tmpv2 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j))*a_Tmpv4
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv3
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   ELSE

   k =ktf+1
   DO i =i_end, i_start, -1
   vel =(2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_Tmpv1 =0.0

   a_Tmpv1 =a_vel
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1

   vel =fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j)

   a_Tmpv2 =a_fqy(i,k,jp1)
   a_fqy(i,k,jp1) =0.0
   a_vel =flux3(w(i,k,j-2),w(i,k,j-1),w(i,k,j),w(i,k,j+1),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j),0.0,w(i,k,j+1)  &
   ,0.0,vel,1.0)*a_Tmpv1

   a_w(i,k,j+1) =a_w(i,k,j+1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,1.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-1) =a_w(i,k,j-1) +Diff_flux3(w(i,k,j-2),0.0,w(i,k,j-1),1.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j-2) =a_w(i,k,j-2) +Diff_flux3(w(i,k,j-2),1.0,w(i,k,j-1),0.0,w(i,k,j)  &
   ,0.0,w(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_Tmpv1 =0.0

   a_Tmpv1 =a_vel
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   END IF
   ENDDO

      ktf=MIN(kte,kde-1)
         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)
         i_start_f = i_start
         i_end_f   = i_end+1
      IF(degrade_xs) then

           i_start = ids+1
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = ide-2
           i_end_f = ide-2
         ENDIF

   DO j =j_end, j_start, -1
   DO k =ktf+1, kts+1, -1
   DO i =i_end, i_start, -1
   mrdx =msftx(i,j)*rdx

   a_Tmpv3 =a_tendency(i,k,j)
   a_Tmpv2 =-a_Tmpv3
   a_Tmpv1 =mrdx*a_Tmpv2
   a_fqx(i+1,k) =a_fqx(i+1,k) +a_Tmpv1
   a_fqx(i,k) =a_fqx(i,k) -a_Tmpv1

   ENDDO
   ENDDO

   IF( degrade_xe ) THEN

   k =ktf+1
   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_Tmpv2 =(w(i_end+1,k,j) +w(i_end,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i_end+1,k-1,j) -fzp(k-1)*ru(i_end+1,k-2,j))*a_Tmpv4
   a_w(i_end+1,k,j) =a_w(i_end+1,k,j) +a_Tmpv3
   a_w(i_end,k,j) =a_w(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_end+1,k-1,j) =a_ru(i_end+1,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i_end+1,k-2,j) =a_ru(i_end+1,k-2,j) -fzp(k-1)*a_Tmpv1
   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i_end+1,k)
   a_fqx(i_end+1,k) =0.0
   a_Tmpv2 =(w(i_end+1,k,j) +w(i_end,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i_end+1,k,j) +fzp(k)*ru(i_end+1,k-1,j))*a_Tmpv4
   a_w(i_end+1,k,j) =a_w(i_end+1,k,j) +a_Tmpv3
   a_w(i_end,k,j) =a_w(i_end,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_end+1,k,j) =a_ru(i_end+1,k,j) +fzm(k)*a_Tmpv1
   a_ru(i_end+1,k-1,j) =a_ru(i_end+1,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   k =ktf+1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_Tmpv2 =(w(i_start,k,j) +w(i_start-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*((2.-fzm(k-1))*ru(i_start,k-1,j) -fzp(k-1)*ru(i_start,k-2,j))*a_Tmpv4
   a_w(i_start,k,j) =a_w(i_start,k,j) +a_Tmpv3
   a_w(i_start-1,k,j) =a_w(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_start,k-1,j) =a_ru(i_start,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i_start,k-2,j) =a_ru(i_start,k-2,j) -fzp(k-1)*a_Tmpv1

   DO k =ktf, kts+1, -1
   a_Tmpv4 =a_fqx(i_start,k)
   a_fqx(i_start,k) =0.0
   a_Tmpv2 =(w(i_start,k,j) +w(i_start-1,k,j))*a_Tmpv4
   a_Tmpv3 =0.5*(fzm(k)*ru(i_start,k,j) +fzp(k)*ru(i_start,k-1,j))*a_Tmpv4
   a_w(i_start,k,j) =a_w(i_start,k,j) +a_Tmpv3
   a_w(i_start-1,k,j) =a_w(i_start-1,k,j) +a_Tmpv3
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(i_start,k,j) =a_ru(i_start,k,j) +fzm(k)*a_Tmpv1
   a_ru(i_start,k-1,j) =a_ru(i_start,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO

   ENDIF
   k =ktf+1
   DO i =i_end_f, i_start_f, -1
   vel =(2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_Tmpv1 =0.0

   a_Tmpv1 =a_vel
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO
   DO k =ktf, kts+1, -1
   DO i =i_end_f, i_start_f, -1
   vel =fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j)

   a_Tmpv2 =a_fqx(i,k)
   a_fqx(i,k) =0.0
   a_vel =flux3(w(i-2,k,j),w(i-1,k,j),w(i,k,j),w(i+1,k,j),vel)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j),0.0,w(i+1,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_w(i+1,k,j) =a_w(i+1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_w(i,k,j) =a_w(i,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,1.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-1,k,j) =a_w(i-1,k,j) +Diff_flux3(w(i-2,k,j),0.0,w(i-1,k,j),1.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_w(i-2,k,j) =a_w(i-2,k,j) +Diff_flux3(w(i-2,k,j),1.0,w(i-1,k,j),0.0,w(i,k,j)  &
   ,0.0,w(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_Tmpv1 =0.0

   a_Tmpv1 =a_vel
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv1
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF(horz_order == 2 ) THEN

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( .NOT. config_flags%periodic_x ) THEN
        IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
        IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-2,ite)
      ENDIF

      i_start = its
      i_end   = MIN(ite,ide-1)
      IF ( config_flags%open_ys .or. specified .or. config_flags%polar ) j_start = MAX(jds+1,jts)
      IF ( config_flags%open_ye .or. specified .or. config_flags%polar ) j_end   = MIN(jde-2,jte)

   IF(config_flags%polar) THEN

   IF(jts == jds) THEN

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   a_Tmpv4 =-a_tendency(i,k,jds)
   a_Tmpv3 =msftx(i,jds)*rdy*0.5*a_Tmpv4
   a_Tmpv1 =(w(i,k,jds+1) +w(i,k,jds))*a_Tmpv3
   a_Tmpv2 =(fzm(k)*rv(i,k,jds+1) +fzp(k)*rv(i,k-1,jds+1))*a_Tmpv3
   a_w(i,k,jds+1) =a_w(i,k,jds+1) +a_Tmpv2
   a_w(i,k,jds) =a_w(i,k,jds) +a_Tmpv2
   a_rv(i,k,jds+1) =a_rv(i,k,jds+1) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,jds+1) =a_rv(i,k-1,jds+1) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   k =ktf+1

   DO i =i_end, i_start, -1
   mrdy =msftx(i,jds)*rdy

   a_Tmpv5 =a_tendency(i,k,jds)
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv2 =(w(i,k,jds+1) +w(i,k,jds))*a_Tmpv4
   a_Tmpv3 =mrdy*0.5*((2.-fzm(k-1))*rv(i,k-1,jds+1) -fzp(k-1)*rv(i,k-2,jds+1))*a_Tmpv4
   a_w(i,k,jds+1) =a_w(i,k,jds+1) +a_Tmpv3
   a_w(i,k,jds) =a_w(i,k,jds) +a_Tmpv3
   a_Tmpv1 =mrdy*0.5*a_Tmpv2
   a_rv(i,k-1,jds+1) =a_rv(i,k-1,jds+1) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,jds+1) =a_rv(i,k-2,jds+1) -fzp(k-1)*a_Tmpv1
   ENDDO
   END IF

   IF(jte == jde) THEN

   k =ktf+1

   DO i =i_end, i_start, -1
   mrdy =msftx(i,jde-1)*rdy

   a_Tmpv5 =a_tendency(i,k,jde-1)
   a_tendency(i,k,jde-1) =0.0
   a_tendency(i,k,jde-1) =a_tendency(i,k,jde-1) +a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv2 =(w(i,k,jde-1) +w(i,k,jde-2))*a_Tmpv4
   a_Tmpv3 =mrdy*0.5*((2.-fzm(k-1))*rv(i,k-1,jde-1) -fzp(k-1)*rv(i,k-2,jde-1))*a_Tmpv4
   a_w(i,k,jde-1) =a_w(i,k,jde-1) +a_Tmpv3
   a_w(i,k,jde-2) =a_w(i,k,jde-2) +a_Tmpv3
   a_Tmpv1 =mrdy*0.5*a_Tmpv2
   a_rv(i,k-1,jde-1) =a_rv(i,k-1,jde-1) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,jde-1) =a_rv(i,k-2,jde-1) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,jde-1)*rdy

   a_Tmpv5 =a_tendency(i,k,jde-1)
   a_tendency(i,k,jde-1) =0.0
   a_tendency(i,k,jde-1) =a_tendency(i,k,jde-1) +a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =mrdy*0.5*a_Tmpv4
   a_Tmpv1 =(w(i,k,jde-1) +w(i,k,jde-2))*a_Tmpv3
   a_Tmpv2 =(fzm(k)*rv(i,k,jde-1) +fzp(k)*rv(i,k-1,jde-1))*a_Tmpv3
   a_w(i,k,jde-1) =a_w(i,k,jde-1) +a_Tmpv2
   a_w(i,k,jde-2) =a_w(i,k,jde-2) +a_Tmpv2
   a_rv(i,k,jde-1) =a_rv(i,k,jde-1) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,jde-1) =a_rv(i,k-1,jde-1) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO

   END IF
   END IF

   DO j =j_end, j_start, -1
   k =ktf+1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j)*rdy

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.5*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv6
   a_Tmpv5 =((2.-fzm(k-1))*rv(i,k-1,j) -fzp(k-1)*rv(i,k-2,j))*a_Tmpv6
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv5
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv5
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv4
   a_rv(i,k-2,j) =a_rv(i,k-2,j) -fzp(k-1)*a_Tmpv4
   a_Tmpv1 =(w(i,k,j+1) +w(i,k,j))*a_Tmpv3
   a_Tmpv2 =((2.-fzm(k-1))*rv(i,k-1,j+1) -fzp(k-1)*rv(i,k-2,j+1))*a_Tmpv3
   a_w(i,k,j+1) =a_w(i,k,j+1) +a_Tmpv2
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv2
   a_rv(i,k-1,j+1) =a_rv(i,k-1,j+1) +(2.-fzm(k-1))*a_Tmpv1
   a_rv(i,k-2,j+1) =a_rv(i,k-2,j+1) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   mrdy =msftx(i,j)*rdy

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdy*0.5*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(w(i,k,j) +w(i,k,j-1))*a_Tmpv6
   a_Tmpv5 =(fzm(k)*rv(i,k,j) +fzp(k)*rv(i,k-1,j))*a_Tmpv6
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv5
   a_w(i,k,j-1) =a_w(i,k,j-1) +a_Tmpv5
   a_rv(i,k,j) =a_rv(i,k,j) +fzm(k)*a_Tmpv4
   a_rv(i,k-1,j) =a_rv(i,k-1,j) +fzp(k)*a_Tmpv4
   a_Tmpv1 =(w(i,k,j+1) +w(i,k,j))*a_Tmpv3
   a_Tmpv2 =(fzm(k)*rv(i,k,j+1) +fzp(k)*rv(i,k-1,j+1))*a_Tmpv3
   a_w(i,k,j+1) =a_w(i,k,j+1) +a_Tmpv2
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv2
   a_rv(i,k,j+1) =a_rv(i,k,j+1) +fzm(k)*a_Tmpv1
   a_rv(i,k-1,j+1) =a_rv(i,k-1,j+1) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

      IF ( .NOT. config_flags%periodic_x ) THEN
        IF ( config_flags%open_xs .or. specified ) i_start = MAX(ids+1,its)
        IF ( config_flags%open_xe .or. specified ) i_end   = MIN(ide-2,ite)
      ENDIF

   DO j =j_end, j_start, -1
   k =ktf+1
   DO i =i_end, i_start, -1
   mrdx =msftx(i,j)*rdx

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.5*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv6
   a_Tmpv5 =((2.-fzm(k-1))*ru(i,k-1,j) -fzp(k-1)*ru(i,k-2,j))*a_Tmpv6
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv5
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv5
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +(2.-fzm(k-1))*a_Tmpv4
   a_ru(i,k-2,j) =a_ru(i,k-2,j) -fzp(k-1)*a_Tmpv4
   a_Tmpv1 =(w(i+1,k,j) +w(i,k,j))*a_Tmpv3
   a_Tmpv2 =((2.-fzm(k-1))*ru(i+1,k-1,j) -fzp(k-1)*ru(i+1,k-2,j))*a_Tmpv3
   a_w(i+1,k,j) =a_w(i+1,k,j) +a_Tmpv2
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv2
   a_ru(i+1,k-1,j) =a_ru(i+1,k-1,j) +(2.-fzm(k-1))*a_Tmpv1
   a_ru(i+1,k-2,j) =a_ru(i+1,k-2,j) -fzp(k-1)*a_Tmpv1
   ENDDO

   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   mrdx =msftx(i,j)*rdx

   a_Tmpv9 =a_tendency(i,k,j)
   a_Tmpv8 =-a_Tmpv9
   a_Tmpv7 =mrdx*0.5*a_Tmpv8
   a_Tmpv3 =a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv4 =(w(i,k,j) +w(i-1,k,j))*a_Tmpv6
   a_Tmpv5 =(fzm(k)*ru(i,k,j) +fzp(k)*ru(i,k-1,j))*a_Tmpv6
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv5
   a_w(i-1,k,j) =a_w(i-1,k,j) +a_Tmpv5
   a_ru(i,k,j) =a_ru(i,k,j) +fzm(k)*a_Tmpv4
   a_ru(i,k-1,j) =a_ru(i,k-1,j) +fzp(k)*a_Tmpv4
   a_Tmpv1 =(w(i+1,k,j) +w(i,k,j))*a_Tmpv3
   a_Tmpv2 =(fzm(k)*ru(i+1,k,j) +fzp(k)*ru(i+1,k-1,j))*a_Tmpv3
   a_w(i+1,k,j) =a_w(i+1,k,j) +a_Tmpv2
   a_w(i,k,j) =a_w(i,k,j) +a_Tmpv2
   a_ru(i+1,k,j) =a_ru(i+1,k,j) +fzm(k)*a_Tmpv1
   a_ru(i+1,k-1,j) =a_ru(i+1,k-1,j) +fzp(k)*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   ELSE IF( horz_order == 0 ) THEN

   ELSE

   ENDIF

   END SUBROUTINE a_advect_w

   SUBROUTINE a_advect_scalar_pd(field,a_field,field_old,a_field_old,tendency, &
   a_tendency,ru,a_ru,rv,a_rv,rom,a_rom,mut,a_mut,mub,mu_old,a_mu_old, &
   time_step,config_flags,msfux,msfuy,msfvx,msfvy,msftx,msfty,fzm,fzp,rdx,rdy,rdzw,dt, &
   ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: field,a_field,field_old,a_field_old, &
   ru,a_ru,rv,a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut,mub,mu_old,a_mu_old
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzw
   REAL :: rdx,rdy,dt
   INTEGER :: time_step
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax
   REAL :: mrdx,mrdy,ub,a_ub,vb,a_vb,uw,a_uw,vw,a_vw,mu,a_mu
   REAL,DIMENSION(its-1:ite+2,kts:kte,jts-1:jte+2) :: fqx,a_fqx,fqy,a_fqy,fqz,a_fqz
   REAL,DIMENSION(its-1:ite+2,kts:kte,jts-1:jte+2) :: fqxl,a_fqxl,fqyl,a_fqyl,fqzl,a_fqzl
   INTEGER :: horz_order,vert_order
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   INTEGER :: jp1,jp0,jtmp
   REAL :: flux_out,a_flux_out,ph_low,a_ph_low,scale,a_scale
   REAL,PARAMETER :: eps =1.e-20
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6,flux_upwind, &
   Diff_flux_upwind
   REAL :: q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   q_ip2,a_q_ip2,ua,a_ua,vel,a_vel,cr,a_cr

   Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
   a_ua) =(7./12.)*(a_q_i +a_q_im1) -(1./12.)*(a_q_ip1 +a_q_im2)
   flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7./12.)*(q_i +q_im1) -(1./12.)*(q_ip1 +q_im2)

   Diff_flux3(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,ua, &
   a_ua) =Diff_flux4(q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1, &
   ua,a_ua) +sign(1, time_step) *sign(1., ua) *(1./12.)*((a_q_ip1 -a_q_im2) &
   -3.*(a_q_i -a_q_im1))
   flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1, time_step) &
   *sign(1., ua) *(1./12.)*((q_ip1 -q_im2) -3.*(q_i -q_im1))

   Diff_flux6(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =(37./60.)*(a_q_i +a_q_im1) -(2./15.) &
   *(a_q_ip1 +a_q_im2) +(1./60.)*(a_q_ip2 +a_q_im3)
   flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37./60.)*(q_i +q_im1) -(2./15.) &
   *(q_ip1 +q_im2) +(1./60.)*(q_ip2 +q_im3)

   Diff_flux5(q_im3,a_q_im3,q_im2,a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1, &
   a_q_ip1,q_ip2,a_q_ip2,ua,a_ua) =Diff_flux6(q_im3,a_q_im3,q_im2, &
   a_q_im2,q_im1,a_q_im1,q_i,a_q_i,q_ip1,a_q_ip1,q_ip2,a_q_ip2,ua, &
   a_ua) -sign(1, time_step) *sign(1., ua) *(1./60.)*((a_q_ip2 -a_q_im3) &
   -5.*(a_q_ip1 -a_q_im2) +10.*(a_q_i -a_q_im1))
   flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
   ua) -sign(1, time_step) *sign(1., ua) *(1./60.)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) &
   +10.*(q_i -q_im1))

   Diff_flux_upwind(q_im1,a_q_im1,q_i,a_q_i,cr,a_cr) =0.5*min(1.0,(cr +abs(cr)))*a_q_im1&
   +0.5*(0.0 +(a_cr +sign(1.0, cr) &
   *a_cr) -(0.0 -(a_cr +sign(1.0, cr)*a_cr))*sign(1.0, 1.0 -((cr +abs(cr)))))*0.5*q_im1&
   +0.5*max(-1.0,(cr -abs(cr)))*a_q_i +0.5*(0.0 +(a_cr -sign(1.0, cr) & 
   *a_cr) +(0.0 -(a_cr -sign(1.0, cr)*a_cr))*sign(1.0, -1.0 -((cr -abs(cr)))))*0.5*q_i
   flux_upwind(q_im1,q_i,cr) =0.5*min(1.0,(cr +abs(cr)))*q_im1+0.5*max(-1.0,(cr -abs(cr)))*q_i

   REAL :: dx,a_dx,dy,a_dy,dz,a_dz
   LOGICAL,PARAMETER :: pd_limit =.true.

   REAL :: Keep_Lpb3_cr
   REAL :: Keep_Lpb7_ub
   REAL :: Keep_Lpb11_vb
   REAL :: Keep_Lpb13_vb
   REAL :: Keep_Lpb15_vb
   REAL :: Keep_Lpb25_mu
   REAL :: Keep_Lpb25_vel
   REAL :: Keep_Lpb25_cr   
   INTEGER :: IX1,IX2,IX3

   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007,a_Tmpv8,Tmpv008,a_Tmpv9, &
   Tmpv009,a_Tmpv10,Tmpv010,a_Tmpv11,Tmpv011,a_Tmpv12,Tmpv012

   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,its,min(jts-1,jds)):max0(min(jte,jde-1),min(ite,ide-1),min(jte+1,jde-1))) &
    :: Tmpv300
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,its,min(jts-1,jds)):max0(min(jte,jde-1),min(ite,ide-1),min(jte+1,jde-1))) &
    :: Tmpv301
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,its,min(jts-1,jds)):max0(min(jte,jde-1),min(ite,ide-1),min(jte+1,jde-1))) &
    :: Tmpv302
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,its,min(jts-1,jds)):max0(min(jte,jde-1),min(ite,ide-1),min(jte+1,jde-1))) &
    :: Tmpv303
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv304
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv305
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv306
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv307
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv308
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv309
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3010
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3011
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3012
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3013
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3014
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3015
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3016
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3017
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3018
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3019
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3020
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3021
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3022
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3023
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3024
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3025
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3026
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3027
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3028
   REAL,DIMENSION(min0(kts,min(its-1,ids)):max0(min(kte,kde-1),min(ite+1,ide-1)) &
   ,min0(jts,min(jts-1,jds)):max0(min(jte,jde-1),min(jte+1,jde-1))) :: Tmpv3029
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3030
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3031
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3032
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3033
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3034
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3035
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3036
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3037
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3038
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3039
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3040
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3041
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3042
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3043
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3044
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3045
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3046
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3047
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3048
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3049
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3050
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3051
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3052
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3053
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3054
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3055
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3056
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3057
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3058
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3059
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3060
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3061
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3062
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3063
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3064
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3065
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3066
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3067
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3068
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3069
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3070
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3071
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3072
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3073
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3074
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3075
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3076
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3077
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3078
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3079
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3080
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3081
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3082
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3083
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3084
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3085
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3086
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3087
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3088
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3089
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3090
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3091
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3092
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3093
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3094
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv3095
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv400
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv401
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv402
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv403
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv404
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv405
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv406
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv407
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv408
   REAL,DIMENSION(min0(its-1,ids):max0(min(ite+1,ide-1) &
   ,min(ite+1,ide-2)),min0(kts,kts+3):max0(min(kte,kde-1),min(kte,kde-1)-2) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1) &
   ,min(jte+1,jde-2))) :: Tmpv409
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4010
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4011
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4012
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4013
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4014
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+3):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-2),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4015
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4016
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4017
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4018
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4019
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4020
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4021
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4022
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4023
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4024
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4025
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4026
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4027
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4028
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4029
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4030
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+2):max0(min(kte,kde-1) &
   ,min(kte,kde-1)-1),min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2) &
   +1,min(jte+1,jde-1))) :: Tmpv4031
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4032
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4033
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4034
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4035
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4036
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4037
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4038
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),min0(kts,kts+1):min(kte,kde-1) &
   ,min0(max(jts-1,jds+1),max(jts-1,jds)):max0(min(jte+1,jde-2)+1,min(jte+1,jde-1))) :: Tmpv4039
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4040
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4041
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4042
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4043
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4044
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4045
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4046
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv4047
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4048
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4049
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4050
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4051
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4052
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4053
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4054
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4055
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4056
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4057
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4058
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4059
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4060
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4061
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4062
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4063
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4064
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4065
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4066
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4067
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4068
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4069
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4070
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4071
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4072
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4073
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4074
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4075
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4076
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4077
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv4078
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4079
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4080
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4081
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4082
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4083
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4084
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4085
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4086
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4087
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4088
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4089
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4090
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4091
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4092
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4093
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4094
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4095
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4096
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4097
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4098
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv4099
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40100
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40101
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40102
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40103
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40104
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40105
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40106
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40107
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40108
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40109
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40110
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40111
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40112
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40113
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40114
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40115
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40116
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40117
   REAL,DIMENSION(min(its-1,ids):min(ite+1,ide-1),kts:min(kte,kde-1),max(jts-1,jds+1) &
   :min(jte+1,jde-2)+1) :: Tmpv40118
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40119
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40120
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40121
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40122
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40123
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40124
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40125
   REAL,DIMENSION(ids+3:ide-3,kts:min(kte,kde-1),min(jts-1,jds):min(jte+1,jde-1)) :: Tmpv40126
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40127
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40128
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40129
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40130
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40131
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40132
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40133
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40134
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40135
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40136
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40137
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40138
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40139
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40140
   REAL,DIMENSION(kts:min(kte,kde-1),max(ids+1,its-1):ids+3-1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40141
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40142
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40143
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40144
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40145
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40146
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40147
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40148
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40149
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40150
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40151
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40152
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40153
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40154
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40155
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40156
   REAL,DIMENSION(kts:min(kte,kde-1),ide-3+1:min(ide-2,ite+1)+1,max(jts-1,jds) &
   :min(jte+1,jde-1)) :: Tmpv40157
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40158
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40159
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40160
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40161
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40162
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40163
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40164
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40165
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40166
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40167
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40168
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40169
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40170
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40171
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40172
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40173
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40174
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40175
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40176
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40177
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40178
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40179
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40180
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40181
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40182
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40183
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40184
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40185
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40186
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40187
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40188
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40189
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40190
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40191
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40192
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40193
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40194
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40195
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40196
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40197
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40198
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40199
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40200
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40201
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40202
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40203
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40204
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40205
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40206
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40207
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40208
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40209
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40210
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40211
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40212
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40213
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40214
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40215
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40216
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40217
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40218
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40219
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40220
   REAL,DIMENSION(max(ids+1,its)+1:ide-2,kts:min(kte,kde-1),jts:min(jte,jde-1)) :: Tmpv40221
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40222
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40223
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40224
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40225
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40226
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40227
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40228
   REAL,DIMENSION(its:min(ite,ide-1),kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)+1) &
    :: Tmpv40229
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40230
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40231
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40232
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40233
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40234
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40235
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40236
   REAL,DIMENSION(its:min(ite,ide-1)+1,kts:min(kte,kde-1),max(jts,jds+1):min(jte,jde-2)) &
    :: Tmpv40237

!PART II: CALCULATIONS OF B. S. TRAJECTORY

!LPB[1]

    IF (config_flags%polar) THEN

          fqx(:,:,:)  = 0.
          fqy(:,:,:)  = 0.
          fqz(:,:,:)  = 0.
          fqxl(:,:,:) = 0.
          fqyl(:,:,:) = 0.
          fqzl(:,:,:) = 0.

   END IF

!LPB[2]

     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

     degrade_xs = .true.
     degrade_xe = .true.
     degrade_ys = .true.
     degrade_ye = .true.

!LPB[3]
       Keep_Lpb3_cr =cr

  horizontal_order_test : IF( horz_order == 6 ) THEN

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-4)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

         j_loop_y_flux_6 : DO j = j_start, j_end+1
      IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

           DO k=kts,ktf
           DO i = i_start, i_end
             dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
             mu = 0.5*(mut(i,j)+mut(i,j-1))
             vel = rv(i,k,j)
             cr = vel*dt/dy/mu
             fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k,j  ), cr)
             fqy( i, k, j  ) = vel*flux6(                                    &
                     field(i,k,j-3), field(i,k,j-2), field(i,k,j-1),         &
                     field(i,k,j  ), field(i,k,j+1), field(i,k,j+2),  vel )
             fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
           ENDDO
           ENDDO
         ELSE IF ( j == jds+1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i,k, j) = 0.5*rv(i,k,j)*            &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF  ( j == jds+2 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy( i, k, j ) = vel*flux4(                &
                      field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel )
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i, k, j ) = 0.5*rv(i,k,j)*        &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-2 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy( i, k, j) = vel*flux4(               &
                      field(i,k,j-2),field(i,k,j-1),      &
                      field(i,k,j),field(i,k,j+1),vel )
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ENDIF
      ENDDO j_loop_y_flux_6
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = MAX(jts-1,jds)

      IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its-1)
           i_start_f = ids+3
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite+1)
           i_end_f = ide-3
         ENDIF

         DO j = j_start, j_end
           DO k=kts,ktf
           DO i = i_start_f, i_end_f
             dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
             mu = 0.5*(mut(i,j)+mut(i-1,j))
             vel = ru(i,k,j)
             cr = vel*dt/dx/mu
             fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k,j  ), cr)
             fqx( i,k,j ) = vel*flux6( field(i-3,k,j), field(i-2,k,j),    &
                                            field(i-1,k,j), field(i  ,k,j),    &
                                            field(i+1,k,j), field(i+2,k,j),    &
                                            vel                             )
             fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
           ENDDO
           ENDDO
        IF( degrade_xs ) THEN

             DO i=i_start,i_start_f-1
            IF(i == ids+1) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)/mu
                   cr = vel*dt/dx
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx(i,k,j) = 0.5*(ru(i,k,j))   &
                          *(field(i,k,j)+field(i-1,k,j))
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
            IF(i == ids+2) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx( i,k,j ) = vel*flux4( field(i-2,k,j), field(i-1,k,j),    &
                                             field(i  ,k,j), field(i+1,k,j),    &
                                             vel                             )
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
             ENDDO
           ENDIF
        IF( degrade_xe ) THEN

             DO i = i_end_f+1, i_end+1
            IF( i == ide-1 ) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx(i,k,j) = 0.5*(ru(i,k,j))        &
                          *(field(i,k,j)+field(i-1,k,j))
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
            IF( i == ide-2 ) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx( i,k,j ) = vel*flux4( field(i-2,k,j), field(i-1,k,j),    &
                                             field(i  ,k,j), field(i+1,k,j),    &
                                             vel                             )
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
             ENDDO
           ENDIF
         ENDDO
       ELSE IF( horz_order == 5 ) THEN
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-4)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

         j_loop_y_flux_5 : DO j = j_start, j_end+1
      IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

           DO k=kts,ktf
           DO i = i_start, i_end
             dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
             mu = 0.5*(mut(i,j)+mut(i,j-1))
             vel = rv(i,k,j)
             cr = vel*dt/dy/mu
             fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k,j  ), cr)
             fqy( i, k, j  ) = vel*flux5(                                    &
                     field(i,k,j-3), field(i,k,j-2), field(i,k,j-1),         &
                     field(i,k,j  ), field(i,k,j+1), field(i,k,j+2),  vel )
             fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
           ENDDO
           ENDDO
         ELSE IF ( j == jds+1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i,k, j) = 0.5*rv(i,k,j)*            &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF  ( j == jds+2 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy( i, k, j ) = vel*flux3(                &
                      field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel )
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i, k, j ) = 0.5*rv(i,k,j)*        &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-2 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy( i, k, j) = vel*flux3(               &
                      field(i,k,j-2),field(i,k,j-1),      &
                      field(i,k,j),field(i,k,j+1),vel )
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ENDIF
      ENDDO j_loop_y_flux_5
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = MAX(jts-1,jds)

      IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its-1)
           i_start_f = ids+3
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite+1)
           i_end_f = ide-3
         ENDIF

         DO j = j_start, j_end
           DO k=kts,ktf
           DO i = i_start_f, i_end_f
             dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
             mu = 0.5*(mut(i,j)+mut(i-1,j))
             vel = ru(i,k,j)
             cr = vel*dt/dx/mu
             fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k,j  ), cr)
             fqx( i,k,j ) = vel*flux5( field(i-3,k,j), field(i-2,k,j),    &
                                            field(i-1,k,j), field(i  ,k,j),    &
                                            field(i+1,k,j), field(i+2,k,j),    &
                                            vel                             )
             fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
           ENDDO
           ENDDO
        IF( degrade_xs ) THEN

             DO i=i_start,i_start_f-1
            IF(i == ids+1) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)/mu
                   cr = vel*dt/dx
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx(i,k,j) = 0.5*(ru(i,k,j))   &
                          *(field(i,k,j)+field(i-1,k,j))
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
            IF(i == ids+2) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx( i,k,j ) = vel*flux3( field(i-2,k,j), field(i-1,k,j),    &
                                             field(i  ,k,j), field(i+1,k,j),    &
                                             vel                             )
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
             ENDDO
           ENDIF
        IF( degrade_xe ) THEN

             DO i = i_end_f+1, i_end+1
            IF( i == ide-1 ) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx(i,k,j) = 0.5*(ru(i,k,j))        &
                          *(field(i,k,j)+field(i-1,k,j))
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
            IF( i == ide-2 ) THEN

                 DO k=kts,ktf
                   dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                   mu = 0.5*(mut(i,j)+mut(i-1,j))
                   vel = ru(i,k,j)
                   cr = vel*dt/dx/mu
                   fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j) &
   , field_old(i,k,j  ), cr)
                   fqx( i,k,j ) = vel*flux3( field(i-2,k,j), field(i-1,k,j),    &
                                             field(i  ,k,j), field(i+1,k,j),    &
                                             vel                             )
                   fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
                 ENDDO
               ENDIF
             ENDDO
           ENDIF
         ENDDO
       ELSE IF( horz_order == 4 ) THEN
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+1)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+1)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-2)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = its

      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+2
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-2
         ENDIF

         j_loop_y_flux_4 : DO j = j_start, j_end+1
      IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

           DO k=kts,ktf
           DO i = i_start, i_end
             dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
             mu = 0.5*(mut(i,j)+mut(i,j-1))
             vel = rv(i,k,j)
             cr = vel*dt/dy/mu
             fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k,j  ), cr)
             fqy( i, k, j  ) = vel*flux4(  field(i,k,j-2), field(i,k,j-1),         &
                                           field(i,k,j  ), field(i,k,j+1), vel )
             fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
           ENDDO
           ENDDO
         ELSE IF ( j == jds+1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i,k, j) = 0.5*rv(i,k,j)*            &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i, k, j ) = 0.5*rv(i,k,j)*        &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ENDIF
      ENDDO j_loop_y_flux_4
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = jts

      IF(degrade_ye) j_end   = MIN(jte,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its)
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite)
           i_end_f = ide-2
         ENDIF

         DO j = j_start, j_end
           DO k=kts,ktf
           DO i = i_start_f, i_end_f
             dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
             mu = 0.5*(mut(i,j)+mut(i-1,j))
             vel = ru(i,k,j)
             cr = vel*dt/dx/mu
             fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k,j  ), cr)
             fqx( i,k,j ) = vel*flux4( field(i-2,k,j), field(i-1,k,j),   &
                                       field(i  ,k,j), field(i+1,k,j), vel )
             fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
           ENDDO
           ENDDO
        IF( degrade_xs ) THEN

          IF( i_start == ids+1 ) THEN

               i = ids+1

               DO k=kts,ktf
                 dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                 mu = 0.5*(mut(i,j)+mut(i-1,j))
                 vel = ru(i,k,j)/mu
                 cr = vel*dt/dx
                 fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k, &
   j  ), cr)
                 fqx(i,k,j) = 0.5*(ru(i,k,j))   &
                        *(field(i,k,j)+field(i-1,k,j))
                 fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
               ENDDO
             ENDIF
           ENDIF
        IF( degrade_xe ) THEN

          IF( i_end == ide-2 ) THEN

               i = ide-1

               DO k=kts,ktf
                 dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                 mu = 0.5*(mut(i,j)+mut(i-1,j))
                 vel = ru(i,k,j)
                 cr = vel*dt/dx/mu
                 fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k, &
   j  ), cr)
                 fqx(i,k,j) = 0.5*(ru(i,k,j))        &
                        *(field(i,k,j)+field(i-1,k,j))
                 fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
               ENDDO
             ENDIF
           ENDIF
         ENDDO
      ELSE IF( horz_order == 3 ) THEN
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+2)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-1)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+2)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-1)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = its

      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts,jds+1)
           j_start_f = jds+2
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte,jde-2)
           j_end_f = jde-2
         ENDIF

         j_loop_y_flux_3 : DO j = j_start, j_end+1
      IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

           DO k=kts,ktf
           DO i = i_start, i_end
             dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
             mu = 0.5*(mut(i,j)+mut(i,j-1))
             vel = rv(i,k,j)
             cr = vel*dt/dy/mu
             fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k,j  ), cr)
             fqy( i, k, j  ) = vel*flux3(  field(i,k,j-2), field(i,k,j-1),         &
                                           field(i,k,j  ), field(i,k,j+1), vel )
             fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
           ENDDO
           ENDDO
         ELSE IF ( j == jds+1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i,k, j) = 0.5*rv(i,k,j)*            &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ELSE IF ( j == jde-1 ) THEN

               DO k=kts,ktf
               DO i = i_start, i_end
                 dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
                 mu = 0.5*(mut(i,j)+mut(i,j-1))
                 vel = rv(i,k,j)
                 cr = vel*dt/dy/mu
                 fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k, &
   j  ), cr)
                 fqy(i, k, j ) = 0.5*rv(i,k,j)*        &
                        (field(i,k,j)+field(i,k,j-1))
                 fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
               ENDDO
               ENDDO
         ENDIF
      ENDDO j_loop_y_flux_3
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = jts

      IF(degrade_ye) j_end   = MIN(jte,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its)
           i_start_f = i_start+1
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite)
           i_end_f = ide-2
         ENDIF

         DO j = j_start, j_end
           DO k=kts,ktf
           DO i = i_start_f, i_end_f
             dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
             mu = 0.5*(mut(i,j)+mut(i-1,j))
             vel = ru(i,k,j)
             cr = vel*dt/dx/mu
             fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k,j  ), cr)
             fqx( i,k,j ) = vel*flux3( field(i-2,k,j), field(i-1,k,j),   &
                                       field(i  ,k,j), field(i+1,k,j), vel )
             fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
           ENDDO
           ENDDO
        IF( degrade_xs ) THEN

          IF( i_start == ids+1 ) THEN

               i = ids+1

               DO k=kts,ktf
                 dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                 mu = 0.5*(mut(i,j)+mut(i-1,j))
                 vel = ru(i,k,j)/mu
                 cr = vel*dt/dx
                 fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k, &
   j  ), cr)
                 fqx(i,k,j) = 0.5*(ru(i,k,j))   &
                        *(field(i,k,j)+field(i-1,k,j))
                 fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
               ENDDO
             ENDIF
           ENDIF
        IF( degrade_xe ) THEN

          IF( i_end == ide-2 ) THEN

               i = ide-1

               DO k=kts,ktf
                 dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
                 mu = 0.5*(mut(i,j)+mut(i-1,j))
                 vel = ru(i,k,j)
                 cr = vel*dt/dx/mu
                 fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k, &
   j  ), cr)
                 fqx(i,k,j) = 0.5*(ru(i,k,j))        &
                        *(field(i,k,j)+field(i-1,k,j))
                 fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
               ENDDO
             ENDIF
           ENDIF
         ENDDO
      ELSE IF( horz_order == 2 ) THEN
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+1)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-2)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+1)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-2)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_xs) i_start = its

      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) j_start = MAX(jts,jds+1)

      IF(degrade_ye) j_end = MIN(jte,jde-2)

         DO j = j_start, j_end+1
           DO k=kts,ktf
           DO i = i_start, i_end
              dy = 2./(msftx(i,j)+msftx(i,j-1))/rdy
              mu = 0.5*(mut(i,j)+mut(i,j-1))
              vel = rv(i,k,j)
              cr = vel*dt/dy/mu
              fqyl(i,k,j) = mu*(dy/dt)*flux_upwind(field_old(i,k,j-1), field_old(i,k,j  ), cr)
              fqy(i,k, j) = 0.5*rv(i,k,j)*            &
                     (field(i,k,j)+field(i,k,j-1))
              fqy(i,k,j) = fqy(i,k,j) - fqyl(i,k,j)
           ENDDO
           ENDDO
         ENDDO

         DO j = j_start, j_end
           DO k=kts,ktf
           DO i = i_start, i_end+1
               dx = 2./(msfty(i,j)+msfty(i-1,j))/rdx
               mu = 0.5*(mut(i,j)+mut(i-1,j))
               vel = ru(i,k,j)
               cr = vel*dt/dx/mu
               fqxl(i,k,j) = mu*(dx/dt)*flux_upwind(field_old(i-1,k,j), field_old(i,k,j  ), cr)
               fqx( i,k,j ) = 0.5*ru(i,k,j)*            &
                     (field(i,k,j)+field(i-1,k,j))
               fqx(i,k,j) = fqx(i,k,j) - fqxl(i,k,j)
           ENDDO
           ENDDO
         ENDDO
      ELSE
         CALL wrf_error_fatal ( TRIM( wrf_err_message ) )

   ENDIF horizontal_order_test  

!LPB[4]

         i_start = its
         i_end   = MIN(ite,ide-1)
         j_start = jts
         j_end   = MIN(jte,jde-1)

!LPB[5]
   IF( (config_flags%open_xs) .and. (its == ids) ) THEN

          DO j = j_start, j_end
          DO k = kts, ktf
            ub = MIN( 0.5*(ru(its,k,j)+ru(its+1,k,j)), 0. )
            tendency(its,k,j) = tendency(its,k,j)                       &
                  - rdx*(                                               &
                          ub*(   field_old(its+1,k,j)                   &
                               - field_old(its  ,k,j)   ) +             &
                          field(its,k,j)*(ru(its+1,k,j)-ru(its,k,j))    &
                                                                   )
          ENDDO
          ENDDO

   ENDIF

!LPB[6]

!LPB[7]
       Keep_Lpb7_ub =ub

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN

          DO j = j_start, j_end
          DO k = kts, ktf
            ub = MAX( 0.5*(ru(ite-1,k,j)+ru(ite,k,j)), 0. )
            tendency(i_end,k,j) = tendency(i_end,k,j)                     &
                  - rdx*(                                                 &
                          ub*(  field_old(i_end  ,k,j)                    &
                              - field_old(i_end-1,k,j) ) +                &
                          field(i_end,k,j)*(ru(ite,k,j)-ru(ite-1,k,j))    &
                                                                       )
          ENDDO
          ENDDO

   ENDIF

!LPB[8]

!LPB[9]

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN

          DO i = i_start, i_end
          DO k = kts, ktf
            vb = MIN( 0.5*(rv(i,k,jts)+rv(i,k,jts+1)), 0. )
            tendency(i,k,jts) = tendency(i,k,jts)                       &
                  - rdy*(                                               &
                          vb*(  field_old(i,k,jts+1)                    &
                              - field_old(i,k,jts  ) ) +                &
                          field(i,k,jts)*(rv(i,k,jts+1)-rv(i,k,jts))    &
                                                                   )
          ENDDO
          ENDDO

   ENDIF

!LPB[10]

!LPB[11]
       Keep_Lpb11_vb =vb

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN

          DO i = i_start, i_end
          DO k = kts, ktf
            vb = MAX( 0.5*(rv(i,k,jte-1)+rv(i,k,jte)), 0. )
            tendency(i,k,j_end) = tendency(i,k,j_end)                     &
                  - rdy*(                                                 &
                          vb*(   field_old(i,k,j_end  )                   &
                               - field_old(i,k,j_end-1) ) +               &
                          field(i,k,j_end)*(rv(i,k,jte)-rv(i,k,jte-1))    &
                                                                       )
          ENDDO
          ENDDO

   ENDIF

!LPB[12]

!LPB[13]
       Keep_Lpb13_vb =vb

   IF( (config_flags%polar) .and. (jts == jds) ) THEN

          DO i = i_start, i_end
          DO k = kts, ktf
            vb = MIN( 0.5*rv(i,k,jts+1), 0. )
            tendency(i,k,jts) = tendency(i,k,jts)                       &
                  - rdy*(                                               &
                          vb*(  field_old(i,k,jts+1)                    &
                              - field_old(i,k,jts  ) ) +                &
                          field(i,k,jts)*rv(i,k,jts+1)                  &
                                                                   )
          ENDDO
          ENDDO

   ENDIF

!LPB[14]

!LPB[15]
       Keep_Lpb15_vb =vb

   IF( (config_flags%polar) .and. (jte == jde)) THEN

          DO i = i_start, i_end
          DO k = kts, ktf
            vb = MAX( 0.5*rv(i,k,jte-1), 0. )
            tendency(i,k,j_end) = tendency(i,k,j_end)                     &
                  - rdy*(                                                 &
                          vb*(   field_old(i,k,j_end  )                   &
                               - field_old(i,k,j_end-1) ) +               &
                          field(i,k,j_end)*(-rv(i,k,jte-1))               &
                                                                       )
          ENDDO
          ENDDO

   ENDIF

!LPB[16]

         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1

!LPB[17]
    IF(degrade_xs) i_start = MAX(its-1,ids)

!LPB[18]

!LPB[19]
    IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

!LPB[20]

!LPB[21]
    IF(degrade_ys) j_start = MAX(jts-1,jds)

!LPB[22]

!LPB[23]
    IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

!LPB[24]

!LPB[25]
       Keep_Lpb25_mu =mu
       Keep_Lpb25_vel =vel
       Keep_Lpb25_cr =cr

    vert_order_test : IF (vert_order == 6) THEN    

         DO j = j_start, j_end
            DO i = i_start, i_end
              fqz(i,1,j)  = 0.
              fqzl(i,1,j) = 0.
              fqz(i,kde,j)  = 0.
              fqzl(i,kde,j) = 0.
            ENDDO

            DO k=kts+3,ktf-2
            DO i = i_start, i_end
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux6( field(i,k-3,j), field(i,k-2,j), field(i,k-1,j) &
   ,        &
                                      field(i,k  ,j), field(i,k+1,j), field(i,k+2,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
            ENDDO

            DO i = i_start, i_end
              k=kts+1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=kts+2
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux4(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf-1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux4(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
         ENDDO
       ELSE IF (vert_order == 5) THEN    

         DO j = j_start, j_end
            DO i = i_start, i_end
              fqz(i,1,j)  = 0.
              fqzl(i,1,j) = 0.
              fqz(i,kde,j)  = 0.
              fqzl(i,kde,j) = 0.
            ENDDO

            DO k=kts+3,ktf-2
            DO i = i_start, i_end
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux5( field(i,k-3,j), field(i,k-2,j), field(i,k-1,j) &
   ,        &
                                      field(i,k  ,j), field(i,k+1,j), field(i,k+2,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
            ENDDO

            DO i = i_start, i_end
              k=kts+1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=kts+2
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux3(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf-1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux3(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
         ENDDO
       ELSE IF (vert_order == 4) THEN    

         DO j = j_start, j_end
            DO i = i_start, i_end
              fqz(i,1,j)  = 0.
              fqzl(i,1,j) = 0.
              fqz(i,kde,j)  = 0.
              fqzl(i,kde,j) = 0.
            ENDDO

            DO k=kts+2,ktf-1
            DO i = i_start, i_end
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux4(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
            ENDDO

            DO i = i_start, i_end
              k=kts+1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
         ENDDO
       ELSE IF (vert_order == 3) THEN    

         DO j = j_start, j_end
            DO i = i_start, i_end
              fqz(i,1,j)  = 0.
              fqzl(i,1,j) = 0.
              fqz(i,kde,j)  = 0.
              fqzl(i,kde,j) = 0.
            ENDDO

            DO k=kts+2,ktf-1
            DO i = i_start, i_end
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j) = vel*flux3(                        &
                      field(i,k-2,j), field(i,k-1,j),        &
                      field(i,k  ,j), field(i,k+1,j),  -vel )
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
            ENDDO

            DO i = i_start, i_end
              k=kts+1
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
              k=ktf
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
            ENDDO
         ENDDO
      ELSE IF (vert_order == 2) THEN    

         DO j = j_start, j_end
            DO i = i_start, i_end
              fqz(i,1,j)  = 0.
              fqzl(i,1,j) = 0.
              fqz(i,kde,j)  = 0.
              fqzl(i,kde,j) = 0.
            ENDDO

            DO k=kts+1,ktf
            DO i = i_start, i_end
              dz = 2./(rdzw(k)+rdzw(k-1))
              mu = 0.5*(mut(i,j)+mut(i,j))
              vel = rom(i,k,j)
              cr = vel*dt/dz/mu
              fqzl(i,k,j) = mu*(dz/dt)*flux_upwind(field_old(i,k-1,j), field_old(i,k,j  ), cr)
              fqz(i,k,j)=rom(i,k,j)*(fzm(k)*field(i,k,j)+fzp(k)*field(i,k-1,j))
              fqz(i,k,j) = fqz(i,k,j) - fqzl(i,k,j)
           ENDDO
           ENDDO
         ENDDO
      ELSE
         WRITE (wrf_err_message,*) ' advect_scalar_pd, v_order not known ',vert_order
         CALL wrf_error_fatal ( wrf_err_message )

   ENDIF vert_order_test

!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0
   a_uw =0.0
   a_vw =0.0
   a_mu =0.0

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqx(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqz(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqxl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqyl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-1, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-1, ite+2
   a_fqzl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_flux_out =0.0
   a_ph_low =0.0
   a_scale =0.0
   a_q_im3 =0.0
   a_q_im2 =0.0
   a_q_im1 =0.0
   a_q_i =0.0
   a_q_ip1 =0.0
   a_q_ip2 =0.0
   a_ua =0.0
   a_vel =0.0
   a_cr =0.0
   a_dx =0.0
   a_dy =0.0
   a_dz =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

!ADDED BY WALLSWALLSWALLS
!ADDED BY WALLSWALLSWALLS
!FROM LPB[28]
  i_start = its
  i_end   = MIN(ite,ide-1)
  j_start = jts
  j_end   = MIN(jte,jde-1)

!FROM LPB[35]
  i_start = its
  i_end   = MIN(ite,ide-1)
  IF(degrade_ys) j_start = MAX(jts,jds+1)
  IF(degrade_ye) j_end   = MIN(jte,jde-2)

!LPB[39]
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv6 =a_tendency(i,k,j)
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =msftx(i,j)*a_Tmpv5
   a_Tmpv3 =rdy*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqyl(i,k,j+1) =a_fqyl(i,k,j+1) +a_Tmpv2
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +a_Tmpv1
   a_fqy(i,k,j) =a_fqy(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

!LPB[34]
!FROM LPB[28]
  i_start = its
  i_end   = MIN(ite,ide-1)
  j_start = jts
  j_end   = MIN(jte,jde-1)

!FROM LPB[30]
  IF(degrade_xs) i_start = MAX(its,ids+1)
  IF(degrade_xe) i_end   = MIN(ite,ide-2)

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv6 =a_tendency(i,k,j)
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =msftx(i,j)*a_Tmpv5
   a_Tmpv3 =rdx*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqxl(i+1,k,j) =a_fqxl(i+1,k,j) +a_Tmpv2
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

!LPB[33]

!LPB[30]

!LPB[29]
!FROM LPB[28]
  i_start = its
  i_end   = MIN(ite,ide-1)
  j_start = jts
  j_end   = MIN(jte,jde-1)

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv5 =a_tendency(i,k,j)
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =rdzw(k)*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqzl(i,k+1,j) =a_fqzl(i,k+1,j) +a_Tmpv2
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +a_Tmpv1
   a_fqz(i,k,j) =a_fqz(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

   IF(pd_limit) THEN
   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1

   IF(degrade_xs) THEN
   i_start =max(its-1, ids)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-1)
   END IF
   IF(config_flags%specified .or. config_flags%nested) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF
   IF(config_flags%open_xs) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   END IF
   IF(config_flags%open_xe) THEN
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   END IF
   IF(config_flags%open_ys) THEN
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   END IF
   IF(config_flags%open_ye) THEN
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF
   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start, i_end
   Tmpv001 =(mub(i,j) +mu_old(i,j))*field_old(i,k,j)
   Tmpv002 =fqxl(i+1,k,j) -fqxl(i,k,j)
   Tmpv003 =rdx*Tmpv002
   Tmpv004 =fqyl(i,k,j+1) -fqyl(i,k,j)
   Tmpv005 =rdy*Tmpv004
   Tmpv006 =Tmpv003 +Tmpv005
   Tmpv007 =msftx(i,j)*msfty(i,j)*Tmpv006
   Tmpv008 =fqzl(i,k+1,j) -fqzl(i,k,j)
   Tmpv009 =msfty(i,j)*rdzw(k)*Tmpv008
   Tmpv010 =Tmpv007 +Tmpv009
   Tmpv011 =dt*Tmpv010
   Tmpv012 =Tmpv001 -Tmpv011
   ph_low =Tmpv012
   Tmpv400(i,k,j) =ph_low

   Tmpv001 =max(0., fqx(i+1,k,j)) -min(0., fqx(i,k,j))
   Tmpv002 =rdx*Tmpv001
   Tmpv003 =max(0., fqy(i,k,j+1)) -min(0., fqy(i,k,j))
   Tmpv004 =rdy*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =(msftx(i,j)*msfty(i,j))*Tmpv005
   Tmpv007 =min(0., fqz(i,k+1,j)) -max(0., fqz(i,k,j))
   Tmpv008 =msfty(i,j)*rdzw(k)*Tmpv007
   Tmpv009 =Tmpv006 +Tmpv008
   Tmpv010 =dt*Tmpv009
   flux_out =Tmpv010
   Tmpv401(i,k,j) =flux_out

   Tmpv404(i,k,j) =fqx(i+1,k,j)
   Tmpv405(i,k,j) =fqx(i,k,j)
   Tmpv406(i,k,j) =fqy(i,k,j+1)
   Tmpv407(i,k,j) =fqy(i,k,j)
   Tmpv408(i,k,j) =fqz(i,k+1,j)
   Tmpv409(i,k,j) =fqz(i,k,j)

   IF( flux_out .gt. ph_low ) THEN

   Tmpv001 =ph_low/(flux_out +eps)
   Tmpv402(i,k,j) =Tmpv001

   scale =max(0., Tmpv402(i,k,j))
   Tmpv403(i,k,j) =scale
   IF( fqx (i+1,k,j) .gt. 0.) THEN
   Tmpv001 =scale*fqx(i+1,k,j)
   fqx(i+1,k,j) =Tmpv001
   END IF

   IF( fqx (i  ,k,j) .lt. 0.) THEN
   Tmpv001 =scale*fqx(i,k,j)
   fqx(i,k,j) =Tmpv001
   END IF

   IF( fqy (i,k,j+1) .gt. 0.) THEN
   Tmpv001 =scale*fqy(i,k,j+1)
   fqy(i,k,j+1) =Tmpv001
   END IF

   IF( fqy (i,k,j  ) .lt. 0.) THEN
   Tmpv001 =scale*fqy(i,k,j)
   fqy(i,k,j) =Tmpv001
   END IF

   IF( fqz (i,k+1,j) .lt. 0.) THEN
   Tmpv001 =scale*fqz(i,k+1,j)
   fqz(i,k+1,j) =Tmpv001
   END IF

   IF( fqz (i,k  ,j) .gt. 0.) THEN
   Tmpv001 =scale*fqz(i,k,j)
   fqz(i,k,j) =Tmpv001
   END IF
   END IF
   ENDDO
   ENDDO
   ENDDO
   END IF

   IF(pd_limit) THEN
   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1
   IF(degrade_xs) THEN
   i_start =max(its-1, ids)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-1)
   END IF
   IF(config_flags%specified .or. config_flags%nested) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF
   IF(config_flags%open_xs) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   END IF
   IF(config_flags%open_xe) THEN
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   END IF
   IF(config_flags%open_ys) THEN
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   END IF
   IF(config_flags%open_ye) THEN
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1

   flux_out =Tmpv401(i,k,j)
   ph_low =Tmpv400(i,k,j)

   fqx(i+1,k,j) =Tmpv404(i,k,j)
   fqx(i,k,j) =Tmpv405(i,k,j)
   fqy(i,k,j+1) =Tmpv406(i,k,j)
   fqy(i,k,j) =Tmpv407(i,k,j)
   fqz(i,k+1,j) =Tmpv408(i,k,j)
   fqz(i,k,j) =Tmpv409(i,k,j)

   IF( flux_out .gt. ph_low ) THEN

   scale =Tmpv403(i,k,j)

   IF( fqx (i+1,k,j) .gt. 0.) THEN

   a_Tmpv1 =a_fqx(i+1,k,j)
   a_fqx(i+1,k,j) =0.0
   a_scale =a_scale +fqx(i+1,k,j)*a_Tmpv1
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +scale*a_Tmpv1

   END IF

   IF( fqx (i  ,k,j) .lt. 0.) THEN

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_scale =a_scale +fqx(i,k,j)*a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) +scale*a_Tmpv1

   END IF

   IF( fqy (i,k,j+1) .gt. 0.) THEN

   a_Tmpv1 =a_fqy(i,k,j+1)
   a_fqy(i,k,j+1) =0.0
   a_scale =a_scale +fqy(i,k,j+1)*a_Tmpv1
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +scale*a_Tmpv1

   END IF

   IF( fqy (i,k,j  ) .lt. 0.) THEN

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_scale =a_scale +fqy(i,k,j)*a_Tmpv1
   a_fqy(i,k,j) =a_fqy(i,k,j) +scale*a_Tmpv1

   END IF

   IF( fqz (i,k+1,j) .lt. 0.) THEN

   a_Tmpv1 =a_fqz(i,k+1,j)
   a_fqz(i,k+1,j) =0.0
   a_scale =a_scale +fqz(i,k+1,j)*a_Tmpv1
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +scale*a_Tmpv1

   END IF

   IF( fqz (i,k  ,j) .gt. 0.) THEN

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_scale =a_scale +fqz(i,k,j)*a_Tmpv1
   a_fqz(i,k,j) =a_fqz(i,k,j) +scale*a_Tmpv1

   END IF

   a_Tmpv1=(1.0 +(-1.0)*sign(1.0, 0. -Tmpv402(i,k,j)))*0.5*a_scale
   a_scale =0.0
   a_ph_low =a_ph_low +a_Tmpv1/(flux_out +eps)
   a_flux_out =a_flux_out -ph_low/((flux_out +eps)*(flux_out +eps))*a_Tmpv1

   END IF

   a_Tmpv10 =a_flux_out
   a_flux_out =0.0
   a_Tmpv9 =dt*a_Tmpv10
   a_Tmpv6 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_Tmpv7 =msfty(i,j)*rdzw(k)*a_Tmpv8
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +(1.0 -(-1.0)*sign(1.0, 0. -fqz(i,k+1,j)))*0.5*a_Tmpv7
   a_fqz(i,k,j) =a_fqz(i,k,j) -(1.0 +(-1.0)*sign(1.0, 0. -fqz(i,k,j)))*0.5*a_Tmpv7
   a_Tmpv5 =(msftx(i,j)*msfty(i,j))*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =rdy*a_Tmpv4
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +(1.0 +(-1.0)*sign(1.0, 0. -fqy(i,k,j+1)))*0.5*a_Tmpv3
   a_fqy(i,k,j) =a_fqy(i,k,j) -(1.0 -(-1.0)*sign(1.0, 0. -fqy(i,k,j)))*0.5*a_Tmpv3
   a_Tmpv1 =rdx*a_Tmpv2
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +(1.0 +(-1.0)*sign(1.0, 0. -fqx(i+1,k,j)))*0.5*a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) -(1.0 -(-1.0)*sign(1.0, 0. -fqx(i,k,j)))*0.5*a_Tmpv1

!  ph_low =Tmpv400(i,k,j)

   a_Tmpv12 =a_ph_low
   a_ph_low =0.0
   a_Tmpv1 =a_Tmpv12
   a_Tmpv11 =-a_Tmpv12
   a_Tmpv10 =dt*a_Tmpv11
   a_Tmpv7 =a_Tmpv10
   a_Tmpv9 =a_Tmpv10
   a_Tmpv8 =msfty(i,j)*rdzw(k)*a_Tmpv9
   a_fqzl(i,k+1,j) =a_fqzl(i,k+1,j) +a_Tmpv8
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv8
   a_Tmpv6 =msftx(i,j)*msfty(i,j)*a_Tmpv7
   a_Tmpv3 =a_Tmpv6
   a_Tmpv5 =a_Tmpv6
   a_Tmpv4 =rdy*a_Tmpv5
   a_fqyl(i,k,j+1) =a_fqyl(i,k,j+1) +a_Tmpv4
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv4
   a_Tmpv2 =rdx*a_Tmpv3
   a_fqxl(i+1,k,j) =a_fqxl(i+1,k,j) +a_Tmpv2
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv2
   a_mu_old(i,j) =a_mu_old(i,j) +field_old(i,k,j)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +(mub(i,j) +mu_old(i,j))*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   IF(config_flags%open_ye) THEN

   IF(degrade_ye) THEN

   END IF

   END IF

   IF(config_flags%open_ys) THEN

   IF(degrade_ys) THEN

   END IF

   END IF

   IF(config_flags%open_xe) THEN

   IF(degrade_xe) THEN

   END IF

   END IF

   IF(config_flags%open_xs) THEN

   IF(degrade_xs) THEN

   END IF

   END IF

   IF(config_flags%specified .or. config_flags%nested) THEN

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   END IF

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   END IF

!LPB[25]
!FROM LPB[16]
   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1

   IF(degrade_xs) i_start = MAX(its-1,ids)
   IF(degrade_xe) i_end   = MIN(ite+1,ide-1)
   IF(degrade_ys) j_start = MAX(jts-1,jds)
   IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

   mu =Keep_Lpb25_mu
   vel =Keep_Lpb25_vel
   cr =Keep_Lpb25_cr

   IF(vert_order == 6) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.

   fqzl(i,1,j) =0.

   fqz(i,kde,j) =0.

   fqzl(i,kde,j) =0.

   ENDDO

   DO k =kts+3, ktf-2
   DO i =i_start, i_end
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv400(i,k,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv401(i,k,j) =mu

   vel =rom(i,k,j)
   Tmpv402(i,k,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv403(i,k,j) =Tmpv001
   Tmpv002 =Tmpv403(i,k,j)/mu
   cr =Tmpv002
   Tmpv404(i,k,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv405(i,k,j) =Tmpv001
   Tmpv406(i,k,j) =Tmpv002
   Tmpv003 =Tmpv405(i,k,j)*Tmpv406(i,k,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux6(field(i,k-3,j),field(i,k-2,j),field(i,k-1,j),field(i,k,j)  &
   ,field(i,k+1,j),field(i,k+2,j),-vel)
   Tmpv407(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv407(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   DO i =i_start, i_end
   k =kts+1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv300(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv301(i,j) =mu

   vel =rom(i,k,j)
   Tmpv302(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv303(i,j) =Tmpv001
   Tmpv002 =Tmpv303(i,j)/mu
   cr =Tmpv002
   Tmpv304(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv305(i,j) =Tmpv001
   Tmpv306(i,j) =Tmpv002
   Tmpv003 =Tmpv305(i,j)*Tmpv306(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv307(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv307(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =kts+2
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv308(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv309(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3010(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3011(i,j) =Tmpv001
   Tmpv002 =Tmpv3011(i,j)/mu
   cr =Tmpv002
   Tmpv3012(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3013(i,j) =Tmpv001
   Tmpv3014(i,j) =Tmpv002
   Tmpv003 =Tmpv3013(i,j)*Tmpv3014(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv3015(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv3015(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf-1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3016(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3017(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3018(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3019(i,j) =Tmpv001
   Tmpv002 =Tmpv3019(i,j)/mu
   cr =Tmpv002
   Tmpv3020(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3021(i,j) =Tmpv001
   Tmpv3022(i,j) =Tmpv002
   Tmpv003 =Tmpv3021(i,j)*Tmpv3022(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv3023(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv3023(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3024(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3025(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3026(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3027(i,j) =Tmpv001
   Tmpv002 =Tmpv3027(i,j)/mu
   cr =Tmpv002
   Tmpv3028(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3029(i,j) =Tmpv001
   Tmpv3030(i,j) =Tmpv002
   Tmpv003 =Tmpv3029(i,j)*Tmpv3030(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3031(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3031(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF(vert_order == 5) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.

   fqzl(i,1,j) =0.

   fqz(i,kde,j) =0.

   fqzl(i,kde,j) =0.

   ENDDO

   DO k =kts+3, ktf-2
   DO i =i_start, i_end
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv408(i,k,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv409(i,k,j) =mu

   vel =rom(i,k,j)
   Tmpv4010(i,k,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv4011(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4011(i,k,j)/mu
   cr =Tmpv002
   Tmpv4012(i,k,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv4013(i,k,j) =Tmpv001
   Tmpv4014(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4013(i,k,j)*Tmpv4014(i,k,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux5(field(i,k-3,j),field(i,k-2,j),field(i,k-1,j),field(i,k,j)  &
   ,field(i,k+1,j),field(i,k+2,j),-vel)
   Tmpv4015(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4015(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   DO i =i_start, i_end
   k =kts+1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3032(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3033(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3034(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3035(i,j) =Tmpv001
   Tmpv002 =Tmpv3035(i,j)/mu
   cr =Tmpv002
   Tmpv3036(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3037(i,j) =Tmpv001
   Tmpv3038(i,j) =Tmpv002
   Tmpv003 =Tmpv3037(i,j)*Tmpv3038(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3039(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3039(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =kts+2
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3040(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3041(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3042(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3043(i,j) =Tmpv001
   Tmpv002 =Tmpv3043(i,j)/mu
   cr =Tmpv002
   Tmpv3044(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3045(i,j) =Tmpv001
   Tmpv3046(i,j) =Tmpv002
   Tmpv003 =Tmpv3045(i,j)*Tmpv3046(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv3047(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv3047(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf-1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3048(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3049(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3050(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3051(i,j) =Tmpv001
   Tmpv002 =Tmpv3051(i,j)/mu
   cr =Tmpv002
   Tmpv3052(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3053(i,j) =Tmpv001
   Tmpv3054(i,j) =Tmpv002
   Tmpv003 =Tmpv3053(i,j)*Tmpv3054(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv3055(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv3055(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3056(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3057(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3058(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3059(i,j) =Tmpv001
   Tmpv002 =Tmpv3059(i,j)/mu
   cr =Tmpv002
   Tmpv3060(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3061(i,j) =Tmpv001
   Tmpv3062(i,j) =Tmpv002
   Tmpv003 =Tmpv3061(i,j)*Tmpv3062(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3063(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3063(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF(vert_order == 4) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.

   fqzl(i,1,j) =0.

   fqz(i,kde,j) =0.

   fqzl(i,kde,j) =0.

   ENDDO

   DO k =kts+2, ktf-1
   DO i =i_start, i_end
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv4016(i,k,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv4017(i,k,j) =mu

   vel =rom(i,k,j)
   Tmpv4018(i,k,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv4019(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4019(i,k,j)/mu
   cr =Tmpv002
   Tmpv4020(i,k,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv4021(i,k,j) =Tmpv001
   Tmpv4022(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4021(i,k,j)*Tmpv4022(i,k,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv4023(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4023(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   DO i =i_start, i_end
   k =kts+1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3064(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3065(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3066(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3067(i,j) =Tmpv001
   Tmpv002 =Tmpv3067(i,j)/mu
   cr =Tmpv002
   Tmpv3068(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3069(i,j) =Tmpv001
   Tmpv3070(i,j) =Tmpv002
   Tmpv003 =Tmpv3069(i,j)*Tmpv3070(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3071(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3071(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3072(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3073(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3074(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3075(i,j) =Tmpv001
   Tmpv002 =Tmpv3075(i,j)/mu
   cr =Tmpv002
   Tmpv3076(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3077(i,j) =Tmpv001
   Tmpv3078(i,j) =Tmpv002
   Tmpv003 =Tmpv3077(i,j)*Tmpv3078(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3079(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3079(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF(vert_order == 3) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.

   fqzl(i,1,j) =0.

   fqz(i,kde,j) =0.

   fqzl(i,kde,j) =0.

   ENDDO

   DO k =kts+2, ktf-1
   DO i =i_start, i_end
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv4024(i,k,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv4025(i,k,j) =mu

   vel =rom(i,k,j)
   Tmpv4026(i,k,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv4027(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4027(i,k,j)/mu
   cr =Tmpv002
   Tmpv4028(i,k,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv4029(i,k,j) =Tmpv001
   Tmpv4030(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4029(i,k,j)*Tmpv4030(i,k,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv4031(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4031(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   DO i =i_start, i_end
   k =kts+1
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3080(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3081(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3082(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3083(i,j) =Tmpv001
   Tmpv002 =Tmpv3083(i,j)/mu
   cr =Tmpv002
   Tmpv3084(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3085(i,j) =Tmpv001
   Tmpv3086(i,j) =Tmpv002
   Tmpv003 =Tmpv3085(i,j)*Tmpv3086(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3087(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3087(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   k =ktf
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv3088(i,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv3089(i,j) =mu

   vel =rom(i,k,j)
   Tmpv3090(i,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv3091(i,j) =Tmpv001
   Tmpv002 =Tmpv3091(i,j)/mu
   cr =Tmpv002
   Tmpv3092(i,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv3093(i,j) =Tmpv001
   Tmpv3094(i,j) =Tmpv002
   Tmpv003 =Tmpv3093(i,j)*Tmpv3094(i,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv3095(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv3095(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.

   fqzl(i,1,j) =0.

   fqz(i,kde,j) =0.

   fqzl(i,kde,j) =0.

   ENDDO

   DO k =kts+1, ktf
   DO i =i_start, i_end
   dz =2./(rdzw(k)+rdzw(k-1))
   Tmpv4032(i,k,j) =dz

   mu =0.5*(mut(i,j) +mut(i,j))
   Tmpv4033(i,k,j) =mu

   vel =rom(i,k,j)
   Tmpv4034(i,k,j) =vel

   Tmpv001 =vel*dt/dz
   Tmpv4035(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4035(i,k,j)/mu
   cr =Tmpv002
   Tmpv4036(i,k,j) =cr

   Tmpv001 =mu*(dz/dt)
   Tmpv002 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv4037(i,k,j) =Tmpv001
   Tmpv4038(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4037(i,k,j)*Tmpv4038(i,k,j)
   fqzl(i,k,j) =Tmpv003

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv4039(i,k,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv4039(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDDO
   ELSE
   CALL wrf_error_fatal(wrf_err_message)

   ENDIF

   IF(vert_order == 6) THEN

   DO j =j_end, j_start, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   k =ktf
   mu =Tmpv3025(i,j)
   cr =Tmpv3028(i,j)
   vel =Tmpv3026(i,j)
   dz =Tmpv3024(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3031(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3030(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3029(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3027(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED AND REVISED BY WALLS
   k =ktf-1
   cr =Tmpv3020(i,j)
   vel =Tmpv3018(i,j)
   mu =Tmpv3017(i,j)
   dz =Tmpv3016(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv3023(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3022(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3021(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3019(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED AND REVISED BY WALLS
   k =kts+2
   cr =Tmpv3012(i,j)
   vel =Tmpv3010(i,j)
   mu =Tmpv309(i,j)
   dz =Tmpv308(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv3015(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3014(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3013(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3011(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED AND REVISED BY WALLS
   k =kts+1
   cr =Tmpv304(i,j)
   vel =Tmpv302(i,j)
   mu =Tmpv301(i,j)
   dz =Tmpv300(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv307(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv306(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv305(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv303(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0
   ENDDO
   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv404(i,k,j)
   vel =Tmpv402(i,k,j)
   mu =Tmpv401(i,k,j)
   dz =Tmpv400(i,k,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv407(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+2,j) =a_field(i,k+2,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,j)  &
   ,0.0,field(i,k-1,j),0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux6(field(i,k-3,j),0.0,field(i,k-2,  &
   j),1.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-3,j) =a_field(i,k-3,j) +Diff_flux6(field(i,k-3,j),1.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv406(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv405(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv403(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE IF(vert_order == 5) THEN

   DO j =j_end, j_start, -1
   DO i =i_end, i_start, -1
!ADDED BY WALLS
   k =ktf
   cr =Tmpv3060(i,j)
   vel =Tmpv3058(i,j)
   mu =Tmpv3057(i,j)
   dz =Tmpv3056(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3063(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3062(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3061(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3059(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED BY WALLS
   k =ktf-1
   cr =Tmpv3052(i,j)
   vel =Tmpv3050(i,j)
   mu =Tmpv3049(i,j)
   dz =Tmpv3048(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv3055(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3054(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3053(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3051(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED BY WALLS
   k =kts+2
   cr =Tmpv3044(i,j)
   vel =Tmpv3042(i,j)
   mu =Tmpv3041(i,j)
   dz =Tmpv3040(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv3047(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3046(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3045(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3043(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0

!ADDED BY WALLS
   k =kts+1
   cr =Tmpv3036(i,j)
   vel =Tmpv3034(i,j)
   dz =Tmpv3032(i,j)
   mu =Tmpv3033(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3039(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3038(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3037(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3035(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0
   ENDDO
   DO k =ktf-2, kts+3, -1
   DO i =i_end, i_start, -1
!REVISED AND ADDED BY WALLS
   cr =Tmpv4012(i,k,j)
   vel =Tmpv4010(i,k,j)
   mu =Tmpv409(i,k,j)
   dz =Tmpv408(i,k,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv4015(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+2,j) =a_field(i,k+2,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,j)  &
   ,0.0,field(i,k-1,j),0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux5(field(i,k-3,j),0.0,field(i,k-2,  &
   j),1.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-3,j) =a_field(i,k-3,j) +Diff_flux5(field(i,k-3,j),1.0,field(i,k-2,  &
   j),0.0,field(i,k-1,j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,field(i,k+2,j)  &
   ,0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4014(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4013(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4011(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE IF(vert_order == 4) THEN

   DO j =j_end, j_start, -1
   DO i =i_end, i_start, -1
!ADDED BY WALLS
   k =ktf
   cr =Tmpv3076(i,j)
   vel =Tmpv3074(i,j)
   mu =Tmpv3073(i,j)
   dz =Tmpv3072(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3079(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3078(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3077(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv3076(i,j)
!  vel =Tmpv3074(i,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3075(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv3073(i,j)

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

!  dz =Tmpv3072(i,j)

   a_dz =0.0

!ADDED BY WALLS
   k =kts+1
   cr =Tmpv3068(i,j)
   vel =Tmpv3066(i,j)
   mu =Tmpv3065(i,j)
   dz =Tmpv3064(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3071(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3070(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3069(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv3068(i,j)
!  vel =Tmpv3066(i,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3067(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv3065(i,j)

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

!  dz =Tmpv3064(i,j)

   a_dz =0.0
   ENDDO
   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
!ADDED BY WALLS
   cr =Tmpv4020(i,k,j)
   vel =Tmpv4018(i,k,j)
   mu =Tmpv4017(i,k,j)
   dz =Tmpv4016(i,k,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv4023(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux4(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux4(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4022(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4021(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv4020(i,k,j)
!  vel =Tmpv4018(i,k,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4019(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv4017(i,k,j)

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

!  dz =Tmpv4016(i,k,j)

   a_dz =0.0
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE IF(vert_order == 3) THEN

!ALL RECALCULATED SCALAR IN THE FOLLOWING ARE REVISED BY WALLS
   DO j =j_end, j_start, -1

   DO i =i_end, i_start, -1
   cr =Tmpv3092(i,j)
   vel =Tmpv3090(i,j)
   mu =Tmpv3089(i,j)
   dz =Tmpv3088(i,j)

   k =ktf

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3095(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3094(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3093(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3091(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   mu =Tmpv3081(i,j)
   cr =Tmpv3084(i,j)

   a_dz =0.0

   k =kts+1
   dz =Tmpv3080(i,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv3087(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3086(i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3085(i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

   vel =Tmpv3082(i,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3083(i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

   a_dz =0.0
   ENDDO

   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
   mu =Tmpv4025(i,k,j)
   dz =Tmpv4024(i,k,j)
   cr =Tmpv4028(i,k,j)
   vel =Tmpv4026(i,k,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_vel =a_vel +Tmpv4031(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4030(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4029(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv4028(i,k,j)
!  vel =Tmpv4026(i,k,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4027(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv4025(i,k,j)

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

!  dz =Tmpv4024(i,k,j)

   a_dz =0.0
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE IF(vert_order == 2) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1
   cr =Tmpv4036(i,k,j)
   vel=Tmpv4034(i,k,j)
   mu =Tmpv4033(i,k,j)
   dz =Tmpv4032(i,k,j)

   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv4039(i,k,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv3 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4038(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4037(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dz/dt)*a_Tmpv1
   a_dz =a_dz +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv4036(i,k,j)
!  vel =Tmpv4034(i,k,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4035(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dz*a_Tmpv1
   a_dz =a_dz -vel*dt/(dz*dz)*a_Tmpv1

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv4033(i,k,j)

   a_mut(i,j) =a_mut(i,j) +0.5*(1.0 +1.0)*a_mu
   a_mu =0.0

!  dz =Tmpv4032(i,k,j)

   a_dz =0.0
   ENDDO
   ENDDO

   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE

!DELETED BY WALLS
!  CALL a_wrf_error_fatal(wrf_err_message)

   ENDIF

!LPB[15]
!FROM LPB[4]
      i_start = its
      i_end   = MIN(ite,ide-1)
      j_start = jts
      j_end   = MIN(jte,jde-1)

   vb =Keep_Lpb15_vb

   IF( (config_flags%polar) .and. (jte == jde)) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   vb =max(0.5*rv(i,k,jte-1), 0.)
   Tmpv300(k,i) =vb

   Tmpv001 =field_old(i,k,j_end) -field_old(i,k,j_end-1)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =field(i,k,j_end)*(-rv(i,k,jte-1))
   Tmpv004 =Tmpv002 +Tmpv003
   Tmpv005 =rdy*Tmpv004
   Tmpv006 =tendency(i,k,j_end) -Tmpv005
   tendency(i,k,j_end) =Tmpv006

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%polar) .and. (jte == jde)) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
!ADDED BY WALLS
   vb =Tmpv300(k,i)

   a_Tmpv6 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv6
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =rdy*a_Tmpv5
   a_Tmpv2 =a_Tmpv4
   a_Tmpv3 =a_Tmpv4
   a_field(i,k,j_end) =a_field(i,k,j_end) +(-rv(i,k,jte-1))*a_Tmpv3
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) -1.0*field(i,k,j_end)*a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,j_end) =a_field_old(i,k,j_end) +a_Tmpv1
   a_field_old(i,k,j_end-1) =a_field_old(i,k,j_end-1) -a_Tmpv1

   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) +(0.5 +(0.5)*sign(1.0, 0.5*rv(i,k,jte-1) -0.)  &
   )*0.5*a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ENDIF

!LPB[14]

!LPB[13]
   vb =Keep_Lpb13_vb

   IF( (config_flags%polar) .and. (jts == jds) ) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   vb =min(0.5*rv(i,k,jts+1), 0.)
   Tmpv300(k,i) =vb

   Tmpv001 =field_old(i,k,jts+1) -field_old(i,k,jts)
   Tmpv301(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv301(k,i)
   Tmpv003 =field(i,k,jts)*rv(i,k,jts+1)
   Tmpv004 =Tmpv002 +Tmpv003
   Tmpv005 =rdy*Tmpv004
   Tmpv006 =tendency(i,k,jts) -Tmpv005
!  tendency(i,k,jts) =Tmpv006

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%polar) .and. (jts == jds) ) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv300(k,i)

   a_Tmpv6 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv6
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =rdy*a_Tmpv5
   a_Tmpv2 =a_Tmpv4
   a_Tmpv3 =a_Tmpv4
   a_field(i,k,jts) =a_field(i,k,jts) +rv(i,k,jts+1)*a_Tmpv3
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +field(i,k,jts)*a_Tmpv3
   a_vb =a_vb +Tmpv301(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,jts+1) =a_field_old(i,k,jts+1) +a_Tmpv1
   a_field_old(i,k,jts) =a_field_old(i,k,jts) -a_Tmpv1

   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +(0.5 -(0.5)*sign(1.0, 0.5*rv(i,k,jts+1) -0.)  &
   )*0.5*a_vb
   a_vb =0.0
   ENDDO
   ENDDO

   ENDIF

!LPB[12]

!LPB[11]
   vb =Keep_Lpb11_vb

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jte-1) +rv(i,k,jte)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,i) =Tmpv002
   vb =max(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =field_old(i,k,j_end) -field_old(i,k,j_end-1)
   Tmpv302(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv302(k,i)
   Tmpv003 =rv(i,k,jte) -rv(i,k,jte-1)
   Tmpv303(k,i) =Tmpv003
   Tmpv004 =field(i,k,j_end)*Tmpv303(k,i)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdy*Tmpv005
   Tmpv007 =tendency(i,k,j_end) -Tmpv006
!  tendency(i,k,j_end) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)

   a_Tmpv7 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,j_end) =a_field(i,k,j_end) +Tmpv303(k,i)*a_Tmpv4
   a_Tmpv3 =field(i,k,j_end)*a_Tmpv4
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv3
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) -a_Tmpv3
   a_vb =a_vb +Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,j_end) =a_field_old(i,k,j_end) +a_Tmpv1
   a_field_old(i,k,j_end-1) =a_field_old(i,k,j_end-1) -a_Tmpv1

   a_Tmpv2=(1.0 +(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) +a_Tmpv1
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[10]

!LPB[9]

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jts) +rv(i,k,jts+1)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,i) =Tmpv002
   vb =min(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =field_old(i,k,jts+1) -field_old(i,k,jts)
   Tmpv302(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv302(k,i)
   Tmpv003 =rv(i,k,jts+1) -rv(i,k,jts)
   Tmpv303(k,i) =Tmpv003
   Tmpv004 =field(i,k,jts)*Tmpv303(k,i)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdy*Tmpv005
   Tmpv007 =tendency(i,k,jts) -Tmpv006
!  tendency(i,k,jts) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)

   a_Tmpv7 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,jts) =a_field(i,k,jts) +Tmpv303(k,i)*a_Tmpv4
   a_Tmpv3 =field(i,k,jts)*a_Tmpv4
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv3
   a_rv(i,k,jts) =a_rv(i,k,jts) -a_Tmpv3
   a_vb =a_vb +Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,jts+1) =a_field_old(i,k,jts+1) +a_Tmpv1
   a_field_old(i,k,jts) =a_field_old(i,k,jts) -a_Tmpv1

   a_Tmpv2=(1.0 -(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jts) =a_rv(i,k,jts) +a_Tmpv1
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[8]

!LPB[7]
   ub =Keep_Lpb7_ub

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(ite-1,k,j) +ru(ite,k,j)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,j) =Tmpv002
   ub =max(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =field_old(i_end,k,j) -field_old(i_end-1,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv302(k,j)
   Tmpv003 =ru(ite,k,j) -ru(ite-1,k,j)
   Tmpv303(k,j) =Tmpv003
   Tmpv004 =field(i_end,k,j)*Tmpv303(k,j)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdx*Tmpv005
   Tmpv007 =tendency(i_end,k,j) -Tmpv006
!  tendency(i_end,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)

   a_Tmpv7 =a_tendency(i_end,k,j)
   a_tendency(i_end,k,j) =0.0
   a_tendency(i_end,k,j) =a_tendency(i_end,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i_end,k,j) =a_field(i_end,k,j) +Tmpv303(k,j)*a_Tmpv4
   a_Tmpv3 =field(i_end,k,j)*a_Tmpv4
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv3
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(i_end,k,j) =a_field_old(i_end,k,j) +a_Tmpv1
   a_field_old(i_end-1,k,j) =a_field_old(i_end-1,k,j) -a_Tmpv1

   a_Tmpv2=(1.0 +(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) +a_Tmpv1
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[6]

!LPB[5]
   IF( (config_flags%open_xs) .and. (its == ids) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(its,k,j) +ru(its+1,k,j)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,j) =Tmpv002
   ub =min(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =field_old(its+1,k,j) -field_old(its,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv302(k,j)
   Tmpv003 =ru(its+1,k,j) -ru(its,k,j)
   Tmpv303(k,j) =Tmpv003
   Tmpv004 =field(its,k,j)*Tmpv303(k,j)
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =rdx*Tmpv005
   Tmpv007 =tendency(its,k,j) -Tmpv006
!  tendency(its,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xs) .and. (its == ids) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)

   a_Tmpv7 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(its,k,j) =a_field(its,k,j) +Tmpv303(k,j)*a_Tmpv4
   a_Tmpv3 =field(its,k,j)*a_Tmpv4
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv3
   a_ru(its,k,j) =a_ru(its,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(its+1,k,j) =a_field_old(its+1,k,j) +a_Tmpv1
   a_field_old(its,k,j) =a_field_old(its,k,j) -a_Tmpv1

   a_Tmpv2=(1.0 -(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(its,k,j) =a_ru(its,k,j) +a_Tmpv1
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[3]
   cr =Keep_Lpb3_cr

!ADDED BY WALLS
    IF (config_flags%polar) THEN

          fqx(:,:,:)  = 0.
          fqy(:,:,:)  = 0.
          fqz(:,:,:)  = 0.
          fqxl(:,:,:) = 0.
          fqyl(:,:,:) = 0.
          fqzl(:,:,:) = 0.

   END IF

     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

     degrade_xs = .true.
     degrade_xe = .true.
     degrade_ys = .true.
     degrade_ye = .true.

   IF( horz_order == 6 ) THEN
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xs .or.  	       (its > ids+3)                ) THEN
   degrade_xs =.false.
   END IF
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xe .or.  	       (ite < ide-4)                ) THEN
   degrade_xe =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ys .or.  	       (jts > jds+3)                ) THEN
   degrade_ys =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ye .or.  	       (jte < jde-4)                ) THEN
   degrade_ye =.false.
   END IF
   ktf =min(kte, kde-1)
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_xs) THEN
   i_start =max(its-1, ids)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   j_start_f =jds+3
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   j_end_f =jde-3
   ENDIF
   DO j =j_start, j_end+1
   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv400(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv401(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv402(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv403(i,k,j) =Tmpv001
   Tmpv002 =Tmpv403(i,k,j)/mu
   cr =Tmpv002
   Tmpv404(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv405(i,k,j) =Tmpv001
   Tmpv406(i,k,j) =Tmpv002
   Tmpv003 =Tmpv405(i,k,j)*Tmpv406(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux6(field(i,k,j-3),field(i,k,j-2),field(i,k,j-1),field(i,k,j)  &
   ,field(i,k,j+1),field(i,k,j+2),vel)
   Tmpv407(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv407(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv408(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv409(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4010(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4011(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4011(i,k,j)/mu
   cr =Tmpv002
   Tmpv4012(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4013(i,k,j) =Tmpv001
   Tmpv4014(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4013(i,k,j)*Tmpv4014(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv4015(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv4015(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4016(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4017(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4018(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4019(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4019(i,k,j)/mu
   cr =Tmpv002
   Tmpv4020(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4021(i,k,j) =Tmpv001
   Tmpv4022(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4021(i,k,j)*Tmpv4022(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv4023(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4023(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4024(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4025(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4026(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4027(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4027(i,k,j)/mu
   cr =Tmpv002
   Tmpv4028(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4029(i,k,j) =Tmpv001
   Tmpv4030(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4029(i,k,j)*Tmpv4030(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv4031(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv4031(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4032(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4033(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4034(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4035(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4035(i,k,j)/mu
   cr =Tmpv002
   Tmpv4036(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4037(i,k,j) =Tmpv001
   Tmpv4038(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4037(i,k,j)*Tmpv4038(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv4039(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4039(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDIF
   ENDDO

   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   i_start_f =i_start
   i_end_f =i_end+1
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-1)
   END IF
   IF(degrade_xs) THEN
   i_start =max(ids+1, its-1)
   i_start_f =ids+3
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-2, ite+1)
   i_end_f =ide-3
   ENDIF
   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start_f, i_end_f
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv4040(i,k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4041(i,k,j) =mu

   vel =ru(i,k,j)
   Tmpv4042(i,k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv4043(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4043(i,k,j)/mu
   cr =Tmpv002
   Tmpv4044(i,k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4045(i,k,j) =Tmpv001
   Tmpv4046(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4045(i,k,j)*Tmpv4046(i,k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux6(field(i-3,k,j),field(i-2,k,j),field(i-1,k,j),field(i,k,j)  &
   ,field(i+1,k,j),field(i+2,k,j),vel)
   Tmpv4047(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4047(i,k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   IF( degrade_xs ) THEN

   DO i =i_start, i_start_f-1
   IF(i == ids+1) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv4048(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4049(k,i,j) =mu

   Tmpv001 =ru(i,k,j)/mu
   vel =Tmpv001
   Tmpv4050(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   cr =Tmpv001
   Tmpv4051(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4052(k,i,j) =Tmpv001
   Tmpv4053(k,i,j) =Tmpv002
   Tmpv003 =Tmpv4052(k,i,j)*Tmpv4053(k,i,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv4054(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv4054(k,i,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   IF(i == ids+2) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv4055(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4056(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv4057(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv4058(k,i,j) =Tmpv001
   Tmpv002 =Tmpv4058(k,i,j)/mu
   cr =Tmpv002
   Tmpv4059(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4060(k,i,j) =Tmpv001
   Tmpv4061(k,i,j) =Tmpv002
   Tmpv003 =Tmpv4060(k,i,j)*Tmpv4061(k,i,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv4062(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4062(k,i,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDDO
   ENDIF
   IF( degrade_xe ) THEN

   DO i =i_end_f+1, i_end+1
   IF( i == ide-1 ) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv4063(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4064(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv4065(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv4066(k,i,j) =Tmpv001
   Tmpv002 =Tmpv4066(k,i,j)/mu
   cr =Tmpv002
   Tmpv4067(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4068(k,i,j) =Tmpv001
   Tmpv4069(k,i,j) =Tmpv002
   Tmpv003 =Tmpv4068(k,i,j)*Tmpv4069(k,i,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv4070(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv4070(k,i,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   IF( i == ide-2 ) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv4071(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4072(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv4073(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv4074(k,i,j) =Tmpv001
   Tmpv002 =Tmpv4074(k,i,j)/mu
   cr =Tmpv002
   Tmpv4075(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4076(k,i,j) =Tmpv001
   Tmpv4077(k,i,j) =Tmpv002
   Tmpv003 =Tmpv4076(k,i,j)*Tmpv4077(k,i,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv4078(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4078(k,i,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDDO
   ENDIF
   ENDDO

   ELSE IF( horz_order == 5 ) THEN
!ALL SCALARS IN THE FOLLOWING ARE REVISED BY WALLS
!ALL SCALARS IN THE FOLLOWING ARE REVISED BY WALLS

   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xs .or.  	       (its > ids+3)                ) THEN
   degrade_xs =.false.
   END IF
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xe .or.  	       (ite < ide-4)                ) THEN
   degrade_xe =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ys .or.  	       (jts > jds+3)                ) THEN
   degrade_ys =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ye .or.  	       (jte < jde-4)                ) THEN
   degrade_ye =.false.
   END IF
   ktf =min(kte, kde-1)
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_xs) THEN
   i_start =max(its-1, ids)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   j_start_f =jds+3
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   j_end_f =jde-3
   ENDIF
   DO j =j_start, j_end+1
   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4079(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4080(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4081(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4082(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4082(i,k,j)/mu
   cr =Tmpv002
   Tmpv4083(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4084(i,k,j) =Tmpv001
   Tmpv4085(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4084(i,k,j)*Tmpv4085(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux5(field(i,k,j-3),field(i,k,j-2),field(i,k,j-1),field(i,k,j)  &
   ,field(i,k,j+1),field(i,k,j+2),vel)
   Tmpv4086(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4086(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4087(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4088(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4089(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4090(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4090(i,k,j)/mu
   cr =Tmpv002
   Tmpv4091(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4092(i,k,j) =Tmpv001
   Tmpv4093(i,k,j) =Tmpv002
   Tmpv003 =Tmpv4092(i,k,j)*Tmpv4093(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv4094(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv4094(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv4095(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv4096(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv4097(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv4098(i,k,j) =Tmpv001
   Tmpv002 =Tmpv4098(i,k,j)/mu
   cr =Tmpv002
   Tmpv4099(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40100(i,k,j) =Tmpv001
   Tmpv40101(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40100(i,k,j)*Tmpv40101(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv40102(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40102(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40103(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40104(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40105(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40106(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40106(i,k,j)/mu
   cr =Tmpv002
   Tmpv40107(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40108(i,k,j) =Tmpv001
   Tmpv40109(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40108(i,k,j)*Tmpv40109(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40110(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40110(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40111(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40112(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40113(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40114(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40114(i,k,j)/mu
   cr =Tmpv002
   Tmpv40115(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40116(i,k,j) =Tmpv001
   Tmpv40117(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40116(i,k,j)*Tmpv40117(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv40118(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40118(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDIF
   ENDDO

   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   i_start_f =i_start
   i_end_f =i_end+1
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-1)
   END IF
   IF(degrade_xs) THEN
   i_start =max(ids+1, its-1)
   i_start_f =ids+3
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-2, ite+1)
   i_end_f =ide-3
   ENDIF

   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start_f, i_end_f
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40119(i,k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40120(i,k,j) =mu

   vel =ru(i,k,j)
   Tmpv40121(i,k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40122(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40122(i,k,j)/mu
   cr =Tmpv002
   Tmpv40123(i,k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40124(i,k,j) =Tmpv001
   Tmpv40125(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40124(i,k,j)*Tmpv40125(i,k,j)
   fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux5(field(i-3,k,j),field(i-2,k,j),field(i-1,k,j),field(i,k,j)  &
   ,field(i+1,k,j),field(i+2,k,j),vel)
   Tmpv40126(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40126(i,k,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   IF( degrade_xs ) THEN

   DO i =i_start, i_start_f-1
   IF(i == ids+1) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40127(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40128(k,i,j) =mu

   Tmpv001 =ru(i,k,j)/mu
   vel =Tmpv001
   Tmpv40129(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   cr =Tmpv001
   Tmpv40130(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40131(k,i,j) =Tmpv001
   Tmpv40132(k,i,j) =Tmpv002
   Tmpv003 =Tmpv40131(k,i,j)*Tmpv40132(k,i,j)
   fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv40133(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv40133(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   IF(i == ids+2) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40134(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40135(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv40136(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40137(k,i,j) =Tmpv001
   Tmpv002 =Tmpv40137(k,i,j)/mu
   cr =Tmpv002
   Tmpv40138(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40139(k,i,j) =Tmpv001
   Tmpv40140(k,i,j) =Tmpv002
   fqxl(i,k,j) =Tmpv003
   Tmpv003 =Tmpv40139(k,i,j)*Tmpv40140(k,i,j)

   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv40141(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv40141(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDDO
   ENDIF
   IF( degrade_xe ) THEN

   DO i =i_end_f+1, i_end+1
   IF( i == ide-1 ) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40142(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40143(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv40144(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40145(k,i,j) =Tmpv001
   Tmpv002 =Tmpv40145(k,i,j)/mu
   cr =Tmpv002
   Tmpv40146(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40147(k,i,j) =Tmpv001
   Tmpv40148(k,i,j) =Tmpv002
   Tmpv003 =Tmpv40147(k,i,j)*Tmpv40148(k,i,j)
   fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv40149(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv40149(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   IF( i == ide-2 ) THEN

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40150(k,i,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40151(k,i,j) =mu

   vel =ru(i,k,j)
   Tmpv40152(k,i,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40153(k,i,j) =Tmpv001
   Tmpv002 =Tmpv40153(k,i,j)/mu
   cr =Tmpv002
   Tmpv40154(k,i,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40155(k,i,j) =Tmpv001
   Tmpv40156(k,i,j) =Tmpv002
   Tmpv003 =Tmpv40155(k,i,j)*Tmpv40156(k,i,j)
   fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv40157(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv40157(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDDO
   ENDIF
   ENDDO

   ELSE IF( horz_order == 4 ) THEN
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xs .or.  	       (its > ids+1)                ) THEN
   degrade_xs =.false.
   END IF
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xe .or.  	       (ite < ide-2)                ) THEN
   degrade_xe =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ys .or.  	       (jts > jds+1)                ) THEN
   degrade_ys =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ye .or.  	       (jte < jde-2)                ) THEN
   degrade_ye =.false.
   END IF
   ktf =min(kte, kde-1)
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_xs) THEN
   i_start =its
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts, jds+1)
   j_start_f =jds+2
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-2)
   j_end_f =jde-2
   ENDIF
   DO j =j_start, j_end+1
   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40158(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40159(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40160(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40161(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40161(i,k,j)/mu
   cr =Tmpv002
   Tmpv40162(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40163(i,k,j) =Tmpv001
   Tmpv40164(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40163(i,k,j)*Tmpv40164(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv40165(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40165(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40166(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40167(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40168(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40169(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40169(i,k,j)/mu
   cr =Tmpv002
   Tmpv40170(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40171(i,k,j) =Tmpv001
   Tmpv40172(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40171(i,k,j)*Tmpv40172(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40173(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40173(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40174(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40175(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40176(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40177(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40177(i,k,j)/mu
   cr =Tmpv002
   Tmpv40178(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40179(i,k,j) =Tmpv001
   Tmpv40180(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40179(i,k,j)*Tmpv40180(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40181(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40181(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDIF
   ENDDO

   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   i_start_f =i_start
   i_end_f =i_end+1
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_ys) THEN
   j_start =jts
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-1)
   END IF
   IF(degrade_xs) THEN
   i_start =max(ids+1, its)
   i_start_f =i_start+1
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-2, ite)
   i_end_f =ide-2
   ENDIF
   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start_f, i_end_f
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40182(i,k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40183(i,k,j) =mu

   vel =ru(i,k,j)
   Tmpv40184(i,k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40185(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40185(i,k,j)/mu
   cr =Tmpv002
   Tmpv40186(i,k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40187(i,k,j) =Tmpv001
   Tmpv40188(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40187(i,k,j)*Tmpv40188(i,k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux4(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv40189(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40189(i,k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   IF( degrade_xs ) THEN
   IF( i_start == ids+1 ) THEN
   i =ids+1

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv300(k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv301(k,j) =mu

   Tmpv001 =ru(i,k,j)/mu
   vel =Tmpv001
   Tmpv302(k,j) =vel

   Tmpv001 =vel*dt/dx
   cr =Tmpv001
   Tmpv303(k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv304(k,j) =Tmpv001
   Tmpv305(k,j) =Tmpv002
   Tmpv003 =Tmpv304(k,j)*Tmpv305(k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv306(k,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv306(k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDIF
   IF( degrade_xe ) THEN
   IF( i_end == ide-2 ) THEN
   i =ide-1

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv307(k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv308(k,j) =mu

   vel =ru(i,k,j)
   Tmpv309(k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv3010(k,j) =Tmpv001
   Tmpv002 =Tmpv3010(k,j)/mu
   cr =Tmpv002
   Tmpv3011(k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv3012(k,j) =Tmpv001
   Tmpv3013(k,j) =Tmpv002
   Tmpv003 =Tmpv3012(k,j)*Tmpv3013(k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv3014(k,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv3014(k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDIF
   ENDDO

   ELSE IF( horz_order == 3 ) THEN
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xs .or.  	       (its > ids+2)                ) THEN
   degrade_xs =.false.
   END IF
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xe .or.  	       (ite < ide-1)                ) THEN
   degrade_xe =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ys .or.  	       (jts > jds+2)                ) THEN
   degrade_ys =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ye .or.  	       (jte < jde-1)                ) THEN
   degrade_ye =.false.
   END IF

   ktf =min(kte, kde-1)
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_xs) THEN
   i_start =its
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts, jds+1)
   j_start_f =jds+2
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-2)
   j_end_f =jde-2
   ENDIF
   DO j =j_start, j_end+1
   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40190(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40191(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40192(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40193(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40193(i,k,j)/mu
   cr =Tmpv002
   Tmpv40194(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40195(i,k,j) =Tmpv001
   Tmpv40196(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40195(i,k,j)*Tmpv40196(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv40197(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40197(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jds+1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40198(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40199(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40200(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40201(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40201(i,k,j)/mu
   cr =Tmpv002
   Tmpv40202(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40203(i,k,j) =Tmpv001
   Tmpv40204(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40203(i,k,j)*Tmpv40204(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40205(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40205(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ELSE IF( j == jde-1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40206(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40207(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40208(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40209(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40209(i,k,j)/mu
   cr =Tmpv002
   Tmpv40210(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40211(i,k,j) =Tmpv001
   Tmpv40212(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40211(i,k,j)*Tmpv40212(i,k,j)
!  fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40213(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40213(i,k,j)
!  fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
!  fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDIF
   ENDDO

   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   i_start_f =i_start
   i_end_f =i_end+1
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_ys) THEN
   j_start =jts
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-1)
   END IF
   IF(degrade_xs) THEN
   i_start =max(ids+1, its)
   i_start_f =i_start+1
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-2, ite)
   i_end_f =ide-2
   ENDIF

   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start_f, i_end_f
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40214(i,k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40215(i,k,j) =mu

   vel =ru(i,k,j)
   Tmpv40216(i,k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40217(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40217(i,k,j)/mu
   cr =Tmpv002
   Tmpv40218(i,k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40219(i,k,j) =Tmpv001
   Tmpv40220(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40219(i,k,j)*Tmpv40220(i,k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv40221(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv40221(i,k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDDO

   IF( degrade_xs ) THEN
   IF( i_start == ids+1 ) THEN
   i =ids+1

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv3015(k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv3016(k,j) =mu

   Tmpv001 =ru(i,k,j)/mu
   vel =Tmpv001
   Tmpv3017(k,j) =vel

   Tmpv001 =vel*dt/dx
   cr =Tmpv001
   Tmpv3018(k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv3019(k,j) =Tmpv001
   Tmpv3020(k,j) =Tmpv002
   Tmpv003 =Tmpv3019(k,j)*Tmpv3020(k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv3021(k,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv3021(k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDIF

   IF( degrade_xe ) THEN
   IF( i_end == ide-2 ) THEN
   i =ide-1

   DO k =kts, ktf
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv3022(k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv3023(k,j) =mu

   vel =ru(i,k,j)
   Tmpv3024(k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv3025(k,j) =Tmpv001
   Tmpv002 =Tmpv3025(k,j)/mu
   cr =Tmpv002
   Tmpv3026(k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv3027(k,j) =Tmpv001
   Tmpv3028(k,j) =Tmpv002
   Tmpv003 =Tmpv3027(k,j)*Tmpv3028(k,j)
!  fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv3029(k,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv3029(k,j)
!  fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
!  fqx(i,k,j) =Tmpv001

   ENDDO
   ENDIF
   ENDIF
   ENDDO

   ELSE IF( horz_order == 2 ) THEN
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xs .or.  	       (its > ids+1)                ) THEN
   degrade_xs =.false.
   END IF
   IF( config_flags%periodic_x   .or.  	       config_flags%symmetric_xe .or.  	       (ite < ide-2)                ) THEN
   degrade_xe =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ys .or.  	       (jts > jds+1)                ) THEN
   degrade_ys =.false.
   END IF
   IF( config_flags%periodic_y   .or.  	       config_flags%symmetric_ye .or.  	       (jte < jde-2)                ) THEN
   degrade_ye =.false.
   END IF
   ktf =min(kte, kde-1)
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_xs) THEN
   i_start =its
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts, jds+1)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte, jde-2)
   END IF

   DO j =j_start, j_end+1
   DO k =kts, ktf
   DO i =i_start, i_end
   dy =2./(msftx(i,j)+msftx(i,j-1))/rdy
   Tmpv40222(i,k,j) =dy

   Tmpv001 =mut(i,j) +mut(i,j-1)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40223(i,k,j) =mu

   vel =rv(i,k,j)
   Tmpv40224(i,k,j) =vel

   Tmpv001 =vel*dt/dy
   Tmpv40225(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40225(i,k,j)/mu
   cr =Tmpv002
   Tmpv40226(i,k,j) =cr

   Tmpv001 =mu*(dy/dt)
   Tmpv002 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv40227(i,k,j) =Tmpv001
   Tmpv40228(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40227(i,k,j)*Tmpv40228(i,k,j)
   fqyl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv40229(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv40229(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDDO

   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start, i_end+1
   dx =2./(msfty(i,j)+msfty(i-1,j))/rdx
   Tmpv40230(i,k,j) =dx

   Tmpv001 =mut(i,j) +mut(i-1,j)
   Tmpv002 =0.5*Tmpv001
   mu =Tmpv002
   Tmpv40231(i,k,j) =mu

   vel =ru(i,k,j)
   Tmpv40232(i,k,j) =vel

   Tmpv001 =vel*dt/dx
   Tmpv40233(i,k,j) =Tmpv001
   Tmpv002 =Tmpv40233(i,k,j)/mu
   cr =Tmpv002
   Tmpv40234(i,k,j) =cr

   Tmpv001 =mu*(dx/dt)
   Tmpv002 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv40235(i,k,j) =Tmpv001
   Tmpv40236(i,k,j) =Tmpv002
   Tmpv003 =Tmpv40235(i,k,j)*Tmpv40236(i,k,j)
   fqxl(i,k,j) =Tmpv003

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv40237(i,k,j) =Tmpv001
   Tmpv002 =0.5*ru(i,k,j)*Tmpv40237(i,k,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   ENDDO
   ENDDO
   ENDDO
   ELSE
   CALL wrf_error_fatal(Trim(wrf_err_message))

   ENDIF

!ADDED BY WALLS

     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

     degrade_xs = .true.
     degrade_xe = .true.
     degrade_ys = .true.
     degrade_ye = .true.

   IF( horz_order == 6 ) THEN
!ADDED BY WALLS
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-4)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

!ADDED BY WALLS
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = MAX(jts-1,jds)

      IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its-1)
           i_start_f = ids+3
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite+1)
           i_end_f = ide-3
         ENDIF

   DO j =j_end, j_start, -1

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4075(k,i,j)
   vel =Tmpv4073(k,i,j)
   dx =Tmpv4071(k,i,j)
   mu =Tmpv4072(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4078(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4077(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4076(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv4075(k,i,j)
!  vel =Tmpv4073(k,i,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4074(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv4072(k,i,j)

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

!  dx =Tmpv4071(k,i,j)

   a_dx =0.0
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4067(k,i,j)
   vel =Tmpv4065(k,i,j)
   mu =Tmpv4064(k,i,j)
   dx =Tmpv4063(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv4070(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4069(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4068(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4066(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4059(k,i,j)
   vel =Tmpv4057(k,i,j)
   mu =Tmpv4056(k,i,j)
   dx =Tmpv4055(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4062(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4061(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4060(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4058(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4051(k,i,j)
   vel =Tmpv4050(k,i,j)
   mu =Tmpv4049(k,i,j)
   dx =Tmpv4048(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv4054(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4053(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4052(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv1 =a_cr
   a_cr =0.0
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_vel =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1/mu
   a_mu =a_mu -ru(i,k,j)/(mu*mu)*a_Tmpv1

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4044(i,k,j)
   vel =Tmpv4042(i,k,j)
   mu =Tmpv4041(i,k,j)
   dx =Tmpv4040(i,k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4047(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+2,k,j) =a_field(i+2,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,j)  &
   ,0.0,field(i-1,k,j),0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux6(field(i-3,k,j),0.0,field(i-2,k,  &
   j),1.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-3,k,j) =a_field(i-3,k,j) +Diff_flux6(field(i-3,k,j),1.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4046(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4045(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4043(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

!ADDED BY WALLS
         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

   DO j =j_end+1, j_start, -1

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv404(i,k,j)
   vel =Tmpv402(i,k,j)
   mu =Tmpv401(i,k,j)
   dy =Tmpv400(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv407(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+2) =a_field(i,k,j+2) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-2)  &
   ,0.0,field(i,k,j-1),0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux6(field(i,k,j-3),0.0,field(i,k,j-  &
   2),1.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-3) =a_field(i,k,j-3) +Diff_flux6(field(i,k,j-3),1.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv406(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv405(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv403(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4012(i,k,j)
   vel =Tmpv4010(i,k,j)
   mu =Tmpv409(i,k,j)
   dy =Tmpv408(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv4015(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4014(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4013(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4011(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4020(i,k,j)
   vel =Tmpv4018(i,k,j)
   mu =Tmpv4017(i,k,j)
   dy =Tmpv4016(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv4023(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4022(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4021(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4019(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4028(i,k,j)
   vel =Tmpv4026(i,k,j)
   mu =Tmpv4025(i,k,j)
   dy =Tmpv4024(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv4031(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4030(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4029(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4027(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv4036(i,k,j)
   vel =Tmpv4034(i,k,j)
   mu =Tmpv4033(i,k,j)
   dy =Tmpv4032(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv4039(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4038(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4037(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4035(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-4)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+3)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-4)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+3)                ) THEN

   END IF

   ELSE IF( horz_order == 5 ) THEN
!ALL SCALARS IN THE FOLLOWING ARE REVISED BY WALLS
!ALL SCALARS IN THE FOLLOWING ARE REVISED BY WALLS
!ADDED BY WALLS
   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xs .or.   &
       (its > ids+3)                ) degrade_xs = .false.

   IF( config_flags%periodic_x   .or.   &
       config_flags%symmetric_xe .or.   &
       (ite < ide-4)                ) degrade_xe = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ys .or.   &
       (jts > jds+3)                ) degrade_ys = .false.

   IF( config_flags%periodic_y   .or.   &
       config_flags%symmetric_ye .or.   &
       (jte < jde-4)                ) degrade_ye = .false.

         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

!ADDED BY WALLS
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         i_start_f = i_start
         i_end_f   = i_end+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
      IF(degrade_ys) j_start = MAX(jts-1,jds)

      IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

      IF(degrade_xs) then

           i_start = MAX(ids+1,its-1)
           i_start_f = ids+3
         ENDIF
      IF(degrade_xe) then

           i_end = MIN(ide-2,ite+1)
           i_end_f = ide-3
         ENDIF

   DO j =j_end, j_start, -1

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
   cr =Tmpv40154(k,i,j)
   vel =Tmpv40152(k,i,j)
   mu =Tmpv40151(k,i,j)
   dx =Tmpv40150(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv40157(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40156(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40155(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv40154(k,i,j)
!  vel =Tmpv40152(k,i,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40153(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv40151(k,i,j)

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

!  dx =Tmpv40150(k,i,j)

   a_dx =0.0
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
   cr =Tmpv40146(k,i,j)
   vel =Tmpv40144(k,i,j)
   mu =Tmpv40143(k,i,j)
   dx =Tmpv40142(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv40149(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40148(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40147(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40145(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
   cr =Tmpv40138(k,i,j)
   vel =Tmpv40136(k,i,j)
   mu =Tmpv40135(k,i,j)
   dx =Tmpv40134(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv40141(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40140(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40139(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40137(k,i,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
   dx =Tmpv40127(k,i,j)
   mu =Tmpv40128(k,i,j)
   cr =Tmpv40130(k,i,j)
   vel =Tmpv40129(k,i,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv40133(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40132(k,i,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40131(k,i,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv1 =a_cr
   a_cr =0.0
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_vel =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1/mu
   a_mu =a_mu -ru(i,k,j)/(mu*mu)*a_Tmpv1

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   dx =Tmpv40119(i,k,j)
   mu =Tmpv40120(i,k,j)
   cr =Tmpv40123(i,k,j)
   vel =Tmpv40121(i,k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv40126(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+2,k,j) =a_field(i+2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j)  &
   ,0.0,field(i-1,k,j),0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),1.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-3,k,j) =a_field(i-3,k,j) +Diff_flux5(field(i-3,k,j),1.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40125(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40124(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40122(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

!ADDED BY WALLS
         ktf=MIN(kte,kde-1)
         i_start = its-1
         i_end   = MIN(ite,ide-1)+1
         j_start = jts-1
         j_end   = MIN(jte,jde-1)+1
         j_start_f = j_start
         j_end_f   = j_end+1
      IF(degrade_xs) i_start = MAX(its-1,ids)

      IF(degrade_xe) i_end   = MIN(ite+1,ide-1)

      IF(degrade_ys) then

           j_start = MAX(jts-1,jds+1)
           j_start_f = jds+3
         ENDIF
      IF(degrade_ye) then

           j_end = MIN(jte+1,jde-2)
           j_end_f = jde-3
         ENDIF

   DO j =j_end+1, j_start, -1

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   dy =Tmpv4079(i,k,j)
   cr =Tmpv4083(i,k,j)
   vel =Tmpv4081(i,k,j)
   mu =Tmpv4080(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv4086(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+2) =a_field(i,k,j+2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2)  &
   ,0.0,field(i,k,j-1),0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),1.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-3) =a_field(i,k,j-3) +Diff_flux5(field(i,k,j-3),1.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4085(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4084(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4082(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   cr =Tmpv4091(i,k,j)
   vel =Tmpv4089(i,k,j)
   dy =Tmpv4087(i,k,j)
   mu =Tmpv4088(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv4094(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv4093(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv4092(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4090(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   dy =Tmpv4095(i,k,j)
   cr =Tmpv4099(i,k,j)
   vel =Tmpv4097(i,k,j)
   mu =Tmpv4096(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv40102(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40101(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40100(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv4098(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   dy =Tmpv40103(i,k,j)
   cr =Tmpv40107(i,k,j)
   vel =Tmpv40105(i,k,j)
   mu =Tmpv40104(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40110(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40109(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40108(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40106(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   dy =Tmpv40111(i,k,j)
   cr =Tmpv40115(i,k,j)
   vel =Tmpv40113(i,k,j)
   mu =Tmpv40112(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv40118(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40117(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40116(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40114(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-4)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+3)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-4)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+3)                ) THEN

   END IF

   ELSE IF( horz_order == 4 ) THEN
!ADDED BY WALLS
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+1)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+1)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-2)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1
      j_start_f = j_start
      j_end_f   = j_end+1

!--  modify loop bounds if open or specified

      IF(degrade_xs) i_start = its
      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+2
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-2
      ENDIF

!ADDED BY WALLS
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      i_start_f = i_start
      i_end_f   = i_end+1

      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1

!--  modify loop bounds for open and specified b.c

      IF(degrade_ys) j_start = jts
      IF(degrade_ye) j_end   = MIN(jte,jde-1)

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1

   IF( degrade_xe ) THEN

   IF( i_end == ide-2 ) THEN

!ADDED AND REVISED BY WALLS
   i = ide-1

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv3011(k,j)
   vel =Tmpv309(k,j)
   mu =Tmpv308(k,j)
   dx =Tmpv307(k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv3014(k,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3013(k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3012(k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3010(k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   ENDIF

   IF( degrade_xs ) THEN

   IF( i_start == ids+1 ) THEN

!ADDED AND REVISED BY WALLS
   i = ids+1

   DO k =ktf, kts, -1
!ADDED AND REVISED BY WALLS
   cr =Tmpv303(k,j)
   vel =Tmpv302(k,j)
   mu =Tmpv301(k,j)
   dx =Tmpv300(k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv306(k,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv305(k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv304(k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv1 =a_cr
   a_cr =0.0
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_vel =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1/mu
   a_mu =a_mu -ru(i,k,j)/(mu*mu)*a_Tmpv1

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
   cr =Tmpv40186(i,k,j)
   vel =Tmpv40184(i,k,j)
   mu =Tmpv40183(i,k,j)
   dx =Tmpv40182(i,k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv40189(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux4(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux4(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40188(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40187(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40185(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

!ADDED BY WALLS
      ktf=MIN(kte,kde-1)
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1
      j_start_f = j_start
      j_end_f   = j_end+1

!--  modify loop bounds if open or specified

      IF(degrade_xs) i_start = its
      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+2
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-2
      ENDIF

   DO j =j_end+1, j_start, -1

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   cr =Tmpv40162(i,k,j)
   vel =Tmpv40160(i,k,j)
   mu =Tmpv40159(i,k,j)
   dy =Tmpv40158(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv40165(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux4(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux4(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40164(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40163(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40161(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   cr =Tmpv40170(i,k,j)
   vel =Tmpv40168(i,k,j)
   mu =Tmpv40167(i,k,j)
   dy =Tmpv40166(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40173(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40172(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40171(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40169(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   cr =Tmpv40178(i,k,j)
   vel =Tmpv40176(i,k,j)
   mu =Tmpv40175(i,k,j)
   dy =Tmpv40174(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40181(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40180(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40179(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40177(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-2)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+1)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+1)                ) THEN

   END IF

   ELSE IF( horz_order == 3 ) THEN
!ADDED BY WALLS
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+2)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-1)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+2)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-1)                ) degrade_ye = .false.

      ktf=MIN(kte,kde-1)
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1
      j_start_f = j_start
      j_end_f   = j_end+1

      IF(degrade_xs) i_start = its
      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+2
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-2
      ENDIF

!ADDED BY WALLS
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      i_start_f = i_start
      i_end_f   = i_end+1

      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1

!--  modify loop bounds for open and specified b.c

      IF(degrade_ys) j_start = jts
      IF(degrade_ye) j_end   = MIN(jte,jde-1)

      IF(degrade_xs) then
        i_start = MAX(ids+1,its)
        i_start_f = i_start+1
      ENDIF

      IF(degrade_xe) then
        i_end = MIN(ide-2,ite)
        i_end_f = ide-2
      ENDIF

   DO j =j_end, j_start, -1

   IF( degrade_xe ) THEN

   IF( i_end == ide-2 ) THEN

!ADDED BY WALLS
   i =ide-1

   DO k =ktf, kts, -1
!ADDED BY WALLS
   cr =Tmpv3026(k,j)
   vel =Tmpv3024(k,j)
   mu =Tmpv3023(k,j)
   dx =Tmpv3022(k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv3029(k,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3028(k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3027(k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv3025(k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   ENDIF

   IF( degrade_xs ) THEN

   IF( i_start == ids+1 ) THEN

!ADDED BY WALLS
   i =ids+1

   DO k =ktf, kts, -1
!ADDED BY WALLS
   cr =Tmpv3018(k,j)
   vel =Tmpv3017(k,j)
   mu =Tmpv3016(k,j)
   dx =Tmpv3015(k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv3021(k,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv3020(k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv3019(k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv1 =a_cr
   a_cr =0.0
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_Tmpv1 =a_vel
   a_vel =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +a_Tmpv1/mu
   a_mu =a_mu -ru(i,k,j)/(mu*mu)*a_Tmpv1

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO

   ENDIF

   ENDIF

   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
!REVISED AND ADDED BY WALLS
   cr =Tmpv40218(i,k,j)
   vel =Tmpv40216(i,k,j)
   mu =Tmpv40215(i,k,j)
   dx =Tmpv40214(i,k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv40221(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40220(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40219(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40217(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_xe) THEN

   ENDIF

   IF(degrade_xs) THEN

   ENDIF

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

!ADDED BY WALLS
      ktf=MIN(kte,kde-1)
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1
      j_start_f = j_start
      j_end_f   = j_end+1

!--  modify loop bounds if open or specified

      IF(degrade_xs) i_start = its
      IF(degrade_xe) i_end   = MIN(ite,ide-1)

      IF(degrade_ys) then
        j_start = MAX(jts,jds+1)
        j_start_f = jds+2
      ENDIF

      IF(degrade_ye) then
        j_end = MIN(jte,jde-2)
        j_end_f = jde-2
      ENDIF

   DO j =j_end+1, j_start, -1

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!REVISED AND ADDED BY WALLS
   cr =Tmpv40194(i,k,j)
   vel =Tmpv40192(i,k,j)
   mu =Tmpv40191(i,k,j)
   dy =Tmpv40190(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv40197(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40196(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40195(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40193(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!REVISED AND ADDED BY WALLS
   cr =Tmpv40202(i,k,j)
   vel =Tmpv40200(i,k,j)
   mu =Tmpv40199(i,k,j)
   dy =Tmpv40198(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40205(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40204(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40203(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40201(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
!REVISED AND ADDED BY WALLS
   cr =Tmpv40210(i,k,j)
   vel =Tmpv40208(i,k,j)
   mu =Tmpv40207(i,k,j)
   dy =Tmpv40206(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40213(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40212(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40211(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40209(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

   a_dy =0.0
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   IF(degrade_ye) THEN

   ENDIF

   IF(degrade_ys) THEN

   ENDIF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-1)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-1)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+2)                ) THEN

   END IF

   ELSE IF( horz_order == 2 ) THEN
!ADDED BY WALLS
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xs .or. &
       (its > ids+1)                ) degrade_xs = .false.
   IF( config_flags%periodic_x   .or. &
       config_flags%symmetric_xe .or. &
       (ite < ide-2)                ) degrade_xe = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ys .or. &
       (jts > jds+1)                ) degrade_ys = .false.
   IF( config_flags%periodic_y   .or. &
       config_flags%symmetric_ye .or. &
       (jte < jde-2)                ) degrade_ye = .false.

!--  y flux compute; these bounds are for periodic and sym b.c.

      ktf=MIN(kte,kde-1)
      i_start = its-1
      i_end   = MIN(ite,ide-1)+1
      j_start = jts-1
      j_end   = MIN(jte,jde-1)+1

!--  modify loop bounds if open or specified

      IF(degrade_xs) i_start = its
      IF(degrade_xe) i_end   = MIN(ite,ide-1)
      IF(degrade_ys) j_start = MAX(jts,jds+1)
      IF(degrade_ye) j_end = MIN(jte,jde-2)

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end+1, i_start, -1
   mu =Tmpv40231(i,k,j)
   cr =Tmpv40234(i,k,j)
   vel =Tmpv40232(i,k,j)
   dx =Tmpv40230(i,k,j)

   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv40237(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*ru(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv3 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40236(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40235(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dx/dt)*a_Tmpv1
   a_dx =a_dx +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv40234(i,k,j)
!  vel =Tmpv40232(i,k,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40233(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dx*a_Tmpv1
   a_dx =a_dx -vel*dt/(dx*dx)*a_Tmpv1

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i-1,j) =a_mut(i-1,j) +a_Tmpv1

   a_dx =0.0
   ENDDO
   ENDDO
   ENDDO

   DO j =j_end+1, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   cr =Tmpv40226(i,k,j)
   vel =Tmpv40224(i,k,j)
   mu =Tmpv40223(i,k,j)
   dy =Tmpv40222(i,k,j)

   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv40229(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv3 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_Tmpv1 =Tmpv40228(i,k,j)*a_Tmpv3
   a_Tmpv2 =Tmpv40227(i,k,j)*a_Tmpv3
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv2
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv2
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv2
   a_Tmpv2 =0.0

   a_mu =a_mu +(dy/dt)*a_Tmpv1
   a_dy =a_dy +1.0/dt*mu*a_Tmpv1

!  cr =Tmpv40226(i,k,j)
!  vel =Tmpv40224(i,k,j)

   a_Tmpv2 =a_cr
   a_cr =0.0
   a_Tmpv1 =a_Tmpv2/mu
   a_mu =a_mu -Tmpv40225(i,k,j)/(mu*mu)*a_Tmpv2
   a_vel =a_vel +dt/dy*a_Tmpv1
   a_dy =a_dy -vel*dt/(dy*dy)*a_Tmpv1

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

!  mu =Tmpv40223(i,k,j)

   a_Tmpv2 =a_mu
   a_mu =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +a_Tmpv1
   a_mut(i,j-1) =a_mut(i,j-1) +a_Tmpv1

!  dy =Tmpv40222(i,k,j)

   a_dy =0.0
   ENDDO
   ENDDO
   ENDDO

   IF(degrade_ye) THEN

   END IF

   IF(degrade_ys) THEN

   END IF

   IF(degrade_xe) THEN

   END IF

   IF(degrade_xs) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ye .or.   &
          (jte < jde-2)                ) THEN

   END IF

   IF( config_flags%periodic_y   .or.   &
          config_flags%symmetric_ys .or.   &
          (jts > jds+1)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xe .or.   &
          (ite < ide-2)                ) THEN

   END IF

   IF( config_flags%periodic_x   .or.   &
          config_flags%symmetric_xs .or.   &
          (its > ids+1)                ) THEN

   END IF

   ELSE

   ENDIF

   IF(config_flags%polar) THEN

   a_fqzl(:,:,:) =0.0
   a_fqyl(:,:,:) =0.0
   a_fqxl(:,:,:) =0.0
   a_fqz(:,:,:) =0.0
   a_fqy(:,:,:) =0.0
   a_fqx(:,:,:) =0.0

   END IF

!LPB[0]

   END SUBROUTINE a_advect_scalar_pd

   SUBROUTINE a_advect_scalar_mono(field,a_field,field_old,a_field_old,tendency, &
   a_tendency,ru,a_ru,rv,a_rv,rom,a_rom,mut,a_mut,mub,mu_old,a_mu_old, &
   config_flags,msfux,msfuy,msfvx,msfvy,msftx,msfty,fzm,fzp,rdx,rdy,rdzw,dt,ids,ide,jds, &
   jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte)

!PART I: DECLARATION OF VARIABLES

   IMPLICIT NONE

   INTEGER :: K0_ADJ,K1_ADJ,K2_ADJ,K3_ADJ
   TYPE(grid_config_rec_type) :: config_flags
   INTEGER :: ids,ide,jds,jde,kds,kde,ims,ime,jms,jme,kms,kme,its,ite,jts,jte,kts,kte
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: field,a_field,field_old,a_field_old, &
   ru,a_ru,rv,a_rv,rom,a_rom
   REAL,DIMENSION(ims:ime,jms:jme) :: mut,a_mut,mub,mu_old,a_mu_old
   REAL,DIMENSION(ims:ime,kms:kme,jms:jme) :: tendency,a_tendency
   REAL,DIMENSION(ims:ime,jms:jme) :: msfux,msfuy,msfvx,msfvy,msftx,msfty
   REAL,DIMENSION(kms:kme) :: fzm,fzp,rdzw
   REAL :: rdx,rdy,dt
   INTEGER :: i,j,k,itf,jtf,ktf
   INTEGER :: i_start,i_end,j_start,j_end
   INTEGER :: i_start_f,i_end_f,j_start_f,j_end_f
   INTEGER :: jmin,jmax,jp,jm,imin,imax
   REAL :: ub,a_ub,vb,a_vb
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: fqx,a_fqx,fqy,a_fqy,fqz,a_fqz
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: fqxl,a_fqxl,fqyl,a_fqyl,fqzl,a_fqzl
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: qmin,a_qmin,qmax,a_qmax
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: scale_in,a_scale_in,scale_out,a_scale_out
   REAL :: ph_upwind,a_ph_upwind
   INTEGER :: horz_order,vert_order
   LOGICAL :: degrade_xs,degrade_ys
   LOGICAL :: degrade_xe,degrade_ye
   INTEGER :: jp1,jp0,jtmp
   REAL :: flux_out,a_flux_out,ph_low,a_ph_low,flux_in,a_flux_in,ph_hi,a_ph_hi,scale,a_scale
   REAL,PARAMETER :: eps =1.e-20
   REAL :: flux3,Diff_flux3,flux4,Diff_flux4,flux5,Diff_flux5,flux6,Diff_flux6,flux_upwind, &
   Diff_flux_upwind
   REAL :: q_im3,Diff_q_im3,q_im2,Diff_q_im2,q_im1,Diff_q_im1,q_i,Diff_q_i,q_ip1,Diff_q_ip1, &
   q_ip2,Diff_q_ip2,ua,Diff_ua,vel,a_vel,cr,Diff_cr,a_cr

   Diff_flux4(q_im2, Diff_q_im2,q_im1, Diff_q_im1,q_i, Diff_q_i,q_ip1, Diff_q_ip1, &
   ua, Diff_ua) =(7./12.)*(Diff_q_i +Diff_q_im1) -(1./12.)*(Diff_q_ip1 +Diff_q_im2)
   flux4(q_im2,q_im1,q_i,q_ip1,ua) =(7./12.)*(q_i +q_im1) -(1./12.)*(q_ip1 +q_im2)

   Diff_flux3(q_im2, Diff_q_im2,q_im1, Diff_q_im1,q_i, Diff_q_i,q_ip1, Diff_q_ip1, &
   ua, Diff_ua) =Diff_flux4(q_im2,Diff_q_im2,q_im1,Diff_q_im1,q_i,Diff_q_i,q_ip1, &
   Diff_q_ip1,ua,Diff_ua) +sign(1., ua) *(1./12.)*((Diff_q_ip1 -Diff_q_im2) &
   -3.*(Diff_q_i -Diff_q_im1))
   flux3(q_im2,q_im1,q_i,q_ip1,ua) =flux4(q_im2,q_im1,q_i,q_ip1,ua) +sign(1., ua) &
   *(1./12.)*((q_ip1 -q_im2) -3.*(q_i -q_im1))

   Diff_flux6(q_im3, Diff_q_im3,q_im2, Diff_q_im2,q_im1, Diff_q_im1,q_i, Diff_q_i, &
   q_ip1, Diff_q_ip1,q_ip2, Diff_q_ip2,ua, Diff_ua) =(37./60.)*(Diff_q_i +Diff_q_im1) &
   -(2./15.)*(Diff_q_ip1 +Diff_q_im2) +(1./60.)*(Diff_q_ip2 +Diff_q_im3)
   flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =(37./60.)*(q_i +q_im1) -(2./15.) &
  *(q_ip1 +q_im2) +(1./60.)*(q_ip2 +q_im3)

   Diff_flux5(q_im3, Diff_q_im3,q_im2, Diff_q_im2,q_im1, Diff_q_im1,q_i, Diff_q_i, &
   q_ip1, Diff_q_ip1,q_ip2, Diff_q_ip2,ua, Diff_ua) =Diff_flux6(q_im3,Diff_q_im3,q_im2, &
   Diff_q_im2,q_im1,Diff_q_im1,q_i,Diff_q_i,q_ip1,Diff_q_ip1,q_ip2,Diff_q_ip2,ua, &
   Diff_ua) -sign(1., ua) *(1./60.)*((Diff_q_ip2 -Diff_q_im3) -5.*(Diff_q_ip1 - &
   Diff_q_im2) +10.*(Diff_q_i -Diff_q_im1))
   flux5(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2,ua) =flux6(q_im3,q_im2,q_im1,q_i,q_ip1,q_ip2, &
   ua) -sign(1., ua) *(1./60.)*((q_ip2 -q_im3) -5.*(q_ip1 -q_im2) +10.*(q_i -q_im1))

   Diff_flux_upwind(q_im1, Diff_q_im1,q_i, Diff_q_i,cr, Diff_cr) =0.5 *(1.+sign(1., cr)) &
  *Diff_q_im1 +0.5 *(1.-sign(1., cr))*Diff_q_i
   flux_upwind(q_im1,q_i,cr) =0.5 *(1.+sign(1., cr))*q_im1 +0.5 *(1.-sign(1., cr))*q_i

   LOGICAL,PARAMETER :: mono_limit =.true.

   REAL :: Keep_Lpb3_cr
   REAL :: Keep_Lpb7_ub
   REAL :: Keep_Lpb11_vb
   REAL :: Keep_Lpb21_vel
   REAL :: Keep_Lpb21_cr   
   INTEGER :: IX1,IX2,IX3

   REAL :: a_Tmpv1,Tmpv001,a_Tmpv2,Tmpv002,a_Tmpv3,Tmpv003,a_Tmpv4,Tmpv004, &
   a_Tmpv5,Tmpv005,a_Tmpv6,Tmpv006,a_Tmpv7,Tmpv007,a_Tmpv8,Tmpv008,a_Tmpv9, &
   Tmpv009,a_Tmpv10,Tmpv010,a_Tmpv11,Tmpv011,a_Tmpv12,Tmpv012
   REAL,DIMENSION(MIN(kts,its-2):MAX(kte,ite+2), &
                  MIN(its-2,jts-2):MAX(ite+2,jte+2)) :: Tmpv300,Tmpv301,Tmpv302,Tmpv303
   REAL,DIMENSION(its-2:ite+2,jts-2:jte+2) :: Tmpv304,Tmpv305,Tmpv306,Tmpv307
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv400,Tmpv401,Tmpv402,Tmpv403
   REAL,DIMENSION(its-2:ite+2,kts:kte,jds+1:jds+1) :: Tmpv404,Tmpv405,Tmpv406,Tmpv407
   REAL,DIMENSION(its-2:ite+2,kts:kte,jds+2:jds+2) :: Tmpv408,Tmpv409,Tmpv4010,Tmpv4011
   REAL,DIMENSION(its-2:ite+2,kts:kte,jde-1:jde-1) :: Tmpv4012,Tmpv4013,Tmpv4014,Tmpv4015
   REAL,DIMENSION(its-2:ite+2,kts:kte,jde-2:jde-2) :: Tmpv4016,Tmpv4017,Tmpv4018,Tmpv4019
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv4020,Tmpv4021,Tmpv4022,Tmpv4023
   REAL,DIMENSION(kts:kte,ids+1:ids+1,jts-2:jte+2) :: Tmpv4024,Tmpv4025,Tmpv4026,Tmpv4027
   REAL,DIMENSION(kts:kte,ids+2:ids+2,jts-2:jte+2) :: Tmpv4028,Tmpv4029,Tmpv4030,Tmpv4031
   REAL,DIMENSION(kts:kte,ide-1:ide-1,jts-2:jte+2) :: Tmpv4032,Tmpv4033,Tmpv4034,Tmpv4035
   REAL,DIMENSION(kts:kte,ide-2:ide-2,jts-2:jte+2) :: Tmpv4036,Tmpv4037,Tmpv4038,Tmpv4039
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv1400,Tmpv1401,Tmpv1402,Tmpv1403 
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv2400,Tmpv2401,Tmpv2402, &
       Tmpv2403,Tmpv2404,Tmpv2405,Tmpv2406,Tmpv2408,Tmpv24010, Tmpv24012,Tmpv24014,Tmpv24016
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv502,Tmpv503
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv600,Tmpv601,Tmpv602,Tmpv603
   REAL,DIMENSION(its-2:ite+2,kts:kte) :: Tmpv604,Tmpv605,Tmpv606,Tmpv607,Tmpv608, &
       Tmpv609,Tmpv6010,Tmpv6011,Tmpv6012,Tmpv6013,Tmpv6014,Tmpv6015,Tmpv6016, &
       Tmpv6017,Tmpv6018,Tmpv6019
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv700,Tmpv701,Tmpv702,Tmpv703
   REAL,DIMENSION(kts:kte,jts-2:jte+2) :: Tmpv704,Tmpv705,Tmpv706,Tmpv707,Tmpv708, &
       Tmpv709,Tmpv710,Tmpv711,Tmpv712,Tmpv713,Tmpv714,Tmpv715,Tmpv716, &
       Tmpv717,Tmpv718,Tmpv719
   REAL,DIMENSION(its-2:ite+2,kts:kte,jts-2:jte+2) :: Tmpv800,Tmpv801,Tmpv802,Tmpv803
   REAL,DIMENSION(its-2:ite+2,jts-2:jte+2) :: Tmpv804,Tmpv805,Tmpv806,Tmpv807,Tmpv808, &
       Tmpv809,Tmpv810,Tmpv811

!PART II: CALCULATIONS OF B. S. TRAJECTORY

!LPB[0]
     ktf=MIN(kte,kde-1)
     horz_order = config_flags%h_sca_adv_order
     vert_order = config_flags%v_sca_adv_order

     degrade_xs = .true.
     degrade_xe = .true.
     degrade_ys = .true.
     degrade_ye = .true.

     IF( config_flags%periodic_x   .or. &
         config_flags%symmetric_xs .or. &
         (its > ids+3)                ) degrade_xs = .false.
     IF( config_flags%periodic_x   .or. &
         config_flags%symmetric_xe .or. &
         (ite < ide-4)                ) degrade_xe = .false.
     IF( config_flags%periodic_y   .or. &
         config_flags%symmetric_ys .or. &
         (jts > jds+3)                ) degrade_ys = .false.
     IF( config_flags%periodic_y   .or. &
         config_flags%symmetric_ye .or. &
         (jte < jde-4)                ) degrade_ye = .false.

!PART III: INITIALIZATION OF LOCAL ADJOINT PERTURBATIONS

   a_ub =0.0
   a_vb =0.0

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqx(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqy(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqz(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqxl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqyl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_fqzl(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_qmin(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_qmax(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_scale_in(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   Do K2_ADJ =jts-2, jte+2
   Do K1_ADJ =kts, kte
   Do K0_ADJ =its-2, ite+2
   a_scale_out(K0_ADJ,K1_ADJ,K2_ADJ) =0.0
   End Do
   End Do
   End Do

   a_ph_upwind =0.0
   a_flux_out =0.0
   a_ph_low =0.0
   a_flux_in =0.0
   a_ph_hi =0.0
   a_scale =0.0
   a_vel =0.0
   a_cr =0.0

!PART IV: REVERSE/BACKWARD ACCUMULATIONS

!LPB[35]
   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)

   IF(degrade_ys) j_start = MAX(jts,jds+1)
   IF(degrade_ye) j_end   = MIN(jte,jde-2)

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv6 =a_tendency(i,k,j)
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =msftx(i,j)*a_Tmpv5
   a_Tmpv3 =rdy*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqyl(i,k,j+1) =a_fqyl(i,k,j+1) +a_Tmpv2
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +a_Tmpv1
   a_fqy(i,k,j) =a_fqy(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

!LPB[30]
   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)
   IF(degrade_xs) i_start = MAX(its,ids+1)
   IF(degrade_xe) i_end   = MIN(ite,ide-2)

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv6 =a_tendency(i,k,j)
   a_Tmpv5 =-a_Tmpv6
   a_Tmpv4 =msftx(i,j)*a_Tmpv5
   a_Tmpv3 =rdx*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqxl(i+1,k,j) =a_fqxl(i+1,k,j) +a_Tmpv2
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

!LPB[29]

!LPB[25]
   i_start = its
   i_end   = MIN(ite,ide-1)
   j_start = jts
   j_end   = MIN(jte,jde-1)

   DO j =j_end, j_start, -1

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   a_Tmpv5 =a_tendency(i,k,j)
   a_Tmpv4 =-a_Tmpv5
   a_Tmpv3 =rdzw(k)*a_Tmpv4
   a_Tmpv2 =a_Tmpv3
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv3
   a_Tmpv1 =a_Tmpv2
   a_fqzl(i,k+1,j) =a_fqzl(i,k+1,j) +a_Tmpv2
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +a_Tmpv1
   a_fqz(i,k,j) =a_fqz(i,k,j) -a_Tmpv1
   ENDDO
   ENDDO

   ENDDO

!LPB[1]
   DO j=jts-2,jte+2
   DO k =kts, kte
   DO i =its-2, ite+2
   qmin(i,k,j) =field_old(i,k,j)
   qmax(i,k,j) =field_old(i,k,j)
   scale_in(i,k,j) =1.
   scale_out(i,k,j) =1.
   fqx(i,k,j) =0.
   fqy(i,k,j) =0.
   fqz(i,k,j) =0.
   fqxl(i,k,j) =0.
   fqyl(i,k,j) =0.
   fqzl(i,k,j) =0.
   ENDDO
   ENDDO
   ENDDO

!LPB[3]
   IF( horz_order == 5 ) THEN
   ktf =min(kte, kde-1)
   i_start =its-1
   i_end =min(ite, ide-1) +1
   j_start =jts-1
   j_end =min(jte, jde-1) +1
   j_start_f =j_start
   j_end_f =j_end+1
   IF(degrade_xs) i_start =max(its-1, ids)
   IF(degrade_xe) i_end =min(ite+1, ide-1)
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   j_start_f =jds+3
   ENDIF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   j_end_f =jde-3
   ENDIF

   DO j =j_start, j_end+1
   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   vel =rv(i,k,j)
   Tmpv400(i,k,j) =vel

   cr =vel
   Tmpv401(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),vel)
   Tmpv402(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv402(i,k,j)
   fqyl(i,k,j) =Tmpv002

   Tmpv001 =flux5(field(i,k,j-3),field(i,k,j-2),field(i,k,j-1),field(i,k,j)  &
   ,field(i,k,j+1),field(i,k,j+2),vel)
   Tmpv403(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv403(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv600(i,k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k,j-1))
   qmax(i,k,j) =Tmpv001

   Tmpv601(i,k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k,j-1))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv602(i,k,j-1) = qmax(i,k,j-1)
   Tmpv001 =max(qmax(i,k,j-1), field_old(i,k,j))
   qmax(i,k,j-1) =Tmpv001

   Tmpv603(i,k,j-1) = qmin(i,k,j-1)
   Tmpv001 =min(qmin(i,k,j-1), field_old(i,k,j))
   qmin(i,k,j-1) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ELSE IF( j == jds+1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   vel =rv(i,k,j)
   Tmpv404(i,k,j) =vel

   cr =vel
   Tmpv405(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv406(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv406(i,k,j)
   fqyl(i,k,j) =Tmpv002

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv407(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv407(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv604(i,k) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k,j-1))
   qmax(i,k,j) =Tmpv001

   Tmpv605(i,k) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k,j-1))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv606(i,k) = qmax(i,k,j-1)
   Tmpv001 =max(qmax(i,k,j-1), field_old(i,k,j))
   qmax(i,k,j-1) =Tmpv001

   Tmpv607(i,k) = qmin(i,k,j-1)
   Tmpv001 =min(qmin(i,k,j-1), field_old(i,k,j))
   qmin(i,k,j-1) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ELSE IF( j == jds+2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   vel =rv(i,k,j)
   Tmpv408(i,k,j) =vel

   cr =vel
   Tmpv409(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4010(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4010(i,k,j)
   fqyl(i,k,j) =Tmpv002

   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv4011(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4011(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv608(i,k) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k,j-1))
   qmax(i,k,j) =Tmpv001

   Tmpv609(i,k) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k,j-1))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv6010(i,k) = qmax(i,k,j-1)
   Tmpv001 =max(qmax(i,k,j-1), field_old(i,k,j))
   qmax(i,k,j-1) =Tmpv001

   Tmpv6011(i,k) = qmin(i,k,j-1)
   Tmpv001 =min(qmin(i,k,j-1), field_old(i,k,j))
   qmin(i,k,j-1) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ELSE IF( j == jde-1 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   vel =rv(i,k,j)
   Tmpv4012(i,k,j) =vel

   cr =vel
   Tmpv4013(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4014(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4014(i,k,j)
   fqyl(i,k,j) =Tmpv002

   Tmpv001 =field(i,k,j) +field(i,k,j-1)
   Tmpv4015(i,k,j) =Tmpv001
   Tmpv002 =0.5*rv(i,k,j)*Tmpv4015(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv6012(i,k) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k,j-1))
   qmax(i,k,j) =Tmpv001

   Tmpv6013(i,k) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k,j-1))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv6014(i,k) = qmax(i,k,j-1)
   Tmpv001 =max(qmax(i,k,j-1), field_old(i,k,j))
   qmax(i,k,j-1) =Tmpv001

   Tmpv6015(i,k) = qmin(i,k,j-1)
   Tmpv001 =min(qmin(i,k,j-1), field_old(i,k,j))
   qmin(i,k,j-1) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ELSE IF( j == jde-2 ) THEN

   DO k =kts, ktf
   DO i =i_start, i_end
   vel =rv(i,k,j)
   Tmpv4016(i,k,j) =vel

   cr =vel
   Tmpv4017(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k,j-1),field_old(i,k,j),cr)
   Tmpv4018(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4018(i,k,j)
   fqyl(i,k,j) =Tmpv002

   Tmpv001 =flux3(field(i,k,j-2),field(i,k,j-1),field(i,k,j),field(i,k,j+1),vel)
   Tmpv4019(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4019(i,k,j)
   fqy(i,k,j) =Tmpv002

   Tmpv001 =fqy(i,k,j) -fqyl(i,k,j)
   fqy(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv6016(i,k) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k,j-1))
   qmax(i,k,j) =Tmpv001

   Tmpv6017(i,k) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k,j-1))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv6018(i,k) = qmax(i,k,j-1)
   Tmpv001 =max(qmax(i,k,j-1), field_old(i,k,j))
   qmax(i,k,j-1) =Tmpv001

   Tmpv6019(i,k) = qmin(i,k,j-1)
   Tmpv001 =min(qmin(i,k,j-1), field_old(i,k,j))
   qmin(i,k,j-1) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ENDIF
   ENDDO

   i_start =its-1
   i_end =min(ite, ide-1) +1
   i_start_f =i_start
   i_end_f =i_end+1
   j_start =jts-1
   j_end =min(jte, jde-1) +1
   IF(degrade_ys) j_start =max(jts-1, jds)
   IF(degrade_ye) j_end =min(jte+1, jde-1)
   IF(degrade_xs) THEN 
   i_start =max(ids+1, its-1)
   i_start_f =ids+3
   ENDIF
   IF(degrade_xe) THEN
   i_end =min(ide-2, ite+1)
   i_end_f =ide-3
   ENDIF

   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start_f, i_end_f
   vel =ru(i,k,j)
   Tmpv4020(i,k,j) =vel

   cr =vel
   Tmpv4021(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4022(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4022(i,k,j)
   fqxl(i,k,j) =Tmpv002

   Tmpv001 =flux5(field(i-3,k,j),field(i-2,k,j),field(i-1,k,j),field(i,k,j)  &
   ,field(i+1,k,j),field(i+2,k,j),vel)
   Tmpv4023(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv4023(i,k,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv700(i,k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i-1,k,j))
   qmax(i,k,j) =Tmpv001

   Tmpv701(i,k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i-1,k,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv702(i-1,k,j) = qmax(i-1,k,j)
   Tmpv001 =max(qmax(i-1,k,j), field_old(i,k,j))
   qmax(i-1,k,j) =Tmpv001

   Tmpv703(i-1,k,j) = qmin(i-1,k,j)
   Tmpv001 =min(qmin(i-1,k,j), field_old(i,k,j))
   qmin(i-1,k,j) =Tmpv001

   end IF
   ENDDO
   ENDDO

   IF( degrade_xs ) THEN

   DO i =i_start, i_start_f-1
   IF(i == ids+1) THEN

   DO k =kts, ktf
   vel =ru(i,k,j)
   Tmpv4024(k,i,j) =vel

   cr =vel
   Tmpv4025(k,i,j) =cr

   Tmpv001 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4026(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4026(k,i,j)
   fqxl(i,k,j) =Tmpv002

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv4027(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv4027(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv704(k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i-1,k,j))
   qmax(i,k,j) =Tmpv001

   Tmpv705(k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i-1,k,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv706(k,j) = qmax(i-1,k,j)
   Tmpv001 =max(qmax(i-1,k,j), field_old(i,k,j))
   qmax(i-1,k,j) =Tmpv001

   Tmpv707(k,j) = qmin(i-1,k,j)
   Tmpv001 =min(qmin(i-1,k,j), field_old(i,k,j))
   qmin(i-1,k,j) =Tmpv001

   end IF
   ENDDO
   ENDIF
   IF(i == ids+2) THEN

   DO k =kts, ktf
   vel =ru(i,k,j)
   Tmpv4028(k,i,j) =vel

   cr =vel
   Tmpv4029(k,i,j) =cr

   Tmpv001 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4030(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4030(k,i,j)
   fqxl(i,k,j) =Tmpv002

   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv4031(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4031(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv708(k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i-1,k,j))
   qmax(i,k,j) =Tmpv001

   Tmpv709(k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i-1,k,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv710(k,j) = qmax(i-1,k,j)
   Tmpv001 =max(qmax(i-1,k,j), field_old(i,k,j))
   qmax(i-1,k,j) =Tmpv001

   Tmpv711(k,j) = qmin(i-1,k,j)
   Tmpv001 =min(qmin(i-1,k,j), field_old(i,k,j))
   qmin(i-1,k,j) =Tmpv001

   end IF
   ENDDO
   ENDIF
   ENDDO
   ENDIF
   IF( degrade_xe ) THEN

   DO i =i_end_f+1, i_end+1
   IF( i == ide-1 ) THEN

   DO k =kts, ktf
   vel =ru(i,k,j)
   Tmpv4032(k,i,j) =vel

   cr =vel
   Tmpv4033(k,i,j) =cr

   Tmpv001 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4034(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4034(k,i,j)
   fqxl(i,k,j) =Tmpv002

   Tmpv001 =field(i,k,j) +field(i-1,k,j)
   Tmpv4035(k,i,j) =Tmpv001
   Tmpv002 =0.5*(ru(i,k,j))*Tmpv4035(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv712(k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i-1,k,j))
   qmax(i,k,j) =Tmpv001

   Tmpv713(k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i-1,k,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv714(k,j) = qmax(i-1,k,j)
   Tmpv001 =max(qmax(i-1,k,j), field_old(i,k,j))
   qmax(i-1,k,j) =Tmpv001

   Tmpv715(k,j) = qmin(i-1,k,j)
   Tmpv001 =min(qmin(i-1,k,j), field_old(i,k,j))
   qmin(i-1,k,j) =Tmpv001

   end IF
   ENDDO
   ENDIF
   IF( i == ide-2 ) THEN

   DO k =kts, ktf
   vel =ru(i,k,j)
   Tmpv4036(k,i,j) =vel

   cr =vel
   Tmpv4037(k,i,j) =cr

   Tmpv001 =flux_upwind(field_old(i-1,k,j),field_old(i,k,j),cr)
   Tmpv4038(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4038(k,i,j)
   fqxl(i,k,j) =Tmpv002

   Tmpv001 =flux3(field(i-2,k,j),field(i-1,k,j),field(i,k,j),field(i+1,k,j),vel)
   Tmpv4039(k,i,j) =Tmpv001
   Tmpv002 =vel*Tmpv4039(k,i,j)
   fqx(i,k,j) =Tmpv002

   Tmpv001 =fqx(i,k,j) -fqxl(i,k,j)
   fqx(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv716(k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i-1,k,j))
   qmax(i,k,j) =Tmpv001

   Tmpv717(k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i-1,k,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv718(k,j) = qmax(i-1,k,j)
   Tmpv001 =max(qmax(i-1,k,j), field_old(i,k,j))
   qmax(i-1,k,j) =Tmpv001

   Tmpv719(k,j) = qmin(i-1,k,j)
   Tmpv001 =min(qmin(i-1,k,j), field_old(i,k,j))
   qmin(i-1,k,j) =Tmpv001

   end IF
   ENDDO
   ENDIF
   ENDDO
   ENDIF
   ENDDO

   ELSE
   WRITE ( wrf_err_message , * ) 'a_module_advect: a_advect_scalar_mono, h_order not known ',horz_order
   CALL wrf_error_fatal(Trim(wrf_err_message))

   ENDIF

   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1
   IF(degrade_xs) i_start = MAX(its-1,ids)
   IF(degrade_xe) i_end   = MIN(ite+1,ide-1)
   IF(degrade_ys) j_start = MAX(jts-1,jds)
   IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

   IF(vert_order == 3) THEN
   DO j =j_start, j_end
   DO i =i_start, i_end
   fqz(i,1,j) =0.
   fqzl(i,1,j) =0.
   fqz(i,kde,j) =0.
   fqzl(i,kde,j) =0.
   ENDDO

   DO k =kts+2, ktf-1
   DO i =i_start, i_end
   vel =rom(i,k,j)
   Tmpv1400(i,k,j) =vel

   cr =-vel
   Tmpv1401(i,k,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv1402(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv1402(i,k,j)
   fqzl(i,k,j) =Tmpv002

   Tmpv001 =flux3(field(i,k-2,j),field(i,k-1,j),field(i,k,j),field(i,k+1,j),-vel)
   Tmpv1403(i,k,j) =Tmpv001
   Tmpv002 =vel*Tmpv1403(i,k,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv800(i,k,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k-1,j))
   qmax(i,k,j) =Tmpv001

   Tmpv801(i,k,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k-1,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv802(i,k-1,j) = qmax(i,k-1,j)
   Tmpv001 =max(qmax(i,k-1,j), field_old(i,k,j))
   qmax(i,k-1,j) =Tmpv001

   Tmpv803(i,k-1,j) = qmin(i,k-1,j)
   Tmpv001 =min(qmin(i,k-1,j), field_old(i,k,j))
   qmin(i,k-1,j) =Tmpv001

   end IF
   ENDDO
   ENDDO

   DO i =i_start, i_end
   k =kts+1
   vel =rom(i,k,j)
   Tmpv300(i,j) =vel

   cr =-vel
   Tmpv301(i,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv302(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv302(i,j)
   fqzl(i,k,j) =Tmpv002

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv303(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv303(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv804(i,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k-1,j))
   qmax(i,k,j) =Tmpv001

   Tmpv805(i,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k-1,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv806(i,j) = qmax(i,k-1,j)
   Tmpv001 =max(qmax(i,k-1,j), field_old(i,k,j))
   qmax(i,k-1,j) =Tmpv001

   Tmpv807(i,j) = qmin(i,k-1,j)
   Tmpv001 =min(qmin(i,k-1,j), field_old(i,k,j))
   qmin(i,k-1,j) =Tmpv001

   end IF
   k =ktf
   vel =rom(i,k,j)
   Tmpv304(i,j) =vel

   cr =-vel
   Tmpv305(i,j) =cr

   Tmpv001 =flux_upwind(field_old(i,k-1,j),field_old(i,k,j),cr)
   Tmpv306(i,j) =Tmpv001
   Tmpv002 =vel*Tmpv306(i,j)
   fqzl(i,k,j) =Tmpv002

   Tmpv001 =fzm(k)*field(i,k,j) +fzp(k)*field(i,k-1,j)
   Tmpv307(i,j) =Tmpv001
   Tmpv002 =rom(i,k,j)*Tmpv307(i,j)
   fqz(i,k,j) =Tmpv002

   Tmpv001 =fqz(i,k,j) -fqzl(i,k,j)
   fqz(i,k,j) =Tmpv001

   IF(cr.gt. 0) THEN
   Tmpv808(i,j) = qmax(i,k,j)
   Tmpv001 =max(qmax(i,k,j), field_old(i,k-1,j))
   qmax(i,k,j) =Tmpv001

   Tmpv809(i,j) = qmin(i,k,j)
   Tmpv001 =min(qmin(i,k,j), field_old(i,k-1,j))
   qmin(i,k,j) =Tmpv001

   else
   Tmpv810(i,j) = qmax(i,k-1,j)
   Tmpv001 =max(qmax(i,k-1,j), field_old(i,k,j))
   qmax(i,k-1,j) =Tmpv001

   Tmpv811(i,j) = qmin(i,k-1,j)
   Tmpv001 =min(qmin(i,k-1,j), field_old(i,k,j))
   qmin(i,k-1,j) =Tmpv001

   end IF
   ENDDO
   ENDDO
   ELSE
   WRITE ( wrf_err_message , * ) 'a_module_advect: a_advect_scalar_mono, v_order not known ',vert_order
   CALL wrf_error_fatal(wrf_err_message)

   ENDIF

!LPB[23]
   IF(mono_limit) THEN
   i_start =its-1
   Tmpv001 =min(ite, ide-1) +1
   i_end =Tmpv001
   j_start =jts-1
   Tmpv001 =min(jte, jde-1) +1
   j_end =Tmpv001
   IF(degrade_xs) THEN
   i_start =max(its-1, ids)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-1)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-1)
   END IF
   IF(config_flags%specified .or. config_flags%nested) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF
   IF(config_flags%open_xs) THEN
   IF(degrade_xs) THEN
   i_start =max(its-1, ids+1)
   END IF
   END IF
   IF(config_flags%open_xe) THEN
   IF(degrade_xe) THEN
   i_end =min(ite+1, ide-2)
   END IF
   END IF
   IF(config_flags%open_ys) THEN
   IF(degrade_ys) THEN
   j_start =max(jts-1, jds+1)
   END IF
   END IF
   IF(config_flags%open_ye) THEN
   IF(degrade_ye) THEN
   j_end =min(jte+1, jde-2)
   END IF
   END IF
   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start, i_end
   Tmpv001 =(mub(i,j) +mu_old(i,j))*field_old(i,k,j)
   Tmpv002 =fqxl(i+1,k,j) -fqxl(i,k,j)
   Tmpv003 =rdx*Tmpv002
   Tmpv004 =fqyl(i,k,j+1) -fqyl(i,k,j)
   Tmpv005 =rdy*Tmpv004
   Tmpv006 =Tmpv003 +Tmpv005
   Tmpv007 =msftx(i,j)*msfty(i,j)*Tmpv006
   Tmpv008 =fqzl(i,k+1,j) -fqzl(i,k,j)
   Tmpv009 =msfty(i,j)*rdzw(k)*Tmpv008
   Tmpv010 =Tmpv007 +Tmpv009
   Tmpv011 =dt*Tmpv010
   Tmpv012 =Tmpv001 -Tmpv011
   ph_upwind =Tmpv012  ! Remark removed by Ning Pan, 2010-07-26

   Tmpv001 =min(0., fqx(i+1,k,j)) -max(0., fqx(i,k,j))
   Tmpv002 =rdx*Tmpv001
   Tmpv003 =min(0., fqy(i,k,j+1)) -max(0., fqy(i,k,j))
   Tmpv004 =rdy*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =(msftx(i,j)*msfty(i,j))*Tmpv005
   Tmpv007 =max(0., fqz(i,k+1,j)) -min(0., fqz(i,k,j))
   Tmpv008 =msfty(i,j)*rdzw(k)*Tmpv007
   Tmpv009 =Tmpv006 +Tmpv008
   Tmpv010 =-dt*Tmpv009
   flux_in =Tmpv010
   Tmpv2400(i,k,j) =flux_in

   Tmpv502(i,k,j) = qmax(i,k,j)  ! Added by Ning Pan, 2010-07-26
   Tmpv001 =mut(i,j)*qmax(i,k,j)
   Tmpv002 =Tmpv001 -ph_upwind
   ph_hi =Tmpv002
   Tmpv2401(i,k,j) =ph_hi

   IF( flux_in .gt. ph_hi ) THEN
   Tmpv001 =ph_hi/(flux_in +eps)
   Tmpv2402(i,k,j) =Tmpv001
   scale_in(i,k,j) =max(0., Tmpv2402(i,k,j))

   END IF
   Tmpv001 =max(0., fqx(i+1,k,j)) -min(0., fqx(i,k,j))
   Tmpv002 =rdx*Tmpv001
   Tmpv003 =max(0., fqy(i,k,j+1)) -min(0., fqy(i,k,j))
   Tmpv004 =rdy*Tmpv003
   Tmpv005 =Tmpv002 +Tmpv004
   Tmpv006 =(msftx(i,j)*msfty(i,j))*Tmpv005
   Tmpv007 =min(0., fqz(i,k+1,j)) -max(0., fqz(i,k,j))
   Tmpv008 =msfty(i,j)*rdzw(k)*Tmpv007
   Tmpv009 =Tmpv006 +Tmpv008
   Tmpv010 =dt*Tmpv009
   flux_out =Tmpv010
   Tmpv2403(i,k,j) =flux_out

   Tmpv503(i,k,j) = qmin(i,k,j)  ! Added by Ning Pan, 2010-07-26
   Tmpv001 =mut(i,j)*qmin(i,k,j)
   Tmpv002 =ph_upwind -Tmpv001
   ph_low =Tmpv002
   Tmpv2404(i,k,j) =ph_low

   IF( flux_out .gt. ph_low ) THEN
   Tmpv001 =ph_low/(flux_out +eps)
   Tmpv2405(i,k,j) =Tmpv001
   scale_out(i,k,j) =max(0., Tmpv2405(i,k,j))

   END IF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_start, j_end
   DO k =kts, ktf
   DO i =i_start, i_end+1
   IF( fqx (i,k,j) .gt. 0.) THEN
   Tmpv001 =min(scale_in(i,k,j), scale_out(i-1,k,j))
   Tmpv2406(i,k,j) =Tmpv001
   Tmpv002 =Tmpv2406(i,k,j)*fqx(i,k,j)

   ELSE
   Tmpv001 =min(scale_out(i,k,j), scale_in(i-1,k,j))
   Tmpv2408(i,k,j) =Tmpv001
   Tmpv002 =Tmpv2408(i,k,j)*fqx(i,k,j)

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_start, j_end+1
   DO k =kts, ktf
   DO i =i_start, i_end
   IF( fqy (i,k,j) .gt. 0.) THEN
   Tmpv001 =min(scale_in(i,k,j), scale_out(i,k,j-1))
   Tmpv24010(i,k,j) =Tmpv001
   Tmpv002 =Tmpv24010(i,k,j)*fqy(i,k,j)

   ELSE
   Tmpv001 =min(scale_out(i,k,j), scale_in(i,k,j-1))
   Tmpv24012(i,k,j) =Tmpv001
   Tmpv002 =Tmpv24012(i,k,j)*fqy(i,k,j)

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_start, j_end
   DO k =kts+1, ktf
   DO i =i_start, i_end
   IF( fqz (i,k,j) .lt. 0.) THEN
   Tmpv001 =min(scale_in(i,k,j), scale_out(i,k-1,j))
   Tmpv24014(i,k,j) =Tmpv001
   Tmpv002 =Tmpv24014(i,k,j)*fqz(i,k,j)

   ELSE
   Tmpv001 =min(scale_out(i,k,j), scale_in(i,k-1,j))
   Tmpv24016(i,k,j) =Tmpv001
   Tmpv002 =Tmpv24016(i,k,j)*fqz(i,k,j)

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   END IF

   IF(mono_limit) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts+1, -1
   DO i =i_end, i_start, -1

   IF( fqz (i,k,j) .lt. 0.) THEN

   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_Tmpv1 =fqz(i,k,j)*a_Tmpv2
   a_fqz(i,k,j) =a_fqz(i,k,j) +Tmpv24014(i,k,j)*a_Tmpv2
   a_scale_in(i,k,j) =a_scale_in(i,k,j)  +(1.0 -sign(1.0, scale_in(i,k,j)  &
    -scale_out(i,k-1,j)))*0.5*1.0*a_Tmpv1
   a_scale_out(i,k-1,j) =a_scale_out(i,k-1,j)  +(1.0 +sign(1.0, scale_in(i,k,j)  &
    -scale_out(i,k-1,j)))*0.5*1.0*a_Tmpv1

   ELSE

   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_Tmpv1 =fqz(i,k,j)*a_Tmpv2
   a_fqz(i,k,j) =a_fqz(i,k,j) +Tmpv24016(i,k,j)*a_Tmpv2
   a_scale_out(i,k,j) =a_scale_out(i,k,j)  +(1.0 -sign(1.0, scale_out(i,k,j)  &
    -scale_in(i,k-1,j)))*0.5*1.0*a_Tmpv1
   a_scale_in(i,k-1,j) =a_scale_in(i,k-1,j)  +(1.0 +sign(1.0, scale_out(i,k,j)  &
    -scale_in(i,k-1,j)))*0.5*1.0*a_Tmpv1

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_end+1, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1

   IF( fqy (i,k,j) .gt. 0.) THEN

   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_Tmpv1 =fqy(i,k,j)*a_Tmpv2
   a_fqy(i,k,j) =a_fqy(i,k,j) +Tmpv24010(i,k,j)*a_Tmpv2
   a_scale_in(i,k,j) =a_scale_in(i,k,j)  +(1.0 -sign(1.0, scale_in(i,k,j)  &
    -scale_out(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_scale_out(i,k,j-1) =a_scale_out(i,k,j-1)  +(1.0 +sign(1.0, scale_in(i,k,j)  &
    -scale_out(i,k,j-1)))*0.5*1.0*a_Tmpv1

   ELSE

   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_Tmpv1 =fqy(i,k,j)*a_Tmpv2
   a_fqy(i,k,j) =a_fqy(i,k,j) +Tmpv24012(i,k,j)*a_Tmpv2
   a_scale_out(i,k,j) =a_scale_out(i,k,j)  +(1.0 -sign(1.0, scale_out(i,k,j)  &
    -scale_in(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_scale_in(i,k,j-1) =a_scale_in(i,k,j-1)  +(1.0 +sign(1.0, scale_out(i,k,j)  &
    -scale_in(i,k,j-1)))*0.5*1.0*a_Tmpv1

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end+1, i_start, -1

   IF( fqx (i,k,j) .gt. 0.) THEN

   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_Tmpv1 =fqx(i,k,j)*a_Tmpv2
   a_fqx(i,k,j) =a_fqx(i,k,j) +Tmpv2406(i,k,j)*a_Tmpv2
   a_scale_in(i,k,j) =a_scale_in(i,k,j)  +(1.0 -sign(1.0, scale_in(i,k,j)  &
    -scale_out(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_scale_out(i-1,k,j) =a_scale_out(i-1,k,j)  +(1.0 +sign(1.0, scale_in(i,k,j)  &
    -scale_out(i-1,k,j)))*0.5*1.0*a_Tmpv1

   ELSE

!   fqx(i,k,j) =Tmpv409(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_Tmpv1 =fqx(i,k,j)*a_Tmpv2
! Revised by Ning Pan, 2010-07-26
!   a_fqx(i,k,j) =a_fqx(i,k,j) +Tmpv408(i,k,j)*a_Tmpv2
   a_fqx(i,k,j) =a_fqx(i,k,j) +Tmpv2408(i,k,j)*a_Tmpv2
   a_scale_out(i,k,j) =a_scale_out(i,k,j)  +(1.0 -sign(1.0, scale_out(i,k,j)  &
    -scale_in(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_scale_in(i-1,k,j) =a_scale_in(i-1,k,j)  +(1.0 +sign(1.0, scale_out(i,k,j)  &
    -scale_in(i-1,k,j)))*0.5*1.0*a_Tmpv1

   ENDIF
   ENDDO
   ENDDO
   ENDDO
   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   flux_out = Tmpv2403(i,k,j)
   ph_low = Tmpv2404(i,k,j)

   IF( flux_out .gt. ph_low ) THEN

   a_Tmpv1 = (1.0 +(-1.0)*sign(1.0, 0. -Tmpv2405(i,k,j)))*0.5*a_scale_out(i,k,j)  ! Added by Ning Pan, 2010-07-26
   a_scale_out(i,k,j) =0.0
   a_ph_low =a_ph_low +a_Tmpv1/(flux_out +eps)
   a_flux_out =a_flux_out -ph_low/((flux_out +eps)*(flux_out +eps))*a_Tmpv1

   END IF

   qmin(i,k,j) = Tmpv503(i,k,j)  ! Added by Ning Pan, 2010-07-26
   a_Tmpv2 =a_ph_low
   a_ph_low =0.0
   a_ph_upwind =a_ph_upwind +a_Tmpv2
   a_Tmpv1 =-a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +qmin(i,k,j)*a_Tmpv1
   a_qmin(i,k,j) =a_qmin(i,k,j) +mut(i,j)*a_Tmpv1

   a_Tmpv10 =a_flux_out
   a_flux_out =0.0
   a_Tmpv9 =dt*a_Tmpv10
   a_Tmpv6 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_Tmpv7 =msfty(i,j)*rdzw(k)*a_Tmpv8
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +(1.0 -(-1.0)*sign(1.0, 0. -fqz(i,k+1,j)))*0.5*a_Tmpv7
   a_fqz(i,k,j) =a_fqz(i,k,j) -(1.0 +(-1.0)*sign(1.0, 0. -fqz(i,k,j)))*0.5*a_Tmpv7
   a_Tmpv5 =(msftx(i,j)*msfty(i,j))*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =rdy*a_Tmpv4
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +(1.0 +(-1.0)*sign(1.0, 0. -fqy(i,k,j+1)))*0.5*a_Tmpv3
   a_fqy(i,k,j) =a_fqy(i,k,j) -(1.0 -(-1.0)*sign(1.0, 0. -fqy(i,k,j)))*0.5*a_Tmpv3
   a_Tmpv1 =rdx*a_Tmpv2
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +(1.0 +(-1.0)*sign(1.0, 0. -fqx(i+1,k,j)))*0.5*a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) -(1.0 -(-1.0)*sign(1.0, 0. -fqx(i,k,j)))*0.5*a_Tmpv1

   flux_in =Tmpv2400(i,k,j)
   ph_hi =Tmpv2401(i,k,j)

   IF( flux_in .gt. ph_hi ) THEN

   a_Tmpv1 = (1.0 +(-1.0)*sign(1.0, 0. -Tmpv2402(i,k,j)))*0.5*a_scale_in(i,k,j)  ! Added by Ning Pan, 2010-07-26
   a_scale_in(i,k,j) =0.0
   a_ph_hi =a_ph_hi +a_Tmpv1/(flux_in +eps)
   a_flux_in =a_flux_in -ph_hi/((flux_in +eps)*(flux_in +eps))*a_Tmpv1

   END IF

   qmax(i,k,j) = Tmpv502(i,k,j)  ! Added by Ning Pan, 2010-07-26
   a_Tmpv2 =a_ph_hi
   a_ph_hi =0.0
   a_Tmpv1 =a_Tmpv2
   a_ph_upwind =a_ph_upwind -a_Tmpv2
   a_mut(i,j) =a_mut(i,j) +qmax(i,k,j)*a_Tmpv1
   a_qmax(i,k,j) =a_qmax(i,k,j) +mut(i,j)*a_Tmpv1

   a_Tmpv10 =a_flux_in
   a_flux_in =0.0
   a_Tmpv9 =-dt*a_Tmpv10
   a_Tmpv6 =a_Tmpv9
   a_Tmpv8 =a_Tmpv9
   a_Tmpv7 =msfty(i,j)*rdzw(k)*a_Tmpv8
   a_fqz(i,k+1,j) =a_fqz(i,k+1,j) +(1.0 +(-1.0)*sign(1.0, 0. -fqz(i,k+1,j)))*0.5*a_Tmpv7
   a_fqz(i,k,j) =a_fqz(i,k,j) -(1.0 -(-1.0)*sign(1.0, 0. -fqz(i,k,j)))*0.5*a_Tmpv7
   a_Tmpv5 =(msftx(i,j)*msfty(i,j))*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_Tmpv3 =rdy*a_Tmpv4
   a_fqy(i,k,j+1) =a_fqy(i,k,j+1) +(1.0 -(-1.0)*sign(1.0, 0. -fqy(i,k,j+1)))*0.5*a_Tmpv3
   a_fqy(i,k,j) =a_fqy(i,k,j) -(1.0 +(-1.0)*sign(1.0, 0. -fqy(i,k,j)))*0.5*a_Tmpv3
   a_Tmpv1 =rdx*a_Tmpv2
   a_fqx(i+1,k,j) =a_fqx(i+1,k,j) +(1.0 -(-1.0)*sign(1.0, 0. -fqx(i+1,k,j)))*0.5*a_Tmpv1
   a_fqx(i,k,j) =a_fqx(i,k,j) -(1.0 +(-1.0)*sign(1.0, 0. -fqx(i,k,j)))*0.5*a_Tmpv1
   a_Tmpv12 =a_ph_upwind
   a_ph_upwind =0.0
   a_Tmpv1 =a_Tmpv12
   a_Tmpv11 =-a_Tmpv12
   a_Tmpv10 =dt*a_Tmpv11
   a_Tmpv7 =a_Tmpv10
   a_Tmpv9 =a_Tmpv10
   a_Tmpv8 =msfty(i,j)*rdzw(k)*a_Tmpv9
   a_fqzl(i,k+1,j) =a_fqzl(i,k+1,j) +a_Tmpv8
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv8
   a_Tmpv6 =msftx(i,j)*msfty(i,j)*a_Tmpv7
   a_Tmpv3 =a_Tmpv6
   a_Tmpv5 =a_Tmpv6
   a_Tmpv4 =rdy*a_Tmpv5
   a_fqyl(i,k,j+1) =a_fqyl(i,k,j+1) +a_Tmpv4
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv4
   a_Tmpv2 =rdx*a_Tmpv3
   a_fqxl(i+1,k,j) =a_fqxl(i+1,k,j) +a_Tmpv2
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv2
   a_mu_old(i,j) =a_mu_old(i,j) +field_old(i,k,j)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +(mub(i,j) +mu_old(i,j))*a_Tmpv1
   ENDDO
   ENDDO
   ENDDO

   END IF

!LPB[22]

   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1
   IF(degrade_xs) i_start = MAX(its-1,ids)
   IF(degrade_xe) i_end   = MIN(ite+1,ide-1)
   IF(degrade_ys) j_start = MAX(jts-1,jds)
   IF(degrade_ye) j_end   = MIN(jte+1,jde-1)

   IF(vert_order == 3) THEN

   DO j =j_end, j_start, -1
   DO i =i_end, i_start, -1
   k =ktf
   vel = Tmpv304(i,j)
   cr = Tmpv305(i,j)

   IF(cr.gt. 0) THEN
   qmax(i,k,j) = Tmpv808(i,j)
   qmin(i,k,j) = Tmpv809(i,j)

   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1
   else
   qmax(i,k-1,j) = Tmpv810(i,j)
   qmin(i,k-1,j) = Tmpv811(i,j)

   a_Tmpv1 =a_qmin(i,k-1,j)
   a_qmin(i,k-1,j) =0.0
   a_qmin(i,k-1,j) =a_qmin(i,k-1,j)  +(1.0 -sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k-1,j)
   a_qmax(i,k-1,j) =0.0
   a_qmax(i,k-1,j) =a_qmax(i,k-1,j)  +(1.0 +sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv307(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv2 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_vel =a_vel +Tmpv306(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv305(i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel -a_cr
   a_cr =0.0

!   vel =Tmpv304(i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0

! Added by Ning Pan, 2010-07-26
   k =kts+1
   vel =Tmpv300(i,j)
   cr =Tmpv301(i,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv804(i,j)
   qmin(i,k,j) = Tmpv805(i,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k-1,j) = Tmpv806(i,j)
   qmin(i,k-1,j) = Tmpv807(i,j)

   a_Tmpv1 =a_qmin(i,k-1,j)
   a_qmin(i,k-1,j) =0.0
   a_qmin(i,k-1,j) =a_qmin(i,k-1,j)  +(1.0 -sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k-1,j)
   a_qmax(i,k-1,j) =0.0
   a_qmax(i,k-1,j) =a_qmax(i,k-1,j)  +(1.0 +sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_rom(i,k,j) =a_rom(i,k,j) +Tmpv303(i,j)*a_Tmpv2
   a_Tmpv1 =rom(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +fzm(k)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +fzp(k)*a_Tmpv1
   a_Tmpv2 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
   a_vel =a_vel +Tmpv302(i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv301(i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel -a_cr
   a_cr =0.0

!   vel =Tmpv300(i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   DO k =ktf-1, kts+2, -1
   DO i =i_end, i_start, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv1400(i,k,j)
   cr =Tmpv1401(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv800(i,k,j)
   qmin(i,k,j) = Tmpv801(i,k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k-1,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k-1,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k-1,j) = Tmpv802(i,k-1,j)
   qmin(i,k-1,j) = Tmpv803(i,k-1,j)

   a_Tmpv1 =a_qmin(i,k-1,j)
   a_qmin(i,k-1,j) =0.0
   a_qmin(i,k-1,j) =a_qmin(i,k-1,j)  +(1.0 -sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k-1,j)
   a_qmax(i,k-1,j) =0.0
   a_qmax(i,k-1,j) =a_qmax(i,k-1,j)  +(1.0 +sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k-1,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
   a_fqz(i,k,j) =a_fqz(i,k,j) +a_Tmpv1
   a_fqzl(i,k,j) =a_fqzl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqz(i,k,j)
   a_fqz(i,k,j) =0.0
! Revised by Ning Pan, 2010-07-26
!   a_vel =a_vel +Tmpv403(i,k,j)*a_Tmpv2
   a_vel =a_vel +Tmpv1403(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel -Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j),0.0,field(i,k,j)  &
   ,0.0,field(i,k+1,j),0.0,-vel,1.0)*a_Tmpv1
   a_field(i,k+1,j) =a_field(i,k+1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),1.0,-vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,j)  &
   ,0.0,field(i,k,j),1.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-1,j) =a_field(i,k-1,j) +Diff_flux3(field(i,k-2,j),0.0,field(i,k-1,  &
   j),1.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1
   a_field(i,k-2,j) =a_field(i,k-2,j) +Diff_flux3(field(i,k-2,j),1.0,field(i,k-1,  &
   j),0.0,field(i,k,j),0.0,field(i,k+1,j),0.0,-vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqzl(i,k,j)
   a_fqzl(i,k,j) =0.0
! Revised by Ning Pan, 2010-07-26
!   a_vel =a_vel +Tmpv402(i,k,j)*a_Tmpv2
   a_vel =a_vel +Tmpv1402(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k-1,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k-1,j) =a_field_old(i,k-1,j) +Diff_flux_upwind(field_old(i,k-1,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv401(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel -a_cr
   a_cr =0.0

!   vel =Tmpv400(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rom(i,k,j) =a_rom(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO
   DO i =i_end, i_start, -1
   a_fqzl(i,kde,j) =0.0
   a_fqz(i,kde,j) =0.0
   a_fqzl(i,1,j) =0.0
   a_fqz(i,1,j) =0.0
   ENDDO
   ENDDO

   ELSE

   ENDIF

!LPB[12]

   i_start =its
   i_end =min(ite, ide-1)
   j_start =jts
   j_end =min(jte, jde-1)

!LPB[11]

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jte-1) +rv(i,k,jte)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,i) =Tmpv002
   vb =max(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =field_old(i,k,j_end) -field_old(i,k,j_end-1)
   Tmpv302(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv302(k,i)
   Tmpv003 =rv(i,k,jte) -rv(i,k,jte-1)
   Tmpv303(k,i) =Tmpv003
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ye) .and. (jte == jde)) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)  ! Added by Ning Pan, 2010-07-25
   a_Tmpv7 =a_tendency(i,k,j_end)
   a_tendency(i,k,j_end) =0.0
   a_tendency(i,k,j_end) =a_tendency(i,k,j_end) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,j_end) =a_field(i,k,j_end) +Tmpv303(k,i)*a_Tmpv4
   a_Tmpv3 =field(i,k,j_end)*a_Tmpv4
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv3
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) -a_Tmpv3
   a_vb =a_vb +Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,j_end) =a_field_old(i,k,j_end) +a_Tmpv1
   a_field_old(i,k,j_end-1) =a_field_old(i,k,j_end-1) -a_Tmpv1

   a_Tmpv2 = (1.0 +(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jte-1) =a_rv(i,k,jte-1) +a_Tmpv1
   a_rv(i,k,jte) =a_rv(i,k,jte) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[9]

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN
   DO i =i_start, i_end
   DO k =kts, ktf
   Tmpv001 =rv(i,k,jts) +rv(i,k,jts+1)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,i) =Tmpv002
   vb =min(Tmpv300(k,i), 0.)
   Tmpv301(k,i) =vb

   Tmpv001 =field_old(i,k,jts+1) -field_old(i,k,jts)
   Tmpv302(k,i) =Tmpv001
   Tmpv002 =vb*Tmpv302(k,i)
   Tmpv003 =rv(i,k,jts+1) -rv(i,k,jts)
   Tmpv303(k,i) =Tmpv003
   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_ys) .and. (jts == jds) ) THEN

   DO i =i_end, i_start, -1
   DO k =ktf, kts, -1
   vb =Tmpv301(k,i)  ! Added by Ning Pan, 2010-07-25
   a_Tmpv7 =a_tendency(i,k,jts)
   a_tendency(i,k,jts) =0.0
   a_tendency(i,k,jts) =a_tendency(i,k,jts) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdy*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i,k,jts) =a_field(i,k,jts) +Tmpv303(k,i)*a_Tmpv4
   a_Tmpv3 =field(i,k,jts)*a_Tmpv4
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv3
   a_rv(i,k,jts) =a_rv(i,k,jts) -a_Tmpv3
   a_vb =a_vb +Tmpv302(k,i)*a_Tmpv2
   a_Tmpv1 =vb*a_Tmpv2
   a_field_old(i,k,jts+1) =a_field_old(i,k,jts+1) +a_Tmpv1
   a_field_old(i,k,jts) =a_field_old(i,k,jts) -a_Tmpv1

!   vb =Tmpv301(k,i)  ! Remarked by Ning Pan, 2010-07-25

!STOP  ! Remarked by Ning Pan, 2010-07-25
!DELETED BY WALLS
!  (1.0 -(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5* =a_vb
   a_Tmpv2 = (1.0 -(1.0)*sign(1.0, Tmpv300(k,i) -0.))*0.5*a_vb
   a_vb =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_rv(i,k,jts) =a_rv(i,k,jts) +a_Tmpv1
   a_rv(i,k,jts+1) =a_rv(i,k,jts+1) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[8]

!LPB[7]
!   ub =Keep_Lpb7_ub  ! Remarked Ning Pan, 2010-07-25

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(ite-1,k,j) +ru(ite,k,j)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,j) =Tmpv002
! Revised by Ning Pan, 2010-07-25
!   Tmpv301(k,j) =ub
!   ub =max(Tmpv300(k,j), 0.)
   ub =max(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =field_old(i_end,k,j) -field_old(i_end-1,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv302(k,j)
   Tmpv003 =ru(ite,k,j) -ru(ite-1,k,j)
   Tmpv303(k,j) =Tmpv003
! Remarked by Ning Pan, 2010-07-25
!   Tmpv004 =field(i_end,k,j)*Tmpv303(k,j)
!   Tmpv005 =Tmpv002 +Tmpv004
!   Tmpv006 =rdx*Tmpv005
!   Tmpv007 =tendency(i_end,k,j) -Tmpv006
!!  tendency(i_end,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xe) .and. (ite == ide) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)  ! Added by Ning Pan, 2010-07-25
   a_Tmpv7 =a_tendency(i_end,k,j)
   a_tendency(i_end,k,j) =0.0
   a_tendency(i_end,k,j) =a_tendency(i_end,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(i_end,k,j) =a_field(i_end,k,j) +Tmpv303(k,j)*a_Tmpv4
   a_Tmpv3 =field(i_end,k,j)*a_Tmpv4
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv3
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(i_end,k,j) =a_field_old(i_end,k,j) +a_Tmpv1
   a_field_old(i_end-1,k,j) =a_field_old(i_end-1,k,j) -a_Tmpv1

!   ub =Tmpv301(k,j)  ! Remarked by Ning Pan, 2010-07-25

!STOP  ! Remarked by Ning Pan, 2010-07-25
!DELETED BY WALLS
!  (1.0 +(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5* =a_ub
   a_Tmpv2 = (1.0 +(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(ite-1,k,j) =a_ru(ite-1,k,j) +a_Tmpv1
   a_ru(ite,k,j) =a_ru(ite,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[6]

!LPB[5]

   IF( (config_flags%open_xs) .and. (its == ids) ) THEN
   DO j =j_start, j_end
   DO k =kts, ktf
   Tmpv001 =ru(its,k,j) +ru(its+1,k,j)
   Tmpv002 =0.5*Tmpv001
   Tmpv300(k,j) =Tmpv002
! Revised by Ning Pan, 2010-07-25
!   Tmpv301(k,j) =ub
!   ub =min(Tmpv300(k,j), 0.)
   ub =min(Tmpv300(k,j), 0.)
   Tmpv301(k,j) =ub

   Tmpv001 =field_old(its+1,k,j) -field_old(its,k,j)
   Tmpv302(k,j) =Tmpv001
   Tmpv002 =ub*Tmpv302(k,j)
   Tmpv003 =ru(its+1,k,j) -ru(its,k,j)
   Tmpv303(k,j) =Tmpv003
! Remarked by Ning Pan, 2010-07-25
!   Tmpv004 =field(its,k,j)*Tmpv303(k,j)
!   Tmpv005 =Tmpv002 +Tmpv004
!   Tmpv006 =rdx*Tmpv005
!   Tmpv007 =tendency(its,k,j) -Tmpv006
!!  tendency(its,k,j) =Tmpv007

   ENDDO
   ENDDO
   ENDIF

   IF( (config_flags%open_xs) .and. (its == ids) ) THEN

   DO j =j_end, j_start, -1
   DO k =ktf, kts, -1
   ub =Tmpv301(k,j)  ! Added by Ning Pan, 2010-07-25
   a_Tmpv7 =a_tendency(its,k,j)
   a_tendency(its,k,j) =0.0
   a_tendency(its,k,j) =a_tendency(its,k,j) +a_Tmpv7
   a_Tmpv6 =-a_Tmpv7
   a_Tmpv5 =rdx*a_Tmpv6
   a_Tmpv2 =a_Tmpv5
   a_Tmpv4 =a_Tmpv5
   a_field(its,k,j) =a_field(its,k,j) +Tmpv303(k,j)*a_Tmpv4
   a_Tmpv3 =field(its,k,j)*a_Tmpv4
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv3
   a_ru(its,k,j) =a_ru(its,k,j) -a_Tmpv3
   a_ub =a_ub +Tmpv302(k,j)*a_Tmpv2
   a_Tmpv1 =ub*a_Tmpv2
   a_field_old(its+1,k,j) =a_field_old(its+1,k,j) +a_Tmpv1
   a_field_old(its,k,j) =a_field_old(its,k,j) -a_Tmpv1

!   ub =Tmpv301(k,j)  ! Remarked by Ning Pan, 2010-07-25

!STOP  ! Remarked by Ning Pan, 2010-07-25
!DELETED BY WALLS
!  (1.0 -(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5* =a_ub
   a_Tmpv2 = (1.0 -(1.0)*sign(1.0, Tmpv300(k,j) -0.))*0.5*a_ub  ! Added by Ning Pan, 2010-07-25
   a_ub =0.0
   a_Tmpv1 =0.5*a_Tmpv2
   a_ru(its,k,j) =a_ru(its,k,j) +a_Tmpv1
   a_ru(its+1,k,j) =a_ru(its+1,k,j) +a_Tmpv1
   ENDDO
   ENDDO

   ENDIF

!LPB[3]

   IF( horz_order == 5 ) THEN
   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   i_start_f = i_start
   i_end_f   = i_end+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1
   IF(degrade_ys) j_start = MAX(jts-1,jds)
   IF(degrade_ye) j_end   = MIN(jte+1,jde-1)
   IF(degrade_xs) then
     i_start = MAX(ids+1,its-1)
     i_start_f = ids+3
   ENDIF
   IF(degrade_xe) then
     i_end = MIN(ide-2,ite+1)
     i_end_f = ide-3
   ENDIF

   DO j =j_end, j_start, -1

   IF( degrade_xe ) THEN

   DO i =i_end+1, i_end_f+1, -1

   IF( i == ide-2 ) THEN

   DO k =ktf, kts, -1
! Added by Ning Pan, 2010-07-26
   vel = Tmpv4036(k,i,j)
   cr = Tmpv4037(k,i,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv716(k,j)
   qmin(i,k,j) = Tmpv717(k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i-1,k,j) = Tmpv718(k,j)
   qmin(i-1,k,j) = Tmpv719(k,j)

   a_Tmpv1 =a_qmin(i-1,k,j)
   a_qmin(i-1,k,j) =0.0
   a_qmin(i-1,k,j) =a_qmin(i-1,k,j)  +(1.0 -sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i-1,k,j)
   a_qmax(i-1,k,j) =0.0
   a_qmax(i-1,k,j) =a_qmax(i-1,k,j)  +(1.0 +sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4039(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4038(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4037(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv4036(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0
   ENDDO

   ENDIF

   IF( i == ide-1 ) THEN

   DO k =ktf, kts, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv4032(k,i,j)
   cr =Tmpv4033(k,i,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv712(k,j)
   qmin(i,k,j) = Tmpv713(k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i-1,k,j) = Tmpv714(k,j)
   qmin(i-1,k,j) = Tmpv715(k,j)

   a_Tmpv1 =a_qmin(i-1,k,j)
   a_qmin(i-1,k,j) =0.0
   a_qmin(i-1,k,j) =a_qmin(i-1,k,j)  +(1.0 -sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i-1,k,j)
   a_qmax(i-1,k,j) =0.0
   a_qmax(i-1,k,j) =a_qmax(i-1,k,j)  +(1.0 +sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv4035(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv2 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4034(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4033(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv4032(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF

   IF( degrade_xs ) THEN

   DO i =i_start_f-1, i_start, -1

   IF(i == ids+2) THEN

   DO k =ktf, kts, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv4028(k,i,j)
   cr =Tmpv4029(k,i,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv708(k,j)
   qmin(i,k,j) = Tmpv709(k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i-1,k,j) = Tmpv710(k,j)
   qmin(i-1,k,j) = Tmpv711(k,j)

   a_Tmpv1 =a_qmin(i-1,k,j)
   a_qmin(i-1,k,j) =0.0
   a_qmin(i-1,k,j) =a_qmin(i-1,k,j)  +(1.0 -sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i-1,k,j)
   a_qmax(i-1,k,j) =0.0
   a_qmax(i-1,k,j) =a_qmax(i-1,k,j)  +(1.0 +sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4031(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j),0.0,field(i,k,j)  &
   ,0.0,field(i+1,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux3(field(i-2,k,j),0.0,field(i-1,k,  &
   j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux3(field(i-2,k,j),1.0,field(i-1,k,  &
   j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4030(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4029(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv4028(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0
   ENDDO

   ENDIF

   IF(i == ids+1) THEN

   DO k =ktf, kts, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv4024(k,i,j)
   cr =Tmpv4025(k,i,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv704(k,j)
   qmin(i,k,j) = Tmpv705(k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i-1,k,j) = Tmpv706(k,j)
   qmin(i-1,k,j) = Tmpv707(k,j)

   a_Tmpv1 =a_qmin(i-1,k,j)
   a_qmin(i-1,k,j) =0.0
   a_qmin(i-1,k,j) =a_qmin(i-1,k,j)  +(1.0 -sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i-1,k,j)
   a_qmax(i-1,k,j) =0.0
   a_qmax(i-1,k,j) =a_qmax(i-1,k,j)  +(1.0 +sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_ru(i,k,j) =a_ru(i,k,j) +0.5*Tmpv4027(k,i,j)*a_Tmpv2
   a_Tmpv1 =0.5*(ru(i,k,j))*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +a_Tmpv1
   a_Tmpv2 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4026(k,i,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4025(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv4024(k,i,j)  ! Remarked by Ning Pan, 2010-07-26

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0
   ENDDO

   ENDIF
   ENDDO

   ENDIF
   DO k =ktf, kts, -1
   DO i =i_end_f, i_start_f, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv4020(i,k,j)
   cr =Tmpv4021(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv700(i,k,j)
   qmin(i,k,j) = Tmpv701(i,k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i-1,k,j)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i-1,k,j)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i-1,k,j) = Tmpv702(i-1,k,j)
   qmin(i-1,k,j) = Tmpv703(i-1,k,j)

   a_Tmpv1 =a_qmin(i-1,k,j)
   a_qmin(i-1,k,j) =0.0
   a_qmin(i-1,k,j) =a_qmin(i-1,k,j)  +(1.0 -sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i-1,k,j)
   a_qmax(i-1,k,j) =0.0
   a_qmax(i-1,k,j) =a_qmax(i-1,k,j)  +(1.0 +sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i-1,k,j)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_fqx(i,k,j) =a_fqx(i,k,j) +a_Tmpv1
   a_fqxl(i,k,j) =a_fqxl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqx(i,k,j)
   a_fqx(i,k,j) =0.0
   a_vel =a_vel +Tmpv4023(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j),0.0,field(i-1,k,j)  &
   ,0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j),0.0,vel,1.0)*a_Tmpv1
   a_field(i+2,k,j) =a_field(i+2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i+1,k,j) =a_field(i+1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),1.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,j)  &
   ,0.0,field(i-1,k,j),0.0,field(i,k,j),1.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-1,k,j) =a_field(i-1,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),1.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-2,k,j) =a_field(i-2,k,j) +Diff_flux5(field(i-3,k,j),0.0,field(i-2,k,  &
   j),1.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i-3,k,j) =a_field(i-3,k,j) +Diff_flux5(field(i-3,k,j),1.0,field(i-2,k,  &
   j),0.0,field(i-1,k,j),0.0,field(i,k,j),0.0,field(i+1,k,j),0.0,field(i+2,k,j)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqxl(i,k,j)
   a_fqxl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4022(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i-1,k,j),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i-1,k,j) =a_field_old(i-1,k,j) +Diff_flux_upwind(field_old(i-1,k,j)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4021(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv4020(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_ru(i,k,j) =a_ru(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO
   ENDDO

! Remarked by Ning Pan, 2010-07-25
!   IF(degrade_xe) THEN

!   ENDIF

!   IF(degrade_xs) THEN

!   ENDIF

!   IF(degrade_ye) THEN

!   END IF

!   IF(degrade_ys) THEN

!   END IF

! Added by Ning Pan, 2010-07-26
   i_start = its-1
   i_end   = MIN(ite,ide-1)+1
   j_start = jts-1
   j_end   = MIN(jte,jde-1)+1
   j_start_f = j_start
   j_end_f   = j_end+1
   IF(degrade_xs) i_start = MAX(its-1,ids)
   IF(degrade_xe) i_end   = MIN(ite+1,ide-1)
   IF(degrade_ys) then
     j_start = MAX(jts-1,jds+1)
     j_start_f = jds+3
   ENDIF
   IF(degrade_ye) then
     j_end = MIN(jte+1,jde-2)
     j_end_f = jde-3
   ENDIF

   DO j =j_end+1, j_start, -1

   IF( (j >= j_start_f ) .and. (j <= j_end_f) ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
! Added by Ning Pan, 2010-07-26
   vel =Tmpv400(i,k,j)
   cr =Tmpv401(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv600(i,k,j)
   qmin(i,k,j) = Tmpv601(i,k,j)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j-1) = Tmpv602(i,k,j-1)
   qmin(i,k,j-1) = Tmpv603(i,k,j-1)

   a_Tmpv1 =a_qmin(i,k,j-1)
   a_qmin(i,k,j-1) =0.0
   a_qmin(i,k,j-1) =a_qmin(i,k,j-1)  +(1.0 -sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k,j-1)
   a_qmax(i,k,j-1) =0.0
   a_qmax(i,k,j-1) =a_qmax(i,k,j-1)  +(1.0 +sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv403(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+2) =a_field(i,k,j+2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-2)  &
   ,0.0,field(i,k,j-1),0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux5(field(i,k,j-3),0.0,field(i,k,j-  &
   2),1.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-3) =a_field(i,k,j-3) +Diff_flux5(field(i,k,j-3),1.0,field(i,k,j-  &
   2),0.0,field(i,k,j-1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,field(i,k,j+2)  &
   ,0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_vel =a_vel +Tmpv402(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,vel,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,vel,0.0)*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,vel,0.0)*a_Tmpv1

!   cr =Tmpv401(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv400(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
! Added by Ning Pan, 2010-07-26
   vel = Tmpv404(i,k,j)
   cr = Tmpv405(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv604(i,k)
   qmin(i,k,j) = Tmpv605(i,k)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j-1) = Tmpv606(i,k)
   qmin(i,k,j-1) = Tmpv607(i,k)

   a_Tmpv1 =a_qmin(i,k,j-1)
   a_qmin(i,k,j-1) =0.0
   a_qmin(i,k,j-1) =a_qmin(i,k,j-1)  +(1.0 -sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k,j-1)
   a_qmax(i,k,j-1) =0.0
   a_qmax(i,k,j-1) =a_qmax(i,k,j-1)  +(1.0 +sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv407(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv2 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_vel =a_vel +Tmpv406(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv405(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv404(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jds+2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
! Added by Ning Pan, 2010-07-26
   vel = Tmpv408(i,k,j)
   cr = Tmpv409(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv608(i,k)
   qmin(i,k,j) = Tmpv609(i,k)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j-1) = Tmpv6010(i,k)
   qmin(i,k,j-1) = Tmpv6011(i,k)

   a_Tmpv1 =a_qmin(i,k,j-1)
   a_qmin(i,k,j-1) =0.0
   a_qmin(i,k,j-1) =a_qmin(i,k,j-1)  +(1.0 -sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k,j-1)
   a_qmax(i,k,j-1) =0.0
   a_qmax(i,k,j-1) =a_qmax(i,k,j-1)  +(1.0 +sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv4011(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4010(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv409(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

!   vel =Tmpv408(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO

   ELSE IF( j == jde-1 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
! Added by Ning Pan, 2010-07-26
   vel = Tmpv4012(i,k,j)
   cr = Tmpv4013(i,k,j)

   IF(cr.gt. 0) THEN
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j) = Tmpv6012(i,k)
   qmin(i,k,j) = Tmpv6013(i,k)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1

   else
! Added by Ning Pan, 2010-07-26
   qmax(i,k,j-1) = Tmpv6014(i,k)
   qmin(i,k,j-1) = Tmpv6015(i,k)

   a_Tmpv1 =a_qmin(i,k,j-1)
   a_qmin(i,k,j-1) =0.0
   a_qmin(i,k,j-1) =a_qmin(i,k,j-1)  +(1.0 -sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k,j-1)
   a_qmax(i,k,j-1) =0.0
   a_qmax(i,k,j-1) =a_qmax(i,k,j-1)  +(1.0 +sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_rv(i,k,j) =a_rv(i,k,j) +0.5*Tmpv4015(i,k,j)*a_Tmpv2
   a_Tmpv1 =0.5*rv(i,k,j)*a_Tmpv2
   a_field(i,k,j) =a_field(i,k,j) +a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +a_Tmpv1
   a_Tmpv2 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4014(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

!   cr =Tmpv4013(i,k,j)  ! Remarked by Ning Pan, 2010-07-26

   a_vel =a_vel +a_cr
   a_cr =0.0

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0

   ENDDO
   ENDDO

   ELSE IF( j == jde-2 ) THEN

   DO k =ktf, kts, -1
   DO i =i_end, i_start, -1
   vel = Tmpv4016(i,k,j)
   cr = Tmpv4017(i,k,j)

   IF(cr.gt. 0) THEN
   qmax(i,k,j) = Tmpv6016(i,k)
   qmin(i,k,j) = Tmpv6017(i,k)

   a_Tmpv1 =a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_qmax(i,k,j) =a_qmax(i,k,j)  +(1.0 +sign(1.0, qmax(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 -sign(1.0, qmax(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   a_qmin(i,k,j) =a_qmin(i,k,j)  +(1.0 -sign(1.0, qmin(i,k,j) -field_old(i,k,j-1)  &
   ))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1)  +(1.0 +sign(1.0, qmin(i,k,j)  &
    -field_old(i,k,j-1)))*0.5*1.0*a_Tmpv1

   else
   qmax(i,k,j-1) = Tmpv6018(i,k)
   qmin(i,k,j-1) = Tmpv6019(i,k)

   a_Tmpv1 =a_qmin(i,k,j-1)
   a_qmin(i,k,j-1) =0.0
   a_qmin(i,k,j-1) =a_qmin(i,k,j-1)  +(1.0 -sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 +sign(1.0, qmin(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_Tmpv1 =a_qmax(i,k,j-1)
   a_qmax(i,k,j-1) =0.0
   a_qmax(i,k,j-1) =a_qmax(i,k,j-1)  +(1.0 +sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j)  +(1.0 -sign(1.0, qmax(i,k,j-1)  &
    -field_old(i,k,j)))*0.5*1.0*a_Tmpv1

   end IF
   a_Tmpv1 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_fqy(i,k,j) =a_fqy(i,k,j) +a_Tmpv1
   a_fqyl(i,k,j) =a_fqyl(i,k,j) -a_Tmpv1
   a_Tmpv2 =a_fqy(i,k,j)
   a_fqy(i,k,j) =0.0
   a_vel =a_vel +Tmpv4019(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_vel =a_vel +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1),0.0,field(i,k,j)  &
   ,0.0,field(i,k,j+1),0.0,vel,1.0)*a_Tmpv1
   a_field(i,k,j+1) =a_field(i,k,j+1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),1.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j) =a_field(i,k,j) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-1)  &
   ,0.0,field(i,k,j),1.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-1) =a_field(i,k,j-1) +Diff_flux3(field(i,k,j-2),0.0,field(i,k,j-  &
   1),1.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1
   a_field(i,k,j-2) =a_field(i,k,j-2) +Diff_flux3(field(i,k,j-2),1.0,field(i,k,j-  &
   1),0.0,field(i,k,j),0.0,field(i,k,j+1),0.0,vel,0.0)*a_Tmpv1

   a_Tmpv2 =a_fqyl(i,k,j)
   a_fqyl(i,k,j) =0.0
   a_vel =a_vel +Tmpv4018(i,k,j)*a_Tmpv2
   a_Tmpv1 =vel*a_Tmpv2
   a_cr =a_cr +Diff_flux_upwind(field_old(i,k,j-1),0.0,field_old(i,k,j)  &
   ,0.0,cr,1.0)*a_Tmpv1
   a_field_old(i,k,j) =a_field_old(i,k,j) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,0.0,field_old(i,k,j),1.0,cr,0.0)*a_Tmpv1
   a_field_old(i,k,j-1) =a_field_old(i,k,j-1) +Diff_flux_upwind(field_old(i,k,j-1)  &
   ,1.0,field_old(i,k,j),0.0,cr,0.0)*a_Tmpv1

   a_vel =a_vel +a_cr
   a_cr =0.0

   a_rv(i,k,j) =a_rv(i,k,j) +a_vel
   a_vel =0.0
   ENDDO
   ENDDO

   ENDIF
   ENDDO

   ENDIF

!LPB[1]
   DO j =jte+2, jts-2, -1

   DO k =kte, kts, -1
   DO i =ite+2, its-2, -1
   a_fqzl(i,k,j) =0.0
   a_fqyl(i,k,j) =0.0
   a_fqxl(i,k,j) =0.0
   a_fqz(i,k,j) =0.0
   a_fqy(i,k,j) =0.0
   a_fqx(i,k,j) =0.0
   a_scale_out(i,k,j) =0.0
   a_scale_in(i,k,j) =0.0
   a_field_old(i,k,j) =a_field_old(i,k,j) +a_qmax(i,k,j)
   a_qmax(i,k,j) =0.0
   a_field_old(i,k,j) =a_field_old(i,k,j) +a_qmin(i,k,j)
   a_qmin(i,k,j) =0.0
   ENDDO
   ENDDO

   ENDDO

   END SUBROUTINE a_advect_scalar_mono

END MODULE a_module_advect_em

